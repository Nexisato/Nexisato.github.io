<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【论文阅读·ImageDenoising】NBNet:Noise Basis Learning for Image Denoising with Subspace Projection</title>
      <link href="/2022/03/25/paper-20220325/"/>
      <url>/2022/03/25/paper-20220325/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 nexisato0810 AT gmail DOT com 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Shen Cheng, Yuanzhi Wang, Haibin Huang. 来自旷视&amp;快手&amp;UESTC团队</p><p>【一句话总结】：在UNet中加投影注意力层提升去噪效果</p><p>【repo】：<a href="https://github.com/megvii-research/NBNet">https://github.com/megvii-research/NBNet</a></p><h2 id="【Introduction】">【Introduction】</h2><p>​以加性噪声为例，图像去噪的主要目的是从有噪声 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">n</mtext></mrow><annotation encoding="application/x-tex">\textbf{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord text"><span class="mord textbf">n</span></span></span></span></span> 的图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">y</mtext><mo>=</mo><mtext mathvariant="bold">x</mtext><mo>+</mo><mtext mathvariant="bold">n</mtext></mrow><annotation encoding="application/x-tex">\textbf{y} = \textbf{x} + \textbf{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord textbf">y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord textbf">x</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord text"><span class="mord textbf">n</span></span></span></span></span> 中恢复得到一张干净的图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">x</mtext></mrow><annotation encoding="application/x-tex">\textbf{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord text"><span class="mord textbf">x</span></span></span></span></span>，但是由于 $\textbf{x} $ 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">n</mtext></mrow><annotation encoding="application/x-tex">\textbf{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord text"><span class="mord textbf">n</span></span></span></span></span> 的不确定性，二者是很难被分离开的. 传统的去噪方法NLM、BM3D和小波变换等利用图像和噪声模型的先验知识进行去噪，DNN则是从训练数据中学习到图像的先验和噪声分布. 不过它们依赖于卷积核对图像的局部区域过滤信号和噪声，在信噪比比较低的场景中，没有额外的全局信息就没有那么好用了.</p><p>​对此，作者团队利用投影的思想：先从输入图像生成一组基向量，将图像投影到一组子空间，再从这些子空间重建回去，可以得到一个高保真的效果.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220325110804388.png" alt="image-20220325110804388" style="zoom:80%;" /><p>​以<strong>U-Net</strong>为基础，加入了<strong>SSA(Subspace Attention，子空间注意力机制)<strong>模块用来学习子空间的基向量和图像的投影. 这个架构在</strong>PSNR</strong>和<strong>SSIM</strong>方面实现了SOTA，并且只增加了很少的计算开销.</p><h2 id="【相关工作】">【相关工作】</h2><ul><li>传统方法：依赖于图像先验知识，包括 NLM、BM3D等，计算复杂度太高，泛化能力不足.</li><li>CNN方法：<ul><li>Chen提出TRND模型用于去除高斯噪声；</li><li>DnCNN证实了用DNN去噪时残差学习和BatchNorm的有效性；</li><li>MIRNet提出了通用的图像增强架构用于去噪超分；</li></ul></li><li>通过高斯-泊松分布、相机成像模拟、高斯混合模型、GAN等方法合成噪声，在这些数据集上训练的网络同样也具有表现良好的泛化能力.</li></ul><h2 id="【网络架构】">【网络架构】</h2><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220327163509534.png" alt="image-20220327163509534" style="zoom:80%;" /><p>​如上图所示，NBNet是一种典型的U-Net风格架构，分别具有4次对称的编解码阶段：</p><ul><li>feature_map在编码阶段每次被降采样到1/2尺度，对应地在解码阶段每次反卷积到2倍的尺度；</li><li>低层编码块通过<strong>跳跃连接层</strong> 和 <strong>SSA模块</strong> 传递给对应的解码块；</li><li>考虑到低层的feature map含有更多的原始图像特征，因此低层特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\textbf{X}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 高层特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\textbf{X}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 一块被送入SSA进行计算；也就是说，经过跳跃连接的底层特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\textbf{X}_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，在上采样后得到的高层特征图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\textbf{X}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的引导下，计算得到投影图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">Y</mtext></mrow><annotation encoding="application/x-tex">\textbf{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">Y</span></span></span></span></span> ，投影到信号子空间中，然后与原来的高层特征图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\textbf{X}_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8361em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 级联融合，再经过卷积输出到下一个解码块.</li><li>最后的输出部分经过一个 3x3 的卷积进行残差计算.</li><li>loss选择L1 loss</li></ul><p>​</p><p>​    我们比较关注这个SSA模块的设计，一个是子空间的基向量如何生成，一个是如何将特征图投影到信号子空间.</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220328105817294.png" alt="image-20220328105817294"></p><h3 id="1-基向量生成">1. 基向量生成</h3><p>​考虑从一张图像上生成的两个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">X</mtext><mn>1</mn></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">X</mtext><mn>2</mn></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\textbf{X}_1, \textbf{X}_2 \in \R^{H \times W \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8805em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>  ，假设基于这两个feature map有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 个基向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>K</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ v_1, v_2, ..., v_K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub><mo>∈</mo><msup><mi>R</mi><mi>N</mi></msup><mo separator="true">,</mo><mi>N</mi><mo>=</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">v_i \in R^{N}, N = H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0358em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>.</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220328105104220.png" alt="image-20220328105104220"></p><p>​我们将两个feature map $\textbf{X}_1, \textbf{X}_2 $ 级联得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">X</mtext><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>2</mn><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\textbf{X} \in R^{H \times W \times 2C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7252em;vertical-align:-0.0391em;"></span><span class="mord text"><span class="mord textbf">X</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span> ， 然后将它送入具有 <strong>K层输出通道</strong> 的浅层残差卷积块，得到输出维度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>W</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">HW \times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的基向量矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">V</mtext><mo>=</mo><mo stretchy="false">{</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>K</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\textbf{V} = \{ v_1, v_2, ..., v_K \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">V</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> ，卷积块的权重和偏置随着训练不断更新.</p><h3 id="2-投影">2. 投影</h3><p>​ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">V</mtext></mrow><annotation encoding="application/x-tex">\textbf{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">V</span></span></span></span></span> 的每一个列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">V</mi><mo>⊂</mo><msup><mi>R</mi><mrow><mi>H</mi><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{V} \subset R^{HW}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span> 都是这个 K 维子空间的基向量，通过正交线性变换我们可以将 featrue map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">X</mtext></mrow><annotation encoding="application/x-tex">\textbf{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">X</span></span></span></span></span> 投影到每一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span> 上，首先是一个将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mi>N</mi></msup><mo>→</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">R^{N} \rightarrow \mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span> 的正交投影矩阵，经过这个变换矩阵就可以得到特征图在线性子空间的投影 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">Y</mtext><mo>∈</mo><msup><mi>R</mi><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\textbf{Y} \in R^{H \times W \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7252em;vertical-align:-0.0391em;"></span><span class="mord text"><span class="mord textbf">Y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo>=</mo><mi>V</mi><mo stretchy="false">(</mo><msup><mi>V</mi><mi>T</mi></msup><mi>V</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>V</mi><mi>T</mi></msup><mspace linebreak="newline"></mspace><mtext mathvariant="bold">Y</mtext><mo>=</mo><mi>P</mi><mtext mathvariant="bold">X</mtext></mrow><annotation encoding="application/x-tex">P = V(V^TV)^{-1}V^T \\\textbf{Y} = P\textbf{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">Y</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord text"><span class="mord textbf">X</span></span></span></span></span></span></p><h2 id="【实验】">【实验】</h2><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220328111704841.png" alt="image-20220328111704841" style="zoom:80%;" /><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20220328111717029.png" alt="image-20220328111717029" style="zoom:80%;" /><p>从消融实验中可以看到参数量主要还是来源于Blocks</p><h2 id="【总结】">【总结】</h2><p>​UNet在去噪工作里貌似蛮好用的，但是这paper里面 K 也是一个超参数，我原本以为要投影到不同的色彩通道，但是这个子空间也是构造出来的…</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 图像去噪 </tag>
            
            <tag> CV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>-lks-良心到难以置信的网站推荐</title>
      <link href="/2022/02/20/tools-weblists/"/>
      <url>/2022/02/20/tools-weblists/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本页面网站收录自B站UP主 <a href="https://space.bilibili.com/125526/">-LKs-</a>的 <strong>良心到难以置信的网站推荐系列</strong>，为防止一些特殊原因导致页面失效，特将该网站收录自本人blog下面，仅限私域流量的朋友交流学习使用。任何关于版权的问题在此免责，仅供归档，有问题请从主页联系我</p></blockquote><h2 id="第十期">第十期</h2><ul><li><a href="https://huggingface.co/spaces/PaddlePaddle/ERNIE-ViLG">AI画图-stable diffusion(中文)</a></li><li><a href="https://huggingface.co/spaces/stabilityai/stable-diffusion">AI画图-stable diffusion(英文)</a></li><li><a href="https://clipdrop.co/relight">图片二次打光</a></li><li><a href="https://pointerpointer.com/">找鼠标</a></li><li><a href="https://vultr.youmu.moe/quiz/">(小游戏)猜中国省份</a></li><li><a href="http://tylervigen.com/spurious-correlations">毫无相关性的离谱趋势</a></li><li><a href="https://douga.work/free-distribution-psdfx-001/">综艺特效字1</a></li><li><a href="https://tvsozai.com/4639/">综艺特效字2</a></li><li><a href="https://www.songsterr.com/">TABS（乐器神器）</a></li><li><a href="https://nova.astrometry.net/">星座识别</a></li><li><a href="https://pod.link/">播客搜索</a></li><li><a href="https://www.itjuzi.com/deathCompany">倒闭公司数据库</a></li><li><a href="https://cook.yunyoujun.cn/">居家简易食谱</a></li><li><a href="https://www.magiceraser.io/">擦除画面某部位（付费）</a></li><li><a href="https://ps.gaoding.com/#/">在线PS（速度快）</a></li><li><a href="https://www.irasutoya.com/">免费手绘插画</a></li><li><a href="https://wantquotes.net/">按意查句</a></li><li><a href="https://www.logonews.cn/">标志logo情报局</a></li><li><a href="https://www.woodenears.com/">耳机评测网</a></li><li><a href="http://veleap.com/console/works/material/font">免费设计素材</a></li><li><a href="https://bluemaxima.org/flashpoint/">flash游戏库</a></li><li><a href="https://howlongtobeat.com/">游戏选购指南</a></li><li><a href="https://www.nbfox.com/">高清世界名画</a></li><li><a href="http://tingshen.court.gov.cn/">中国庭审公开网</a></li><li><a href="https://wenshu.court.gov.cn/#">中国裁判文书网</a></li><li><a href="https://wizard-tool.com/">哈利波特魔法工具集</a></li><li><a href="https://www.gameuidatabase.com/">游戏ui库</a></li></ul><h2 id="第九期">第九期</h2><ul><li><a href="http://uahh.syouzyo.org/fyzhq">发音转换器</a></li><li><a href="https://azure.microsoft.com/zh-cn/services/cognitive-services/text-to-speech/#overview">真实人声生成</a></li><li><a href="https://noclip.website/">游戏地图博物馆</a></li><li><a href="https://downloads.khinsider.com/">游戏原声音乐OST</a></li><li><a href="http://www.nlc.cn/dsb_zyyfw/gj/gjzyk/">中华古籍资源库</a></li><li><a href="https://www.codingfont.com/">编程字体</a></li><li><a href="http://live.yj1211.work/index/home/areas">谁在直播</a></li><li><a href="https://vtbs.moe/">Vtuber大数据</a></li><li><a href="https://www.bookmarkearth.com/">书签地球</a></li><li><a href="http://stuffin.space/">太空里的东西</a></li><li><a href="https://bgmc-station.com/">咖啡厅BGM</a></li><li><a href="https://www.speechace.com/">英语口语能力测试</a></li><li><a href="https://www.coursera.org/">Coursera</a></li><li><a href="https://lab.magiconch.com/vaporwave/?from=home">蒸汽机风格迁移</a></li><li><a href="https://waifulabs.com/">AI生成头像·WifuLab</a></li><li><a href="https://crypko.ai/#/">AI生成头像·渐变值</a></li><li><a href="https://wantwords.thunlp.org/">万词王</a></li><li><a href="https://pluvior.com/index.html">背景音·室内</a></li><li><a href="https://virtocean.com/#">背景音·海滩</a></li><li><a href="https://jfstone.cn/salary/">工作性价比计算器</a></li><li><a href="https://www.kaiheila.cn/">开黑啦(不如用discord)</a></li><li><a href="https://z-lib.org/">全球最大科学文章图书馆</a></li><li><a href="https://tikolu.net/">Tikolu表情包融合</a></li><li><a href="https://readpaper.com/">ReadPaper在线论文阅读</a></li><li><a href="https://www.maigoo.com/">品牌排名(含竞价隐患)</a></li><li><a href="https://poncle.itch.io/vampire-survivors">游戏·吸血鬼幸存者</a></li><li><a href="https://www.67tool.com/">200+种在线工具箱</a></li><li><a href="https://sketch.metademolab.com/canvas">让图动起来</a></li><li><a href="https://www.ymgal.com/co/article">月幕Galgame</a></li><li><a href="https://greasyfork.org/zh-CN">油猴插件</a></li><li><a href="https://www.kongfz.com/">孔夫子老书交易</a></li></ul><h2 id="第八期">第八期</h2><ul><li><a href="https://xiangjianan.gitee.io/lks/">LKs网页推荐站</a></li><li><a href="https://picrew.me/">AI捏脸</a></li><li><a href="https://houxu.app/">后续·追踪热点</a></li><li><a href="http://liferestart.syaro.io/public/index.html">人生重开模拟器</a></li><li><a href="https://cn.pattern.monster/">SVG图案生成</a></li><li><a href="https://uiiiuiii.com/tools">设计素材工具整合</a></li><li><a href="http://yurafuca.com/5000choyen/index_cn.html">5000兆円生成器</a></li><li><a href="https://webamp.org/">复古音乐播放器</a></li><li><a href="https://fotosketcher.com/">油画风格迁移</a></li><li><a href="https://shindanmaker.com/1064580">令咒生成器</a></li><li><a href="http://www.impawards.com/">电影海报集合</a></li><li><a href="https://datenightmovies.com/">约会选电影</a></li><li><a href="https://autum.com/">聚类选电影</a></li><li><a href="https://if.caiyunai.com/#/">AI续写</a></li><li><a href="http://www.ziticq.com/shufa/">书法字体生成器</a></li><li><a href="https://musclewiki.com/">健身肌肉百科</a></li><li><a href="https://www.zerotohero.ca/">世界语言学习网</a></li><li><a href="https://www.tasteatlas.com/search">全球食物地图</a></li><li><a href="https://azgaar.github.io/Fantasy-Map-Generator/">幻想地图生成器</a></li><li><a href="https://sharkle.com/">3D动效随机生成</a></li><li><a href="https://osr.org/">买星星</a></li><li><a href="https://29a.ch/noise-generator/">噪音生成器</a></li><li><a href="https://dango.ai/">AI音轨分离</a></li><li><a href="https://ncm.worthsee.com/site/index">网易云音乐转mp3</a></li><li><a href="https://ykt.eduyun.cn/ykt/sjykt/index.html?from=timeline&amp;isappinstalled=0">国家中小学网课</a></li><li><a href="https://cps-check.com/cn/polling-rate-check">鼠标轮询率测试</a></li><li><a href="https://www.sony.net/united/clock/">索尼全球</a></li><li><a href="https://iss-sim.spacex.com/">SpaceX国际空间站对接模拟器</a></li><li><a href="https://www.picup.shop/currencyBatch.html">在线抠图</a></li><li><a href="https://ai.12348.gov.cn/pc/">中国法律服务网·AI</a></li></ul><h2 id="第七期">第七期</h2><ul><li><a href="http://report.seedsufe.com/index#/report">轻量级行研报告</a></li><li><a href="https://aporee.org/maps/">世界某个角落的声音</a></li><li><a href="https://www.pexels.com/zh-cn/">免费商用素材</a></li><li><a href="https://www.remove.bg/">在线抠图</a></li><li><a href="https://www.unscreen.com/">在线抠视频背景</a></li><li><a href="https://play.typeracer.com/">打字比赛</a></li><li><a href="https://airportal.cn/">AirPortal空投快传</a></li><li><a href="http://www.bbdj.com/">宝贝DJ</a></li><li><a href="https://color.adobe.com/zh/create/color-wheel">Adobe调色板</a></li><li><a href="https://sketchfab.com/">3D模型展示</a></li><li><a href="https://www.thingiverse.com/">立体实物的数字设计</a></li><li><a href="https://nuclearsecrecy.com/nukemap/">核爆模拟</a></li><li><a href="https://www.mihuashi.com/artists">米画师约稿</a></li><li><a href="https://www.dimensions.com/">尺寸参考</a></li><li><a href="https://virtual.mauritshuis.nl/index.html?lang=en&amp;startscene=21">虚拟博物馆</a></li><li><a href="https://toonme.com/">迪士尼风格迁移</a></li><li><a href="https://hanabi.data-viz.cn/index?lang=zh-CN">花火数图·可视化</a></li><li><a href="https://www.fatsecret.cn/%E7%83%AD%E9%87%8F%E8%90%A5%E5%85%BB/">中国各食物营养含量</a></li><li><a href="https://www.producthunt.com/">发现技术领域最好的产品</a></li><li><a href="https://www.tunefind.com/">从电视和电影中找音乐</a></li><li><a href="https://imisstheoffice.eu/">996身临其境</a></li><li><a href="https://thisxdoesnotexist.com/">这个不存在·GAN生成器</a></li><li><a href="https://www.tree.fm/">森林之声</a></li><li><a href="https://www.traxsource.com/dj-top-10s">西方电音收录</a></li><li><a href="https://www.ltfc.net/exhibit/recent">中华珍宝馆</a></li><li><a href="https://www.merriam-webster.com/">单词游戏</a></li><li><a href="https://landing.adobe.com/en/na/products/creative-cloud/69308-real-or-photoshop/index.html">猜真假</a></li><li><a href="https://i.snssdk.com/feoffline/ugc_activities/html/epidemic-prevention-sftr/index.html?style_id=30044">各地防疫政策查询</a></li></ul><h2 id="第六期">第六期</h2><h2 id="第五期">第五期</h2><h2 id="第四期">第四期</h2><h2 id="第三期">第三期</h2><h2 id="第二期">第二期</h2><h2 id="第一期">第一期</h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 - 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·SmartContract】Making Smart Contracts Smarter</title>
      <link href="/2021/07/16/paper-20210716/"/>
      <url>/2021/07/16/paper-20210716/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Loi Luu, Duc-Hiep Chu, Hrishi Olickel, Prateek Saxena, Aquinas Hobor. 来自NUS团队</p><p>【一句话总结】：针对以太坊智能合约的漏洞提供了一种开源检测工具作改进建议.</p><h2 id="【Introduction】">【Introduction】</h2><p>​2009年，中本聪向全世界引入了比特币，自此加密货币得到的广泛的发展与应用. 以比特币为代表的加密货币具有去中心化的特性，由网络中所有的节点(即用户)通过运行<strong>共识协议</strong>维护数据的安全可靠性. 在paper提出的2016年，智能合约成为了比特币的发展方向.</p><p>​智能合约就是**一段运行在区块链上的程序，并由共识协议保证其正确执行. ** 目前智能合约在应用层面上主要以 <code>solidity</code> 语言编写，可以规定交易过程中的任何规则(比如，合约可以规定某事件自动触发转账). 因此，智能合约可以在各种交易场景中得到广泛的应用.</p><p>​智能合约由<strong>160bit</strong>的地址标识，在区块链网络中，用户通过将交易信息发送到合约地址以调用当前加密货币的智能合约. 当要发送一笔新的交易时，这笔交易的所有参与方都会将区块链的当前状态信息、交易的有效载荷信息，作为输入，发送到这个地址，执行合约代码，通过参与共识协议，使得代码的输出与合约所规定的下一个状态相对应.</p><p>​尽管以太坊等智能合约平台预先定义好共识协议，要求所有用户必须遵循，但它在完全开放的网络环境中运行的，因而很容易遭到特定攻击者的恶意攻击，如修改交易信息或时间戳. 所以，依赖于智能合约的区块链平台，需要在底层语义上进行完善以预防这些潜在的操纵.  由于智能合约是<strong>不可逆、不可更改</strong>的，因此若不以巨大的代价逆转区块链，现有的缺陷就无法修补，从此可以看到在部署智能合约之前评估其安全性能的必要性.</p><p>​本paper以以太坊为例，记录了几个安全漏洞，并给出了相应的实际案例，作者认为这些漏洞出现的原因在于合约的编写者对底层语义的理解和合约的实际语义之间存在着<strong>语义鸿沟</strong>. 此外，作者在数万条智能合约的基础上研究它们对现实生活实际的影响，向我们展示如何利用这些漏洞窃取用户的硬币虚拟货币.</p><p>​这项工作着重强调了 与/或 缺失这一微小bug可能导致合约开发者产生了错误的安全感. 为避免直接修改现有的智能合约或以太坊的共识协议，作者提供了 <strong>Oyente</strong> 开源检测工具，帮助开发者在部署智能合约前检测潜在的漏洞.  作者使用这个工具对以太坊网络前1460000个区块链节点中的19366 条智能合约进行评估，发现8833条存在潜在的漏洞，关系到价值3千万美元的虚拟货币，且能够检测到不显著的 <strong>TheDAO</strong> 漏洞.</p><p>​总结一下，paper的主要工作有如下几点：</p><ul><li>记录了以太坊智能合约中几种新的bug(截止到paper发出的2016年)；</li><li>提出了关于修改以太坊智能合约的底层语义的一些建议；</li><li>设计了 <strong>OYENTE</strong> 工具用于分析智能合约的漏洞；</li><li>在真实的以太坊网络中测试了OYENTE 的效果，表现良好.</li></ul><h2 id="【智能合约简介】">【智能合约简介】</h2><p>​在分析paper的方法之前，先看一下什么是共识协议和智能合约</p><h3 id="共识协议">共识协议</h3><p>​所有去中心化的加密货币，在网络中的每个节点都会保存一个分类账副本，这个分类账就是一个区块链.  每个区块则保存了一系列的交易信息、上个区块的地址等，如下图所示</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210716185312629.png" alt="image-20210716185312629" style="zoom:67%;" /><p>​保存了这个分类账副本的用户节点也可以叫做<strong>矿工</strong>， 每个矿工都可以向区块链中添加包含自己一系列交易信息的区块，高层的共识机制保证了这些分类账的同步，如工作量证明机制. 只有通过工作量证明的矿工，才可以向网络中广播自己的区块，如果有效，则在每个用户节点上都会添加这位矿工的区块，达到同步.</p><h3 id="以太坊的智能合约">以太坊的智能合约</h3><p>​以太坊可以看作基于交易事务的状态机，经过每次交易 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> ，以太坊网络中的区块链状态就会发生变化：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>→</mo><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\sigma \to \sigma&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> .  智能合约是存储在区块链中的“<strong>自动代理</strong>”，通常承担着区块中“创建订单”的一部分功能.  在交易创建成功后，智能合约以“<strong>合约地址</strong>”标识，每个合约都持有一部分虚拟货币(以太坊中称为“<strong>以太币</strong>”). <strong>合约状态</strong>主要由两部分组成：<strong>私有存储空间</strong>、<strong>余额(即合约持有的虚拟货币的数量)</strong>.  以太坊智能合约代码采用低级、基于堆栈的字节码语言，称为“<strong>以太坊虚拟机(EVM)</strong>”代码. 在应用级，用户采用 <code>Solidity</code> 为代表的静态高级语言对合约进行定义，再编译为EVM字节码.  以下列合约代码为例：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210716234617084.png" alt="image-20210716234617084" style="zoom: 60%;" /><p>​该合约规定了如何对解决计算难题的用户节点进行奖赏.  合约的创建者在创建的一笔新的交易中include进来<code>Puzzle</code>的EVM字节码，当这条交易被区块链所接收，矿工们会执行三个步骤：首先，为这个新的合约<strong>分配一个全新的调用地址</strong>；然后，运行相应的<strong>构造函数</strong>(如第8行)初始化合约的<strong>私有存储空间</strong>；最后，执行匿名函数(如第15行，可以理解为main函数). 默认情况下，任何调用这个合约的交易，都会以匿名函数<code>function()</code>作为函数的入口.</p><p>​我们接着看上面这段代码，发送者的信息、发送给合约的以太币数量和调用交易包含的数据都被保存在<code>msg</code>默认输入变量中，例如，合约的所有者通过一些以太币调用交易<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">T_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 更新 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">reward</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span></span></span></span> 变量(即<code>msg.value</code>)，在此之前合约应当向这个所有者发送了与这个奖励值相等的以太币数量(即代码19行). 这样，交易<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">T_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>变为一个新的状态，与此前相比具有不同的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>e</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">reward</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span></span></span></span>变量. 类似地，用户也可以在不同的交易负载(即<code>msg.data</code>)提交对Puzzle的解决方案，若某个提交者正确则可以得到合约向它发送的奖励.</p><p>​以太坊的智能合约使用了<strong>gas机制</strong>. 具体而言，每条以太坊字节码中的指令都有预先设定的gas值，当用户发起一条交易，调用合约的时候，必须指定其愿意提供多少gas(<code>gasLimit</code>)和每单位gas的价格<code>gasPrice</code>. 当某个矿工将这条交易放入他的提议区块时，会收到实际消耗的gas和gasPrice的乘积的交易费用. 若实际消耗的gas多于<code>gasLimit</code>，那么就会因异常而终止，区块链的状态恢复到交易前，但交易的发送者仍需要向这位矿工支付所有的<code>gasLimit</code>，以对抗可能发生的资源耗尽攻击.</p><h2 id="【智能合约存在的漏洞】">【智能合约存在的漏洞】</h2><h3 id="交易顺序依赖">交易顺序依赖</h3><p>​考虑如下情形：区块链当前状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>，有一个新区块中包含两条交易 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_i, T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，这两个区块调用了同一个合约. 在这种情况下，用户便无法得知在交易调用合约时，合约处于哪个状态. 只有挖矿成功的矿工才可以决定交易的顺序，这样合约的状态就取决于矿工如何排列这些交易顺序，这类合约称为 <strong>交易顺序依赖(Transaction-Ordering Dependent, TOD)</strong> 合约.</p><p>​有对顺序的依赖，在并发情况下就会出现竞争的问题，即便在正常情况下对合约的并发调用也会产生意想不到的结果；更何况恶意的攻击. 以上文中的<code>Puzzle</code>合约为例，分情况讨论：</p><ul><li>考虑存在两个并发的交易请求 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>T</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">T_u, T_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">T_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来自合约的所有者，用于更新<code>reward</code>值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">T_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 来自用户，用于提交解决方案以获得奖励. 由于两个交易请求被并发地广播出来，所以在矿工的提议区块中会将这两条交易包括进来. 交易的顺序取决于提交者要获得多少奖励. 但如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">T_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 先被执行，提交者很可能会得到与期望不一样的<code>reward</code>. 特别地，在卖方频繁更新价格的场景中，由于TOD的问题很可能导致买家需要支付比观测价格更高的费用.</li><li>对于恶意攻击者而言，TOD的漏洞可以被恶意牟利. 注意到，在提交者广播<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">T_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">T_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 被放入新区块中存在着一个时间差，这样合约的所有者可以通过监听获取到交易<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">T_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，以及对应问题的解决方案. 这样合约的所有者就以更高的 <code>gasPrice</code>(这样可以激励矿工将这条交易放在提议区块中，顺序先于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">T_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)向网络提交答案.</li></ul><h3 id="时间戳依赖">时间戳依赖</h3><p>​时间戳依赖合约以区块的时间戳作为触发器执行某些操作. 以如下<code>theRun</code>为例</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717102402165.png" alt="image-20210717102402165" style="zoom:60%;" /><p>​该函数第9-10行按照先前区块的哈希值作为随机数种子计算输出，第5-7行基于当前区块的时间戳决定选择哪一个区块.</p><p>​矿工在挖出一个区块时，要为这个区块打上时间戳，这个时间戳取决于矿工本地系统时间，误差范围<strong>900s</strong>. 在区块链接收到这一新的区块时，先检查时间戳是否大于上一个区块，在对误差范围进行检验. 在这样一个比较大范围的时间差内，攻击者就可以选择不同区块的时间戳来操纵时间戳依赖的合约的输出结果.</p><p>​以<code>theRun</code>为例，先前区块的哈希值、<code>Last_payout</code>等变量都是已知的，因此就可以预先计算所有对自己有利的时间戳，最终这个操作区块时间戳的攻击者可以将这个调整这个随机种子的输出为任意值.</p><h3 id="未处理异常">未处理异常</h3><p>​在以太坊中，一个合约可以用多种方式调用另外一个合约，如<code>send</code>指令或调用函数，若在被调用方的合约中出现了异常，那么被调用合约就会中止，恢复状态并返回false. 但如果调用方采用如<code>send</code>指令等方式调用，如果不检查被调用方的返回值，这个异常可能不会被发送给调用者，异常无法得到处理，且这种情况很容易出现.  以如下代码为例</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717113850467.png" alt="image-20210717113850467" style="zoom:60%;" /><p>​这个<code>KoET</code>代码段在第15行没有检查<code>compensation</code>交易的返回值便直接声明了<code>king</code>. 因此如果这个交易没有正常执行的话，当前的<code>king</code>就可能丢失掉trone，并且没有任何的<code>compensation</code>. 其实，在合约向动态的地址发送资金时，经常发生上述类似的问题，因为<strong>发送方不知道要分配多少gas</strong>，因此合约应当始终检查交易是否正常执行.</p><p>​在这个场景下，被调用方的异常导致<code>send</code>调用失败，攻击者在调用合约的时候会刻意造成send的失败. EVM调用堆栈的深度限制为1024帧，如果在合约中调用一次，栈帧增加一个. 在上述代码中，攻击者可以在向<code>KoET</code>发送指令前，准备一个合约，故意调用1023次，这样在这个交易到达<code>KoET</code>合约的时候，这个合约的调用栈帧就满了，从而第15行的send指令失败，当前的king就不会得到任何的资金. 这样对攻击者没有任何的直接利益，不过存在一些合约在调用堆栈限制的基础上，采用传销的方式进行获利.</p><h3 id="可重入漏洞">可重入漏洞</h3><p>​在以太坊中，当一个合约调用另一个合约时，会进入中断，等待被调用方执行完成. 如果被调用合约需要使用调用方所处的中间状态时，可能会导致一些问题，而且这种问题在编写的时候并不会被明显地发现. 如下所示</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717120943761.png" alt="image-20210717120943761" style="zoom:60%;" /><p>​在第11行将提款人的当前余额发送到一个用于提款的合约的地址，这个提款人的余额由内部变量<code>userBalance</code>表示，但是<code>userBalance</code>在调用后才会变为0，智能合约在转账的时候会调用收款方的<code>fallback</code>函数，如果它调用发款方的函数，就会产生循环调用转账的现象，直到合约的以太币清0或者gas耗尽.</p><h2 id="【如何设计更好的智能合约】">【如何设计更好的智能合约】</h2><h3 id="以太坊的操作语义">以太坊的操作语义</h3><p>​作者对以太坊的操作语义进行了“形式化”，以太坊中的用户账户状态为为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> ，经过交易 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 映射后转化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\sigma&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>. 矿工们形成区块链并验证区块的过程如下所示：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717151541083.png" alt="image-20210717151541083" style="zoom:55%;" /><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>B</mi><mi>C</mi><mo separator="true">,</mo><mi>σ</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;BC, \sigma&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">BC</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> 表示区块链及其当前的状态，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi></mrow><annotation encoding="application/x-tex">\Gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Γ</span></span></span></span> 表示即将发生的交易的集合. 只有被选取到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">leader</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span> 才能运行成功一次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>R</mi><mi>O</mi><mi>P</mi><mi>O</mi><mi>S</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">PROPOSE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">PROPOSE</span></span></span></span> 阶段，对于其他的矿工只需要在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">leader</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span> 广播区块之后运行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>C</mi><mi>C</mi><mi>E</mi><mi>P</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">ACCEPT</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">CCEPT</span></span></span></span> 规则进行状态转移即可.</p><p>​其次，作者定义了以太坊虚拟机的执行状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">μ</span></span></span></span>,  调用记录堆栈定义为：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717153444533.png" alt="image-20210717153444533" style="zoom:55%;" /><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 表示一个调用堆栈， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 表示空的调用记录栈，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>e</mi><msub><mo>&gt;</mo><mrow><mi>e</mi><mi>x</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">&lt;e&gt;_{exc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">&gt;</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示被抛出的异常，四元数组的含义为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">M :</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span> 合约代码数组；$pc : $ 下一条指令执行的地址；$l : $ 辅助存储空间；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">s:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span> 操作数堆栈.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717154020675.png" alt="image-20210717154020675" style="zoom:55%;" /><p>​作者将以太坊的一笔交易定义为三元组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>l</mi><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&lt;id, v, l&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span></span></span></span> ，分别代表要调用的合约、需要向合约中充值的资金、用于捕获输入参数值的数组. 上图第一条语义表示交易的正常执行过程，第二条表示交易触发异常而中止的语义. 交易的执行需要满足两个性质：<strong>原子性</strong>、<strong>一致性</strong>.</p><p>​此外，作者将EVM提炼成指令语言 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>L</mi><mi>i</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">EtherLite</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">Et</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal">L</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span></span></span></span> ，在Solidity等高级语言进行编译后会插入如下集合中的某些指令：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717161849425.png" alt="image-20210717161849425" style="zoom:60%;" /><h3 id="设计更好语义的一些建议">设计更好语义的一些建议</h3><h4 id="受保护的交易-TOD">受保护的交易(TOD)</h4><p>​要减轻TOD的问题，我们需要保证合约代码的调用要么返回预期的输出，要么执行失败，即便在交易中的存在不确定的交易记录, 在此前交易语义设计的基础上，类似于现代处理器中的CAS指令，作者新增加了一个保护规则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span>，只有交易状态满足规则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi></mrow><annotation encoding="application/x-tex">g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span> 的时候交易才会被执行，若不满足则被 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>X</mi><mo>−</mo><mi>S</mi><mi>T</mi><mi>A</mi><mi>L</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">TX-STALE</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">TX</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">ST</span><span class="mord mathnormal">A</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 删除.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717164639124.png" alt="image-20210717164639124" style="zoom:55%;" /><h4 id="确定性时间戳">确定性时间戳</h4><p>​实际上，允许合约访问区块时间戳本身就是冗余的，这反而使得合约更容易受到攻击者的操纵. 区块时间戳一般有两个作用，作为确定性的随机种子；或分布式网络中的全局时间戳. 合约不应当使用易于操作的时间戳，而应当使用区块的索引，通过创建新区块的方式模拟全球的时间，这样攻击者合约就无法利用区块时间戳自由输出.</p><h4 id="更合理地处理异常">更合理地处理异常</h4><p>​一个合理的解决方案是在合约调用另一个合约时，检查返回值. 这种解决方案是在Solidity编译器中插入一个新的代码片段转发异常，不过这使得交易的原子属性也被破坏.  最好的解决方案还是从EVM级别入手，将异常从调用者转发给被调用者，但是这需要所有用户升级. 其实在被调用方可以采取一些适当的异常处理机制，比如在被调用方的通过显式的 <code>throw</code>或者<code>catch EVM</code>等指令，若抛出的异常未能被正常处理，可以恢复调用者的状态. 不过对于刻意的攻击者来说，他们仍然可以在合约中插入漏洞，<code>throw</code>等操作对这种情况仍然没有帮助.</p><h2 id="【OYENTE-Tool】">【OYENTE Tool】</h2><p>​先前的解决方案其实都是要求客户端进行升级的，对此作者团队提供了一个开源工具<code>OYENTE</code>，功能主要有：辅助开发者编写合约；避免用户调用有问题的合约. 某些扩展的分析功能可以作为独立的插件模块，比如估计合约在最坏情况下消耗多少gas.</p><p>​<code>OYENTE</code>是<strong>基于符号执行</strong>的，它将程序变量的值转化为符号表达式作为输入.  每条符号路径需要遵循一系列路径条件才可行. 符号执行方式可以静态地逐路径推理程序，相比于需要输入的动态测试不需要模拟执行环境. 另一方面，相比于静态污点分析或者数据流分析的传统方法，符号执行可以通过推理路径实现更高的检测精度.</p><p>​总体架构的设计如下所示：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717173728032.png" alt="image-20210717173728032" style="zoom:67%;" /><ul><li>输入：待分析合约的字节码和以太坊当前的全局状态，</li><li>输出：存在问题的符号路径</li></ul><p><code>OYENTE</code>采用模块化设计，由<code>Python</code>语言实现，使用<code>Z3</code>作为求解器，可以模拟EVM代码的执行环境，包括四个主要部分：</p><ul><li><code>CFGBuilder</code>：上半部分的<strong>控制流图(Control Flow Graph, CFG)</strong> 构造器，用于支持<code>Oyente</code>可视化交互，对CFG和有问题的符号路径进行可视化. CFG的节点表示执行代码的区块，边表示区块之间的执行跳转.</li><li><code>Explorer</code>：是用于符号执行的主要模块，核心是一个解释器循环，它通过获取区块运行的状态，再在这个状态的上下文中执行单个指令，直到没有剩余状态或超时.</li><li><code>CoreAnalysis</code>：<code>Explorer</code>的输出传递给<code>CoreAnalysis</code>用于定位合约中的漏洞，由各个不同的子模块检测相应的智能合约漏洞.</li><li><code>Validator</code>：过滤掉一些误报，用于验证<code>CoreAnalysis</code>的追踪记录.</li></ul><h2 id="【方案评估】">【方案评估】</h2><p>​作者的团队在以太坊前 1459999 个区块中的所有合约运行了<code>Oyente</code>用于定性和定量分析，目的有三个：测量前文所提安全漏洞存在的普遍性；强调<code>Oyente</code>的设计由现实智能合约的特征驱动；提供某些合约开发者忽视以太坊的底层语义差距的案例.</p><p>​作者团队收集了在这些区块中收集了19366条合约(实验时间2016.5.5)，总共余额为3068654以太币，在论文撰写的当时价值约3kw美元. 这些合约的余额差距很大，绝大多数合约没有任何以太币，有些合约的以太币余额高达240w，平均每条合约持币318.5，价值4523美元.    此外，各个合约的复杂度也不同，下图展示了这些合约中的指令数量</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717221611031.png" alt="image-20210717221611031" style="zoom:60%;" /><p>​由于很少有合约提供Solidity源代码，团队选择在EVM字节码上运行<code>Oyente</code>检测工具，分析了共 366213 条可执行路径，在Amazon EC2上分析约3000小时.</p><h3 id="定性分析">定性分析</h3><p>**实验环境：**4个Amazon EC2云服务器实例，每个实例包含40个Amazon vCPU和160GB内存，OS为Ubuntu 14.04，Z3 v4,4,1作为求解器，<code>Oyente</code>的每个组件的运行时限30min，Z3的请求超时限制在1s.</p><p><strong>性能分析：</strong> 平均每个合约分析350s，每个合约的符号执行路径从1到4613不等，平均19条，中位数为6，运行时间取决于路径的数量，即合约运行的复杂度.</p><p><strong>实验结果：</strong></p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717222925567.png" alt="image-20210717222925567" style="zoom:60%;" /><p>​对于发现到的每个安全问题，<code>Oyente</code>都会报告是哪种类型的漏洞，统计图如上图所示, 误报率为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6.4</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">6.4 \%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">6.4%</span></span></span></span>.</p><p>​可以看到，<strong>未处理异常</strong> 在所有漏洞中出现的次数最多，基于观测的主要原因在于每个合约可能会调用函数、库、或嵌套合约等，从而增加了调用堆栈的深度. 下图统计了这些合约运行时调用堆栈的深度，表明绝大部分合约调用并不会超过这个深度，因此在良性的调用中，异常通常为未处理的.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717225136415.png" alt="image-20210717225136415" style="zoom:60%;" /><p>​TOD合约中有32份具有源代码，其中9份被判定为FP，其中一份源代码如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717225629689.png" alt="image-20210717225629689" style="zoom: 80%;" /><p>​以太币有两个独立的执行流，但是它们执行的顺序并不影响合约的输出. <code>Oyente</code>虽然检测到了两条执行流，并判为潜在的漏洞合约，但实际上这两条交易并不需要规定严格的顺序，因此需要消耗更多的时间进一步分析以避免误报.</p><p>​特别的，在检测到的可重入处理中，有1份可用的合约源码存在不易被发现 <strong>TheDAO</strong> 漏洞，还有1份虽然存在可重入漏洞，但由于采用了 <code>SEND</code>调用方式，并不需要向被调用方发送 <strong>gas</strong> ，因此一定程度上降低了遭受到可重入攻击的危害.</p><h3 id="定量分析">定量分析</h3><p>​ 以<code>PonziGovernmentMental</code>为例</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210717231152261.png" alt="image-20210717231152261" style="zoom:67%;" /><p>​该合约是被<code>Oyente</code>标记为未处理异常的合约中以太币余额最多的一份. 主要功能逻辑为：接收用户的投资，这笔资金发送到先前投资者和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">jackpot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ja</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span></span></span></span> 中；若超过12小时没有受到新的投资，则最后一个投资者和合约的所有者共享 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>p</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">jackpot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ja</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span></span></span></span>. 合约中采用了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>e</mi><mi>n</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">send</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">se</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span></span></span></span> 指令发送以太币，因此无法检查发送操作是否成功，容易遭到攻击，主要有下列三种</p><ul><li><strong>攻击者从投资者手中窃取以太币</strong>：以第11行为例，目的在于债权人还清账后向合约所有者发送资金. 此时如果所有者故意使得调用栈深度调整为1023，那么<code>send</code>指令不会成功，再进行一次调用将导致合约的所有者收到全部的余额，使得投资者对合约的投资失效.</li><li><strong>操纵合约的输出</strong>：此外，这还是一条时间戳依赖的合约, 如第5行，合约通过区块的时间戳决定当前时间, 因此矿工可以通过设置提议区块的时间戳获取到对自己有利的输出.</li><li><strong>锁定或破坏其他人的资金</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>I</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">EtherID</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">Et</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 是以太坊中比较活跃的一个合约，它作为以太坊网络的ID注册商，允许用户习性购买注册 EtherID . 代码中也采用了 <code>send</code> 的方式向所有者付款，其次再更改 ID 所有权. 但是未处理异常的情况下，ID 的所有者可能接收不到付款，却仍需要向买家转移所有权，这样以太币就被所在了合约中.   团队在以太坊网络中用自己的账户进行了相应的攻击测试.  它们试图创建自己的 EtherID，实验发现当买家恶意调用合约使得调用堆栈溢出时，卖方在没有收到相应的付款的情况下将ID出售，以太币却永远贮存在了合约中.</li></ul><h2 id="【后记】">【后记】</h2><p>​这篇paper的篇幅比较长，在我没有智能合约相关研究背景的情况下阅读起来有些困难. 总结一下本文的思路：在区块链的兴盛背景下，引入了使用智能合约以太坊. 首先解释了加密货币和智能合约的基本原理，然后引入了智能合约的四种潜在的漏洞，针对这些漏洞对智能合约的开发者提供了一些EVM级的语义修改建议，并提出了<code>Oyente</code>检测工具用于分析合约是否具有某种潜在类型的漏洞，并通过在以太坊网络环境中实际部署测试验证了它的有效性.</p><p>​区块链近年来的研究方向聚焦于智能合约，以我目前而言接触到paper研究方向为智能合约的漏洞检测. 本paper由于发表于2016年，神经网络相关的研究方法还没有被广泛应用，因此在EVM级进行了检测，但更细致的实现机制仍然需要通过研究<code>Oyente</code>的源码进行分析. 目前流行的智能合约漏洞检测手段考虑采用图卷积的方式，通过建图分析其不同函数之间的调用关系，对异常函数直接打上标签，进一步可以得到更细粒度的诱因.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 区块链 </tag>
            
            <tag> 智能合约 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·DeepLearning】Deep Residual Learning for Image Recognition</title>
      <link href="/2021/06/30/paper-20210630/"/>
      <url>/2021/06/30/paper-20210630/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, 来自微软研究院</p><p>【一句话总结】：大名鼎鼎的ResNet</p><h2 id="【Introduction】">【Introduction】</h2><p>​深度卷积神经网络在图像分类应用上有很大的突破. 通过堆叠更多的层，使得深度神经网络以“端到端”的方式构成了不同层级的特征分类器，网络的深度对于模型学习效果的影响很大. 于是就有这样一个问题：“层数越多的网络，学习效果就越好吗？”</p><p>​随着深度的增加，一些显著的问题就会暴露出来，最著名的是“<strong>梯度消失</strong>” 和 “<strong>梯度爆炸</strong>” 问题，从训练一开始就会阻碍网络的训练. 这两个问题使用 “<strong>初始归一化</strong>” 和 “<strong>中间归一化</strong>” 的方法即可在很大程度上得到解决，使得具有数十层神经网络在SGD进行BP优化时可以收敛.</p><p>​然而，当网络层数加深时，容易发生 “<strong>退化(degradation)</strong>” 现象：即模型在训练集上的精度达到饱和，随后迅速下降. 这并不是过拟合问题，而且在此时如果要添加更多的网络层数，用于“<strong>恒等映射(identity mapping)</strong>” （输出直接拟合输入），不仅不会保持浅层网络学习的效果，反而会造成更大的训练误差，如下图所示.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210630225457975.png" alt="image-20210630225457975" style="zoom:80%;" /><p>​作者提出了一种“<strong>深度残差学习框架</strong>”用于解决退化问题. 将新堆叠的层用于拟合“<strong>残差映射(Residual mapping)</strong>”，而非“<strong>底层映射（Underlying mapping）</strong>”.  如下图<code>Figure 2</code>，我们假设整个 building block的输出为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{H}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，表示底层映射；新堆叠的非线性层用于拟合一个 “<strong>残差函数</strong>” <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{F}(x) = \mathcal{H}(x) - x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> . 我们作这样一个假设：优化残差映射 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，要比优化原始底层映射 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{H}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 要更容易；进而在极端情况下，通过优化得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathcal{F}(x) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span> ，要比通过一堆非线性层优化得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">H(x) = x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 更容易.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210630230353215.png" alt="image-20210630230353215" style="zoom:80%;" /><p>​这个残差函数可以通过上图所示的具有“<strong>快捷连接(Shortcut connections)</strong>”结构的前馈神经网络实现. 快捷连接指的是某层网络的输出，跨过一层或多层神经网络进行连接. 在上图的结构中，<strong>快捷连接用于恒等映射</strong>，快捷连接的输出被添加到堆叠层的输出中.   这种连接方式，既不会带来额外的参数，又不会增加计算复杂度，网络依然可以通过使用带有BP的SGD优化器进行端到端训练.</p><p>​作者在ImageNet数据集和CIFAR-10数据集上进行了实验验证，得到如下结论：</p><ol><li><p>深度残差网络易于优化，但是一些“plain”网络（简单地进行堆叠）只是随着网络深度的增加引入了更多的训练误差.</p></li><li><p>通过大幅度增加网络深度，深度残差网络的识别精度可以得到显著提升.</p></li></ol><h2 id="【深度残差学习】">【深度残差学习】</h2><h3 id="残差学习">残差学习</h3><p>​现在回顾一下底层映射 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{H}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，假设它是由一些堆叠层（并非整个网络）拟合得到的. 其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 代表这些堆叠层中第一层的输入，我们让这些非线性堆叠层的输出，去<strong>近似拟合残差函数</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{F}(x) = \mathcal{H}(x) - x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> ；这样，原始的底层映射函数就可以表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">H</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{H}(x) = \mathcal{F}(x) + x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> ，两个表达式拟合的难度是不一样的.</p><p>​如我们在【Introduction】中讨论的那样，如果新堆叠的层用于恒等映射，那么具有更深层网络的模型，训练误差不应该高于浅层网络的训练误差. 但是神经网络的退化问题表明，求解器(特指SGD等)是很难通过多个非线性层去拟合恒等映射的. 因此，我们对这样一个待优化目标函数表达式进行重构，如果恒等映射是最优的，那么求解器就可以在训练中使得非线性层的训练权重逐步逼近为0，从而接近恒等映射.</p><p>​但是在现实案例中，我们不太可能得到最优恒等映射（多个非线性层为0）.  但是通过我们的残差函数，我们通常会得到很小的响应（学习到的权重很小），从而说明我们这样一个近似的恒等映射可以为模型提供合理的预处理.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210701004512886.png" alt="image-20210701004512886" style="zoom:80%;" /><h3 id="通过快捷连接实现恒等映射">通过快捷连接实现恒等映射</h3><p>​我们对每一个堆叠的层都采用残差学习的方法.  在本文中，<code>Figure2</code>所示的building block模型可以表示为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y = \mathcal{F}(x_i,\{W_i\}) + x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 分别代表building block的输入输出向量，函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F}(x_i,\{W_i\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span></span></span></span> 表示这几个堆叠层需要学习的残差映射函数. 如 <code>Figure2</code>中的结构，则该函数就可以表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo>=</mo><msub><mi>W</mi><mn>2</mn></msub><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mn>1</mn></msub><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F} = W_2 \sigma(W_1 x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose">)</span></span></span></span> 表示ReLU激活函数和偏置，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{F} + x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 就是经过加入快捷连接得到的输出，并再次经过一个非线性激活层得到输出（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>）.</p><p>​快捷连接不引入额外的参数，也不增大计算复杂度，这是残差网络思想的核心. 我们对 plain network 和 residual network进行对比：假设它们具有同样多的参数、网络深度、宽度和计算代价，设定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi></mrow><annotation encoding="application/x-tex">\mathcal{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span></span></span> 的维度相同（否则进行在快捷连接进行线性投影，对二者的维度进行匹配：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mo>+</mo><msub><mi>W</mi><mi>s</mi></msub><mi>x</mi></mrow><annotation encoding="application/x-tex">y = \mathcal{F}(x_i,\{W_i\}) + W_sx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span></span></span></span>）).</p><p>​后续的实验证明，直接连接的恒等映射已经足以解决神经网络的退化问题，因此在实际模型应用中不需要额外引入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">W_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，此处仅仅用于对齐维度.</p><p>​building blocks实际上可以堆叠多层，但是并不建议只堆叠一层，因为这相当于线性映射 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>W</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y = W_1 x + x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> ，作者尚未观察得到一层 building block的优点. 此外，作者目前为止举的例子都在全连接层上，实际上残差学习模型也可应用于卷积层，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F}(x_i,\{W_i\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span></span></span></span> 可以表示多个卷积层，快捷连接的逐元素相加，在卷积层中表现为两个feature map逐channel相加.</p><h3 id="网络架构">网络架构</h3><p>​作者提供了普通网络结构和残差网络结构与VGG19的在ImageNet上的模型对比图，如下所示</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210701004646778.png" alt="image-20210701004646778"></p><p>​详细参数如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/%20typora-user-images/image-20210701004949441.png" alt="image-20210701004949441" style="zoom:80%;" />]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> CNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·推荐系统】Matching User with Item Set:Collaborative Bundle Recommendation with Deep Attention Work</title>
      <link href="/2021/06/24/paper-20210624/"/>
      <url>/2021/06/24/paper-20210624/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Liang Chen, Yang Liu, Xiangnan He, Lianli Gao, and Zibin Zheng.</p><p>【一句话总结】：利用注意力机制和多任务学习的思想，提出了一种新的捆绑推荐模型.</p><h2 id="【Introduction】">【Introduction】</h2><p>​推荐系统的发展对于减轻信息过载、提升用户体验、增加服务商流量而言，已被证明为一种非常有效的方法. 类似于信息检索，推荐本质上就是估计用户和商品之间的匹配分数. 在现实世界中，应用提供商需要向用户推荐一组而非单个物品，比如网易云音乐的每日推荐、家具的套装等等，这种推荐任务我们称之为 <strong>“捆绑推荐”</strong>.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626150623045.png" alt="1" style="zoom:80%;" /><p>​在电商平台，捆绑推荐常用于促销活动中，比如可以以一定折扣购买一组商品，从而提高那些很少被单独购买的商品的曝光量. 常用的捆绑推荐策略是按照某种准则将不同商品合为一组（如上图的电子产品按照功能互补关系进行捆绑销售），再建模分析用户对于这些捆绑组的喜好. 在捆绑推荐系统上线之后，我们可以根据用户的行为日志，改进推荐策略.</p><p>​我们假设在用户和捆绑组之间，存在着一定数量的交互行为，这个数量可以反应用户对于这个捆绑组的偏好. 如果利用协同过滤，将一个“捆绑组”视为单个商品，会有如下难题：</p><ul><li><strong>非原子性</strong>： 一个捆绑组里的商品可能并不是同一类的，不同商品具有不同特征.</li><li><strong>交互稀疏</strong>： 只有当用户对于这个捆绑组里大部分商品都满意时，才会选择购买. 况且只要替换掉其中一个物体，就形成了一个新的捆绑组，因此用户和单个“捆绑组”的交互可能会更加稀疏.</li></ul><p>​      基于此，这篇paper提出的DAM(Deep Attentive Multi-Task)捆绑推荐策略解决方案如下：</p><ul><li>聚合物体的嵌入信息，用来表示捆绑组的特征，并引入了分解的注意力机制网络，捕获不同用户偏好同一个捆绑组的原因;</li><li>集成了用户—物品嵌入信息，共享用户嵌入和物品嵌入信息进行对用户—捆绑组、用户—物品喜好进行预测. 模型训练采用 <strong>多任务耦合</strong> 方式，用户—物品 喜好预测视为一个任务，用户—捆绑组 喜好预测视为另一个任务，从而模型在任务之间进行转移.</li></ul><h2 id="【模型构建】">【模型构建】</h2><ul><li><p><strong>输入：</strong> 用户集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi></mrow><annotation encoding="application/x-tex">\mathcal{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span></span></span>, 物品集合  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span> ,捆绑包集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">B</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>b</mi><mi>k</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\mathcal{B} = \{b_1,b_2,...,b_k\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.03041em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> , 捆绑包中的组成物品  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi mathvariant="script">G</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi mathvariant="script">G</mi><mrow><mi mathvariant="normal">∣</mi><msub><mi>b</mi><mi>s</mi></msub><mi mathvariant="normal">∣</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ \mathcal{G}_1, ..., \mathcal{G}_{|b_s|}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3552em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0593em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0593em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> ，用户—物品交互矩阵  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">H</mtext></mrow><annotation encoding="application/x-tex">\textbf{H}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">H</span></span></span></span></span>, 用户—捆绑包交互矩阵  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="bold">R</mtext></mrow><annotation encoding="application/x-tex">\textbf{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6861em;"></span><span class="mord text"><span class="mord textbf">R</span></span></span></span></span> .</p></li><li><p><strong>输出：</strong> 对于每个用户 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span> ，对捆绑包 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7805em;vertical-align:-0.0972em;"></span><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span> 的喜好函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>u</mi></msub><mo>:</mo><mi mathvariant="script">G</mi><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">f_{u}: \mathcal{G} \to R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7805em;vertical-align:-0.0972em;"></span><span class="mord mathcal" style="margin-right:0.0593em;">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> .</p><p>不过事实上，有一些新的捆绑组并没有出现在集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">B</mi></mrow><annotation encoding="application/x-tex">\mathcal{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.03041em;">B</span></span></span></span> 中，比如有些电商平台向用户推荐一些新一组的促销商品，这要求模型还要对未出现在集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">B</mi></mrow><annotation encoding="application/x-tex">\mathcal{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.03041em;">B</span></span></span></span> 中的捆绑组进行评分.</p></li></ul><h3 id="捆绑组特征学习">捆绑组特征学习</h3><p>​一个捆绑组包含ID+组成物品两部分，此处将物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 物品对应到嵌入向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">v</mtext><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\textbf{v}_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> ,然后聚合一个捆绑组中所有的物品嵌入信息，得到这个捆绑组的嵌入信息.  但是如何聚合是个很大的问题，需要针对一个组中不同物品的重要性进行加权、针对不同用户对加权方案调整，因此，作者利用注意力机制，设计了一种自适应加权、求和、运算的捆绑组嵌入信息计算方案，公式如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mtext mathvariant="bold">b</mtext><mi>s</mi></msub><mo>=</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi mathvariant="script">G</mi><mi>s</mi></msub></mrow></munder><mfrac><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><munder><mo>∑</mo><mrow><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msub><mi mathvariant="script">G</mi><mi>s</mi></msub><mi>α</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow></munder></mfrac><msub><mtext mathvariant="bold">v</mtext><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\textbf{b}_s = \sum _{j \in \mathcal{G}_s} \frac{\alpha(i,j)}{\sum_{j&#x27; \in \mathcal{G}_s \alpha(i,j&#x27;)}}\textbf{v}_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.8574em;vertical-align:-1.4304em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.0593em;">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0593em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2253em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.0593em;">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0593em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4747em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1607em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord text"><span class="mord textbf">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">b</mtext><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\textbf{b}_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代表第 $s $ 个捆绑组的嵌入信息；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 表示用户 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 和 这个捆绑组进行交互时，物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 所占的权重，为了减少捆绑组大小的影响，引入了L1正则化进行调整.</p><p>​根据注意力机制，需要在用户嵌入和物品嵌入层上面加上一层 <strong>多层感知机</strong> ，用来估计这个权重大小.  由于大多数情况下，观测到的用户和物品之间的交互关系是稀疏的，因此使用下面的低阶模型估计权重（称为<strong>分解注意力机制网络</strong>）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>α</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msubsup><mtext mathvariant="bold">u</mtext><mi>i</mi><mi>T</mi></msubsup><msub><mtext mathvariant="bold">a</mtext><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha(i,j) = exp(\textbf{u}_i^T \textbf{a}_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1774em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord text"><span class="mord textbf">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext mathvariant="bold">a</mtext><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\textbf{a}_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 是物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的物品注意力向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mtext mathvariant="bold">u</mtext><mi>i</mi><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">\textbf{u}_i^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> 表示用户嵌入向量，这是为了涵盖到用户可能单喜欢物品 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> ，但不喜欢捆绑销售的情况.</p><h3 id="用户—捆绑组交互-和-用户—物品交互-的联合建模">用户—捆绑组交互 和 用户—物品交互 的联合建模</h3><p>​得到用户嵌入和捆绑组嵌入之后，可以构建用户—捆绑组预测映射模型：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>r</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>s</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">b</mtext><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{r}_{is} = f_{bundle}(\textbf{u}_i, \textbf{b}_s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​关键还是得到映射函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{bundle}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，作者选择了 NCF (Neural Collaborative Filtering)框架，它具有神经网络结构，适用于对嵌入信息进行集成；且可以添加多个非线性层进行学习，得到复杂的映射函数.</p><p>​用户—物品交互的预测映射模型定义为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">v</mtext><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{h}_{ij} = f_{item}(\textbf{u}_i, \textbf{v}_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.244em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​现在要考虑如何将两个任务进行关联，直观的解决方案是分别使用多层感知机作为映射模型：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>r</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">b</mtext><mi>s</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">v</mtext><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{r}_{is} = MLP_{bundle}(\textbf{u}_i, \textbf{b}_s) \\\hat{h}_{ij} = MLP_{item}(\textbf{u}_i, \textbf{v}_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.244em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​对于这两个预测任务而言这还不够，还需要从对方的预测模型中提取出信息，而现在这两个MLP的参数却是相互独立的，对此，作者提出了如下的共享MLP层架构</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626162553505.png" alt="2" style="zoom:80%;" /><p>​得到新的预测模型如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>r</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>s</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">b</mtext><mi>s</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow></msub><mo stretchy="false">(</mo><mi>M</mi><mi>L</mi><msub><mi>P</mi><mrow><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub><mo stretchy="false">(</mo><msub><mtext mathvariant="bold">u</mtext><mi>i</mi></msub><mo separator="true">,</mo><msub><mtext mathvariant="bold">v</mtext><mi>j</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{r}_{is} = MLP_{bundle}(MLP_{shared}(\textbf{u}_i, \textbf{b}_s) )\\\hat{h}_{ij} = MLP_{item}(MLP_{shared}(\textbf{u}_i, \textbf{v}_j))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">ha</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.244em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">ha</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord textbf">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p><p>​这种利用隐层将两个相关的预测任务进行联合. 架构在推荐系统领域还没有被提出过，从计算机视觉领域的低层卷积得到的启示思路.</p><p>​现在考虑用户 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和捆绑组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">b_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，如果它们之间没有交互行为的话，是不能说明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 对于捆绑组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">b_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 没有兴趣的，因为用户可能并没有了解到这个捆绑组的渠道. 由此，作者采用 BPR(Bayesian Personalized Ranking) loss 进行捆绑组loss设计</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munder><mo>∑</mo><mrow><mi>s</mi><mo>∈</mo><msub><mi mathvariant="script">R</mi><mi>i</mi></msub></mrow></munder><munder><mo>∑</mo><mrow><mi>t</mi><mo mathvariant="normal">∉</mo><msub><mi mathvariant="script">R</mi><mi>i</mi></msub></mrow></munder><mo>−</mo><mi>l</mi><mi>n</mi><mi>σ</mi><mo stretchy="false">(</mo><msub><mover accent="true"><mi>r</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>s</mi></mrow></msub><mo>−</mo><msub><mover accent="true"><mi>r</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>λ</mi><mi>b</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">Θ</mi><mi>b</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">L_{bundle} = \sum_{i = 1} ^ N \sum_{s \in \mathcal{R}_i} \sum_{t \notin \mathcal{R}_i} -ln \sigma(\hat{r}_{is} - \hat{r}_{it}) + \lambda_b ||\Theta_b||_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3443em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight"><span class="mord mtight"><span class="mrel mtight">∈</span></span><span class="mord vbox mtight"><span class="thinbox mtight"><span class="llap mtight"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord mtight"><span class="mord mtight">/</span><span class="mspace mtight" style="margin-right:0.0651em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mord mtight"><span class="mord mathcal mtight">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">nσ</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{R}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示与用户 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 交互过的所有捆绑组，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span> 视为正例，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 视为负例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose">)</span></span></span></span> 是一个 sigmoid 型函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Θ</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">\Theta_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示捆绑组喜好预测任务中的模型参数，并且引入了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 正则化.</p><p>​类似地，用户—物品喜好预测任务的损失函数设计采用同一组思路</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi mathvariant="script">H</mi><mi>i</mi></msub></mrow></munder><munder><mo>∑</mo><mrow><mi>l</mi><mo mathvariant="normal">∉</mo><msub><mi mathvariant="script">H</mi><mi>i</mi></msub></mrow></munder><mo>−</mo><mi>l</mi><mi>n</mi><mi>σ</mi><mo stretchy="false">(</mo><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>i</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>λ</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">Θ</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mspace linebreak="newline"></mspace><mi>L</mi><mo>=</mo><msub><mi>L</mi><mrow><mi>b</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>l</mi><mi>e</mi></mrow></msub><mo>+</mo><msub><mi>L</mi><mrow><mi>i</mi><mi>t</mi><mi>e</mi><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{item} = \sum_{i = 1} ^ N \sum_{j \in \mathcal{H}_i} \sum_{l \notin \mathcal{H}_i} -ln \sigma(\hat{h}_{ij} - \hat{h}_{il}) + \lambda_i ||\Theta_i||_2^2 \\L = L_{bundle} + L_{item}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.3443em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.00965em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0097em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight"><span class="mord mtight"><span class="mrel mtight">∈</span></span><span class="mord vbox mtight"><span class="thinbox mtight"><span class="llap mtight"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord mtight"><span class="mord mtight">/</span><span class="mspace mtight" style="margin-right:0.0651em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.00965em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0097em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.03588em;">nσ</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>​其中， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">H</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{H}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0097em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示与用户<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 交互过的所有物品，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 视为正例，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span> 视为负例，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose">)</span></span></span></span> 是一个 sigmoid 型函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Θ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\Theta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示物品喜好预测任务中的模型参数，并且引入了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 正则化.</p><h2 id="【实验方法】">【实验方法】</h2><ul><li><p><strong>数据集：</strong> Netease数据集，爬取自网易云音乐的用户歌单；Youshu数据集，爬取自优书的书单. 统计信息如下</p><ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626165106916.png" alt="3" style="zoom:80%;" /></li></ul></li><li><p>**性能指标：**采用了留一法. 对于每个用户而言，其中的一次交互被随机除去用来测试. 采用top-K评价策略，关注如下两个指标</p><ul><li><strong>Recall@K</strong>：前K个推荐组中，正例物品的数量</li><li><strong>MAP@K</strong>：前K个推荐组中，正例物品的排名位置</li></ul><p>为了节省时间，作者对每个用户各随机选了99个未交互的捆绑组（歌单、书单），用作负例.</p></li><li><p><strong>对比模型：</strong> BPR、NCF、BR、EFM</p></li></ul><h3 id="性能对比">性能对比</h3><p>​评价指标基于Top-K策略，在设置不同嵌入向量维度的情况下，性能对比如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626170553126.png" alt="4" style="zoom:80%;" /><p>​BPR表现不佳，因为用户和捆绑组之间的稀疏交互限制了这种直接用内积进行建模的方法；除此之外的模型都采用了神经网络架构，证明了深度神经网络用来学习用户—捆绑组交互的非线性特征的有效性. DAM联合考虑了用户与捆绑组、用户和物品之间的交互关系，利用注意力机制动态调整各物品的推荐权重，采用了多任务学习框架，因此表现出了最佳的性能.</p><h3 id="分解注意力机制的作用">分解注意力机制的作用</h3><p>​作者将分解注意力机制和其他嵌入结合策略如平均池化、神经注意力机制进行了对比，结果如下</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626171420701.png" alt="5" style="zoom:80%;" /><p>​由于分解注意力具有动态调整各物品推荐权重的功能，因此可以捕获到不同物品之间的复杂关系，表现出了最佳的性能. 尽管神经注意力机制也能起到动态调整的作用，但是作者的方法具有更好的泛化性能.</p><h3 id="共享层的作用">共享层的作用</h3><p>​此前实验的共享层设为2层，为了研究它的作用，作者分别设置了不同的层数进行实验，表现出的性能如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626172005860.png" alt="6" style="zoom:80%;" /><p>​比较来看，多任务学习模型的效果要优于单任务学习模型. 适当增加共享层的数量可以使得推荐系统模型性能更好，但过多的共享层会引入无关噪声数据，对模型性能造成影响.</p><h2 id="【总结】">【总结】</h2><p>​本文提出了一个新的深度注意力多任务模型，用于捆绑推荐任务. 先是采用分解注意力网络，将每个捆绑组中的物品信息进行聚合，再提出一个多任务神经网络模型，共享用户—物品和用户—捆绑组的信息，并通过进一步实验验证了两种方法的有效性.</p><h2 id="【后记】">【后记】</h2><p>​如何将具有相关性的信息结合并利用起来，作者从CV中得到了启示. 对于难以进行同步的信息，就加入一个中间层进行整合，这与目前CV从NLP领域采用Transformer等结构的思想是类似的.  而且可以看到，作者并没有使用特别复杂的模型架构，结构简单清晰，更值得被应用. 关于本文的改进方法可以从以下几点考虑：</p><ul><li>未能考虑到物品和物品之间的互补性，比如买一套电脑时的键—鼠，应当成对互补，这在本文的模型中并没有很好的利用起来；</li><li>用户的兴趣会随着时间的推移而改变，如网易云音乐的每日推荐也会随着用户喜欢风格的改变而改变，因此在捆绑推荐任务中还需要考虑到时间的影响.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·BlockChain】Information Propagation in the Bitcoin Network</title>
      <link href="/2021/06/22/paper-20210622/"/>
      <url>/2021/06/22/paper-20210622/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Christian Decker, Roger Wattenhofer</p><p>【一句话总结】：从网络角度分析了比特币的消息传播流程和它的局限性，并提出了加速传播方法.</p><h2 id="【Introduction】">【Introduction】</h2><p>​**比特币(Bitcoin)**是全球真正意义上的第一个全球性的去中心化数字货币系统，它承载着与其他货币一样作为一般等价物的本质，但不由任何机构颁发.  自从2008年末期诞生以来，其交易值和交易数量越来越大. 由于在比特币发行以前，交易系统的研究更关注于构建可信任的中心化发行人，或创建用户与用户之间的信赖关系，仍由发行人对交易进行清算.</p><p>​比特币通常被视为现金，但其实功能已经超越了现金的范畴. 比特币的所有交易历史公开，并且在全球范围内的交易速度都非常快，提供了智能财产、小额支付、合同、托管交易等功能用于调解交易纠纷. 目前已有部分公司允许使用比特币进行交易.</p><p>​尽管如此，比特币的基本规则没有什么问题，但是仍然有一些提升空间，比特币解决的问题是交易的分布式追踪和验证，每个用户都可以有一份交易历史的副本，这些副本可能并不完全一致，但比特币的最终一致性会确保这些副本分支达到同步. 交易的验证是根据副本的状态进行验证的，如果一条交易记录在不同副本上不一致的话，这条交易就是不确定的，这种情况就会导致危及到比特币交易共识本身的安全性，对那些试图重写交易历史的攻击者而言是很有帮助的.</p><p>​这篇paper从<strong>网络</strong>的角度 对比特币进行了分析，如：消息是如何在比特币网络之间进行传播的，并找到这种传播机制的关键弱点，以及分析它可能引发的各种交易问题. 此外，作者分析了比特币的交易同步机制，并针对这些同步协议的弱点提出修改建议.</p><h2 id="【比特币概述】">【比特币概述】</h2><p>​        比特币网络中传播两种类型的信息：<strong>交易</strong>和<strong>区块</strong>.  交易代表着价值（或财产）的转移，而区块用于同步网络中所有结点的状态. 不同于传统货币，比特币依赖分布式的 “<strong>志愿者网络</strong>” 共同复制分类账本. 分类帐本用于追踪所有账户的余额，记录了比特币交易记录而非余额，网络中的每个结点保留一个完整的账本副本，交易的有效性是针对这些副本进行验证的，因此这些副本需要保持一致.</p><h3 id="交易">交易</h3><p>​在上层抽象层而言，一笔交易，就是从一个或多个源账户，转移到多个目标账户的过程. 一个账户，本质上是一个公钥/私钥对，公钥派生的地址用于识别账户，私钥用于对发送方账户的发起的交易进行签名加密.   交易由一条序列化的消息的哈希值表示，通过提供交易发起方的归属证明来声明输出，而对这些输出的引用和所有权的证明构成了交易的输入.</p><p>​输出是交易信息的基本单元，由于在副本中要保持一致性，所以声明和创建要遵循如下准则：一个输出仅可以声明一次、仅作为交易的结果创建、声明的输出值总和必须大于等于新分配的输出值的总和.  当交易通过网络传播时，接收结点收到交易消息后，账本的副本状态会随之发生变化，经过验证后，这条交易记录就被上传到本地交易副本. 随着时间的推移，各结点的交易副本可能会变得不一致.</p><p>​如果有不同的交易尝试转移统一部分比特币，这种现象称为 “<strong>双重花费攻击</strong>”. 这对分类帐本会产生直接影响. 假设有一个结点收到交易信息，并经过验证将其提交到本地账本副本，但是当其他结点收到这条交易消息时，交易会失败，因为币已经花出去了，所以这里就有一个交易冲突.</p><h3 id="区块">区块</h3><p>​比特币使用<strong>区块</strong>技术同步交易记录. 具体来说，在某个结点完成交易后，会创建一个区块，并向网络中其他结点广播这个区块. 这个区块包含了自上一个区块被广播出来后，该结点的交易记录. 接收这个区块的结点将交易记录回滚到上一次广播区块的记录，并用新区块的交易记录进行合并 (类似于 git 的分支同步)，这样冲突的交易就无法进行合并，这些冲突的交易因为失效而被丢弃.</p><p>​不过，区块的创建结点只能决定交易什么时候到达对方结点，或者在创建的区块中是否写入该交易记录，因此，只要区块链系统底层的公钥/私钥对是安全的，就不能伪造任何交易.</p><p>​决定能否创建区块的机制称为 <strong>“工作量证明机制”</strong>， 这个机制很简单，就是通过计算找到一个随机字符串，我们称为 <strong>“nonce”</strong>，这个字符串与区块头部进行结合，生成一个哈希值，这个哈希值也是区块自身的<strong>身份标识</strong>. 加密哈希是单向函数，因此如果想通过哈希值反解字符串，只能通过暴力枚举的方法找到一个有效的随机数.   nonce 被视为区块的一部分，所以接收结点可以直接验证创建者的工作量. 想通过暴力计算得到这个随机数的结点，就称为“<strong>矿工</strong>”， 为了奖励矿工的工作量，算出这个随机数的矿工，会被奖励一部分新的比特币，即一笔没有输入但可以指定输出的交易.</p><h3 id="区块链">区块链</h3><p>​区块以有向树的形式连接在一起，构成<strong>区块链</strong>.  每个块包含对先前块的引用，如区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 引用区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就是区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的父块，父区块的哈希值必须是已知的. 树中的根块称为 <strong>创世区块</strong> ，它是所有区块的祖先，被硬编码到客户端中. 区块链被定义为从任何块到创世区块的最长路径，它们之间的距离称为区块高度.   低高度的区块中交易验证要先于高度较高的区块.  不过，只有出现在区块链中的区块，才会被所有用户结点承认，因而这个区块奖励的比特币才会有效，所以矿工通常是去尝试寻找能连接到当前区块链头的区块.</p><h3 id="区块链分叉">区块链分叉</h3><p>​在这样的规则下，区块链的头部可以是多个，这样的情况称为 <strong>区块链分叉</strong>，这会导致系统的不一致性. 如果在区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>h</mi></msub></mrow><annotation encoding="application/x-tex">b_h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 新发现的区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><msup><mi>h</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub></mrow><annotation encoding="application/x-tex">b_{h&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 处于同一分支， 那么它将检查这个分支上的所有中间区块，并逐步更改交易；若处在不同分支，则依照较长的区块的交易规则，回退到它们的共同祖先区块，并按这这个规则对交易记录进行修改. 区块链网络经过分区如果可以找到不同的分支，那么总会有一条分支是最长的，如果没有采用这个分支的分区，就切换到这个分支上，其他分支就被丢弃，并且保证各结点的账本副本要和这个区块链头一致.</p><p>​区块链分叉导致任何交易都不能被明确提交，因为都有可能会失效，且如果某个结点控制了全网上的大部分算力，那么它就可以比其他结点更快找到新的区块，从而改写交易记录，恢复先前的交易，并在此基础上创建新的区块，直到形成一条比原始长度更长的区块链.</p><h2 id="【消息传播】">【消息传播】</h2><p>​        加入区块链的结点需要先查询一组DNS服务器，由志愿网络运行. 结点通过向邻居<br>查询已知结点的地址. 如果要离开网络的话，其地址还会在其他结点中保留几个小时.  每个结点会打开 至少 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>  个连接，如果没有的话就从已知的结点中随机选取一个建立连接.  对于那些接收传入连接的结点，连接数会更高.</p><p>​区块链网络中存在着分区的现象，各分区之间的交易是独立运行的，但是交易记录会随着时间的推移而发散增加，并且这些交易记录可能是互相冲突的. 一般在区块查找效率下降时，可能表明发生了分区. 但是分区一般不会被主动检测到，我们可以通过观察网络的聚合计算能力得到.</p><p>​在区块链中，只有交易信息和区块信息具有相关性. 一般对于这种消息要避免直接转发的，如果接收到交易和区块信息，并经过验证之后，就要向它们的邻居结点发送inv信息，表示当前结点可以被请求. 接收到inv消息的结点，会向发送该消息的结点请求获取数据. 如下图所示</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626184225351.png" alt="1" style="zoom:67%;" /><p>​区块链中每一发送消息的原结点，都要通过上述这一跳，通过网络向其他结点广播传播消息.  消息的验证和在网络中传播的时间开销，统称为传播延迟. 我们定义从网络中的源结点第一次发出传播公告时，到结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 收到数据消息 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，遵循“双指数规律”. 这个规律分为两个阶段：初始的指数增长阶段，大多数收到inv消息的结点会向数据项 item 发送请求；后续的指数衰减阶段，这是因为大多数结点都以应请求到了这个数据项.</p><p>​作者在区块链网络中引入了测量结点，进行了一次实验测量了区块链中的消息传播时延，通过监听inv消息的形式进行测量. 测量结点不负责转发消息，收集区块哈希、广播结点的IP和接收结点的时间戳. 下图展示了所有区块接收到inv消息的时间延迟分布的规范化直方图：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626185945791.png" alt="2" style="zoom:67%;" /><p>​统计得到，结点接收一个区块的时间间隔中位数为6.5s，平均值为12.6s，且在40s后仍有5%的结点收不到区块.</p><p>​传播消息的大小和传播时延之间的关系非常大.  定义 <strong>延迟代价</strong> 为每KB区块大小导致的延迟时间. 如下图展示了延迟代价的影响随区块大小变化的曲线</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626191003148.png" alt="3" style="zoom:67%;" /><p>​可以看到，小于20kB的区块受到延迟传播的影响是很大的，由于inv和getdata消息的往返延迟，这对小区块是非常大的时间开销. 由此可见，对于小区块而言，直接转发交易消息是一个明智的选择，避免了消息往返带来的传播延迟，但是对于较大的区块则需要进行多跳转发.</p><p>​当两条使用同一笔输出的交易在网络中传输时，先被某个结点接收到的交易才被视为有效，因为它经过验证传播后达到了同步，第二个到达结点的交易被视为无效而丢弃. 这种设计使得恶意结点很难通过发送数百个矛盾的消息记录淹没网络，但也使得双重花费攻击难以被检测到. 对于这种交易记录，停止传播即可，但是对于传播的区块而言是不可取的，因为存在着某些有效但有潜在的冲突性的区块，不能以任意的速率创建，不会产生攻击的可能性.</p><h2 id="【区块链分叉】">【区块链分叉】</h2><p>​根据作者在之前实验中的设计，收集了在180000~190000的区块高度中传播的统计分布直方图，如下所示：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626194525242.png" alt="4" style="zoom:80%;" /><p>​区块的工作量证明机制导致有效的区块可以被独立随机发现，因此在网络中就有可能存在一些交易记录冲突的块被传播. 作者宣称区块链的分叉是由于<strong>区块在网络中的传播延迟</strong>造成的. 区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 在网络中传播的过程中如果找到一个冲突的区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，就会发生区块链分叉，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 只能被网络中还不知道区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> 的部分找到.</p><p>​假设指示函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_j(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 表示结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 在时间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span> 是否得知区块 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span> ，则知情结点可定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><mi>V</mi></mrow></munder><msub><mi>I</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">[</mo><mi>I</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo separator="true">⋅</mo><msup><mi>n</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">I(t) = \sum_{j \in V}I_j(t) \\f(t) = E[I(t)] · n^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4804em;vertical-align:-1.4304em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4304em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)]</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 定义为累积分布函数(CDF), 这些结点称为 <strong>知情结点</strong>， 而只有未知情结点才会产生冲突的区块. 综合发现新区块的概率和未知情区块的比例（即网络中的区块分布），我们可以得到区块链分叉的概率.</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>r</mi><mo stretchy="false">[</mo><mi>F</mi><mo>≥</mo><mn>1</mn><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>P</mi><mi>b</mi></msub><msup><mo stretchy="false">)</mo><mrow><msubsup><mo>∫</mo><mn>0</mn><mi mathvariant="normal">∞</mi></msubsup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Pr[F \geq 1] = (1 - P_b)^{\int_{0}^{\infty} (1-f(t))dt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2265em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9765em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="margin-right:0.19445em;position:relative;top:-0.0006em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7597em;"><span style="top:-2.1225em;margin-left:-0.1945em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-2.9521em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3775em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">))</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span> 是一个随机变量，表示在传播一个区块时，发现冲突区块的数量.</p><p>​通过提取时间戳，得到区块的发现概率随时间变化的函数呈指数分布规律：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626202725106.png" alt="5" style="zoom: 80%;" /><p>​从前文 <code>Figure 3</code> 中得到的直方图，在时刻 t 的知情结点比例即这个直方图曲线到 t 时刻的积分. 从而得到区块链分叉概率：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626203038462.png" alt="8" style="zoom:80%;" /><p>​该模型略高于观测到的的分叉概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1.69</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">1.69\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">1.69%</span></span></span></span> ，原因在于我们假设了所有的结点在消息传播过程中呈现出指数分布规律.  随着区块链网络规模的扩大，交易的数量也会随之增加，区块的大小和区块链分叉的概率也随之增大，从而传播延迟也会随之增大.   目前网络中的有效计算能力为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mn>11.37</mn><mn>633.68</mn></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>98.2</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">1-(1 - \frac{11.37}{633.68}) = 98.2\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">633.68</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11.37</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">98.2%</span></span></span></span> ，如果一个攻击者可以拿到 全网络 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>49.1</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">49.1\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">49.1%</span></span></span></span> 的算力，就可以修改任意修改交易，这在当前形势下已经几乎不可能达到.</p><h2 id="【消息传播加速】">【消息传播加速】</h2><h3 id="验证过程最简化">验证过程最简化</h3><p>​传播缓慢的一个原因，在于结点向网络宣布新发现的区块前，需要经过一段时间的验证，这与区块的大小有关. 目前coind协议限制了每个区块大小不超过500kB，但随着时间的推移，交易量会越来越大，这个限制会越来越松.</p><p>​目前的验证过程分为两个阶段：<strong>困难度检查</strong>+<strong>交易验证</strong>.  困难度检查会对接收的区块进行哈希，并将哈希值与当前目标难度进行比较，验证工作量. 此外，还需要对当前区块的交易进行逐条验证. 大部分验证时间在交易验证中，因此，可以考虑在困难度检查完毕之后，就像邻居结点发送inv信息.</p><p>​如果要伪造一个可以通过困难度验证的区块，难度与发现一个新的区块相当. 因此并不会有遭受DDoS攻击的风险，但这种验证简化过程只对单个路径上的消息传播进行了加速，并不会对网络整体的传播延迟造成很大的影响.</p><h3 id="区块传播流水线化">区块传播流水线化</h3><p>​此外，还可以通过将收集到的inv消息立即转发给邻居结点进行消息传播加速，过程如下.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626205530594.png" alt="9" style="zoom:80%;" /><p>​但是这种方法仍是加速了单跳的传播，如果只对一个结点采取进行直接转发inv消息的策略，对于网络整体传播性能的提升也不会有太大的影响.</p><h3 id="增大连通性">增大连通性</h3><p>​最有效的方法还是缩短发送交易或区块消息的源结点和其他结点之间的距离，尽可能将网络中任意两个结点进行连接，增大网络的连通性.</p><h3 id="测量">测量</h3><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210626211908079.png" alt="10" style="zoom:80%;" /><p>​通过对结点本身的修改，可以看到区块链分叉的比例下降了非常多，相比于对结点本身不做修改的情况有了一半的提升. 实验结果显示了最后一种方法的加速效果远好于前两种加速方法，但同时对于网络带宽的要求也非常高.</p><h2 id="【总结】">【总结】</h2><p>​本paper分析了比特币网络中消息是如何传播来同步分布式的账本副本. 提出对区块本身的依赖而造成的传播延迟，不仅导致区块链分叉，延迟交易清算，还有利于攻击者. 对此作者提出了一个模型来解释区块链的分叉，并指出它是导致分布账本不一致的问题，但由于信息遮蔽，大多数结点无法检测到分叉的区块. 最后，作者给出了一些结点本身的改进以加速消息的传播， 降低区块链分叉的风险，并在实验中验证了这种改进的有效性，但这种方法也不能从根本上解决问题，分叉是比特币的底层原理决定的潜在隐患.</p><h2 id="【后记】">【后记】</h2><p>​这篇paper是目前看的最难的一篇，一方面我对于区块链的了解并不深，因此还需要边读边查，另一方面对相关原理的分析验证十分透彻，公式难度特别大，因此有一些证明推导过程选择了直接跳过.  总的来说，这篇paper的逻辑性十分紧密，对于消息传播、区块链分叉的建模都有严谨的推理过程，因此后续值得重刷精读，对于区块链本身原理的理解十分有帮助. 但是paper提出的改进方案可以看到，并没有对区块链本身做一些很大程度的修改，对于分叉的改进效果也并没有持久性.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 区块链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·SmartContract】Smart Contract Vulnerability Detection Using Graph Neural Networks</title>
      <link href="/2021/06/20/paper-20210620/"/>
      <url>/2021/06/20/paper-20210620/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Yuan Zhuang, Zhenguang Liu, Peng Qian, Qi Liu, Xiang Wang, Qinming He</p><p>【一句话总结】：将智能合约代码转成图，利用图神经网络检测智能合约漏洞.</p><h2 id="【Introduction】">【Introduction】</h2><p>​区块链今年来发展非常火热，具有去中心化、防篡改的特性，本质上是一个分布式共享的交易账本. <strong>智能合约</strong>，是一种自动运行在区块链上的程序，它旨在以信息化方式传播、验证、执行合同. 不过对于设计存在缺陷的智能合约来说，非常容易遭到网络攻击. 据SlowMist Hacked的统计，由于智能合约的漏洞问题，区块链网络已损失超过10亿美元.</p><p>​现有的智能合约漏洞检测方法依靠于<strong>符号执行</strong>等动态执行方法，但是存在两个缺陷：目前的检测模式是有限的，通常不可修改，这对于智能合约越来越多的今天，一些复杂的异常模式无法被检测到，且会有很高的误报率，攻击者会选择绕过这些检测规则进行攻击；过度依赖于“中心化”的专家提出的硬模式，导致检测方法的可扩展性很差.</p><p>​作者将智能合约源码中的<strong>关键函数、变量</strong>，表示为图的结点，边是这些结点之间调用关系执行记录. 考虑到GNN在信息传播过程中的平坦性，需要设计一个消除阶段用来将图规范化，并将GCN扩展为无度GCN（<strong>DR-GCN</strong>），处理那些规范化的图.   此外，考虑到了不同程序中的元素，在不同时间分别发挥出不同的功能，因此还提出了一个时间消息传播网络<strong>TMP</strong>. 团队对超过300,000个智能合约进行了实验，实验结果显示了GNN检测不同类型的智能合约漏洞具有非常好的先进性.</p><h2 id="【模型设计】">【模型设计】</h2><h3 id="合约图生成">合约图生成</h3><p>​将智能合约函数定义为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>C</mi><mo stretchy="false">(</mo><mi>S</mi><mi>m</mi><mi>a</mi><mi>r</mi><mi>t</mi><mspace width="1em"/><mi>C</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SC(Smart\quad Contract)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">SC</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">ma</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>，对每个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">SC</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">SC</span></span></span></span>，模型用于预测标签<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\hat{y} = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>表示具有某种特定类型的漏洞，否则表示该智能合约函数是安全的. paper主要关注三种漏洞：<strong>可重入性（Reentrancy）</strong>、<strong>无限循环（Infinite loop）</strong>、<strong>时间戳依赖（Timestamp dependence）</strong>.</p><p>​     前两种漏洞与回调函数的触发有关，后一种则是区块时间戳的设置有关.</p><p>​  作者将根据智能合约的源码，构建了一套自动化工具，将它们自动转化为<strong>合约图</strong>，图中的结点分别代表源码中不同的元素（即变量、函数）. 根据函数调用的时间顺序，构建图中的边，如下图展示了一段智能合约源码被可视化为图的结果：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210623185753305.png" alt="1" style="zoom:80%;" /><p>​在图中，结点被分为三类：</p><ul><li><strong>主要结点（Major Nodes）</strong>: 代表对于检测漏洞十分重要的函数，有自定义函数，也有内置函数，记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mspace width="1em"/><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">M_i \quad i=1,2,..,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></li><li><strong>二级结点（Secondary Nodes）</strong>：代表某些关键变量，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><strong>回调结点（Fallback Nodes）</strong>：用于触发被攻击合约的回调函数.</li><li><strong>边构造（Edges Construction）</strong>：每条边描述了被测试的合约函数可能通过的路径（函数与函数、函数与变量的调用链），边的时间序号代表了它在函数中的顺序. 以元组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>V</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>e</mi></msub><mo separator="true">,</mo><mi>o</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(V_s, V_e, o,t )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span> 表示，分别代表起始终止结点、时间顺序、边类型. 其中，边被分为如下几种类型：<strong>控制流、数据流、前向边、回退边</strong>.</li></ul><h3 id="合约图规范化">合约图规范化</h3><p>​图神经网络在传播信息的时候，所有结点被看作等价，而忽略了某些结点所起到的重要性. 此外，不同的合约代码也会产生不同的图，阻碍网络的训练，因此要进行规范化.</p><ul><li><p><strong>结点消除</strong>：移除每个二级结点，并将其特征传递给最近的几个主结点，对回调结点也做类似的操作. 连接到删除结点的边改接到相应的主结点上.</p></li><li><p><strong>主结点特征：</strong> 主结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 经过二级结点的聚合后，更新为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>， 结点特征包含三部分：原始主结点的自特征、从与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 直接相连的二级结点合并得到的内特征、从与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">M_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 有路径连通的二级结点合并得到的外特征.</p><p>前面展示的毁约片段生成的规范化合约图如下所示：</p>  <img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210623212312161.png" alt="2" style="zoom:80%;" /></li></ul><h3 id="消息传播网络">消息传播网络</h3><p><strong>输入：</strong> 规范化的合约图，漏洞真实标签</p><p><strong>输出</strong>：合约图中各结点的漏洞 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mi mathvariant="normal">/</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">0/1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0/1</span></span></span></span> 标签</p><h4 id="DR-GCN">DR-GCN</h4><p>​图卷积传播公式定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>X</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mover accent="true"><mi>D</mi><mo>^</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><mover accent="true"><mi>A</mi><mo>^</mo></mover><msup><mover accent="true"><mi>D</mi><mo>^</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><msub><mi>X</mi><mi>l</mi></msub><msub><mi>W</mi><mi>l</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_{l+1} = \sigma(\hat{D}^{-\frac{1}{2}} \hat{A} \hat{D}^{-\frac{1}{2}} X_l W_l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.254em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.004em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 代表邻接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 与自连接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span> 的和，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">X_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代表第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 层的特征矩阵，$\hat{D} $用于规范化邻接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">A</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1111em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 代表可被训练更新的权重矩阵.</p><p>​作者对这个公式进行了更新，将 邻接矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 平方以便增大连通性，且考虑到在此前已对合约图进行规范化，因而将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>D</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> ，最后得到新的 <strong>DR-GCN</strong> 传播公式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>X</mi><mrow><mi>l</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mn>2</mn></msup><mo>+</mo><mi>I</mi><mo stretchy="false">)</mo><msub><mi>X</mi><mi>l</mi></msub><msub><mi>W</mi><mi>l</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_{l+1} = \sigma ((A^2 + I)X_lW_l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">((</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h4 id="时间消息传播网络">时间消息传播网络</h4><p>​包括 两个阶段：消息传播+读出.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210623232942332.png" alt="3" style="zoom:67%;" /><ul><li><strong>消息传播阶段：</strong> TMP按照时间顺序依次沿着边传播消息. 对于结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">V_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，初始状态为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mi>i</mi><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">h_i^{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0728em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span>，代表其特征向量，第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个时刻通过第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 条边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 传递消息，并更新结点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mrow><mi>e</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">V_{ek}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> （即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的终止结点）的特征.  第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 时刻的消息  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">m_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 由边 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的初始结点的隐藏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">h_{sk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和边类型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">t_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 组成：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mi>k</mi></msub><mo>=</mo><msub><mi>h</mi><mrow><mi>s</mi><mi>k</mi></mrow></msub><mo>⊕</mo><msub><mi>t</mi><mi>k</mi></msub><mspace linebreak="newline"></mspace><msub><mi>m</mi><mi>k</mi></msub><mo>=</mo><msub><mi>W</mi><mi>k</mi></msub><msub><mi>x</mi><mi>k</mi></msub><mo>+</mo><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">x_k = h_{sk} \oplus t_k \\m_k = W_k x_k + b_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>​最初 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">x_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的初始结点及其本身，经过网络超参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">W_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">b_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 更新，到达 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">e_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的终止结点后，通过聚合终端结点自身隐藏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mrow><mi>e</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">h_{ek}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 、传递过来的消息、先前的状态，其自身隐藏状态被经过tanh激活函数被更新为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mrow><mi>e</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{h}_{ek}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1079em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> .</p><ul><li>**读出阶段： ** 遍历图中所有边后，通过计算所有结点的隐藏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>h</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{h}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1079em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，得到 G 的预测标签  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>V</mi><mi mathvariant="normal">∣</mi></mrow></msubsup><mi>f</mi><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y} = \sum_{i = 1} ^{|V|} f(h_i^T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3276em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0279em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，考虑到最后时刻的隐藏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mi>i</mi><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">h_i^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> 和最初的状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>h</mi><mi>i</mi><mn>0</mn></msubsup></mrow><annotation encoding="application/x-tex">h_i^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0728em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span> 对于漏洞预测任务具有启示性，因此更新  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span></span> 的计算方式：</li></ul><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210623233440168.png" alt="4" style="zoom:80%;" /><h2 id="【实验】">【实验】</h2><ul><li><p><strong>数据集</strong>：ESC(Ethereum Smart Contracts)用于实验<strong>可重入漏洞</strong> 和 <strong>时间戳依赖漏洞</strong>  ; VSC(VNT Chain Smart Contracts) 用于实验 <strong>无限循环漏洞</strong></p></li><li><p><strong>数据集划分</strong>：训练集 ： 测试集 = 2 ： 8</p></li><li><p><strong>对比：</strong> DR-GCN &amp; TMP，对照其他 12 个智能合约漏洞检测方法</p><ul><li><em>Oyente</em>;  <em>Mythril</em>;  <em>Smartcheck</em>;  <em>Scurify</em></li><li>Vanilla-RNN, LSTM, GRU, GCN</li><li><em>Jolt</em>; <em>PDA</em>; <em>SMT</em>; <em>Looper</em> （用于无限循环漏洞）</li></ul></li><li><p><strong>指标：</strong> accuracy; recall; precision, F1 score</p><p>按照漏洞的类型和检测模型分别进行对比：</p></li><li><p><strong>可重入漏洞检测对比：</strong></p><ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210624000254171.png" alt="5" style="zoom:80%;" /></li></ul></li><li><p><strong>时间戳依赖漏洞检测对比：</strong></p><ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210624000324015.png" alt="6" style="zoom:80%;" /></li></ul></li><li><p><strong>无限循环漏洞检测对比：</strong></p><ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210624000348096.png" alt="7" style="zoom:80%;" /></li></ul><p>基于三种漏洞类型检测的对比，可以看到 DR-GCN 和 TMP模型在智能合约漏洞检测中的优越性能，能够直观看到图卷积神经网络在智能合约漏洞检测问题中的巨大潜力， 且TMP较DR-GCN有了更进一步的提升，在各个指标上都达到了对比算法中的最佳性能.</p><p>​      此外，作者通过与使用神经网络进行智能合约漏洞检测的方法进行对比，进一步说明了一味将源代码看作时间序列是不合适的，在漏洞检测任务中容易丢失掉很多有价值的信息，尤其是程序的结构信息（函数变量之间的调用关系），这更启示我们应当将源码转化为图的必要性.</p></li></ul><h2 id="【总结】">【总结】</h2><p>​本paper提出了一个自动化智能合约漏洞检测器. 通过考虑程序间的结构关系，提出了利用图神经网络在智能合约漏洞检测领域的应用，并通过实验验证了这样的检测方法对于智能合约漏洞检测的有效性.</p><h2 id="【后记】">【后记】</h2><p>​这篇paper再次向我展示了图神经网络对于存在“<strong>依赖关系</strong>”的问题进行建模的有效性. 图卷积不仅能够在社交网络中挖掘到不同阶级关系之间的特征影响，也可以将转化为图的代码进行建模，得到不同代码之间的调用关系. 这对层次化结构模型的分析有很大的帮助作用，除了从异常函数中学习特征以外，还可以用于 IDE 中进行智能代码分析等. 这篇paper是将智能合约源码作为数据集，对其中的某些关键函数直接打上了异常标签，这样以数据驱动的检测方法可以考虑能否分解为更细粒度的诱因.</p>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 区块链 </tag>
            
            <tag> 智能合约 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·AIOps】Seer:Leveraging Big Data to Navigate the Complexity of Performance Debugging in Cloud Microservices</title>
      <link href="/2021/06/18/paper-20210618/"/>
      <url>/2021/06/18/paper-20210618/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Yu Gan，Yanqi Zhang, Kelvin Hu, Dailun Cheng, Yuan He, Meghan Pancholi, Christina Delimitrou, 来自Cornell University团队</p><p>【一句话总结】：利用AI模型预测并防止微服务集群的QoS异常.</p><h2 id="【Introduction】">【Introduction】</h2><p>​服务质量(Quality of Service, QoS)，严格限制了云计算服务的吞吐量.  要在性能限制下进行应用的敏捷开发迭代，微服务概念近年来越来越火热. 与其将所有功能包含在一个庞大的二进制文件中作为单体服务(Monolith)，耦合数百个关注单一功能的微服务自然是一个更好的选择，既可以加速应用的开发部署，又可以隔离环境进行调试.</p><p>​由于微服务之间的依赖关系，每个单独的微服务要求的尾部延迟要比传统云服务的单体应用高很多，单个行为不当的微服务会造成整个系统的级联QoS违规. 我们期望对系统服务性能可以预测，基于这样的需求，促进了许多对性能追踪、监管和调试系统的研究，可以帮助云服务提供商检测QoS异常，并帮助纠错，恢复系统性能. 但是这样的后验QoS异常检测对于微服务而言，异常热点早就已经在整个系统中广泛传播.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210620231521520.png" alt="1" style="zoom:67%;" /><p>​上图显示了社交网络应用在发生QoS异常后做出的反应，可以看到，后验QoS异常检测是在违规行为发生后，再进行处理的，在处理过程中服务长期处于低性能状态，从50s发生异常，到225s恢复，耗时非常长.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210620232038493.png" alt="2" style="zoom:67%;" /><p>​左图为后端到前端订阅了所有微服务的情况下，CPU随时间推移的利用率；右图为尾部延迟随着时间推移的变化. 可以看到，在右图中，由于前端依赖于后端服务，在后端出现QoS异常后，前端会随着时间推移也会发生尾部延迟的现象. 而在左图中，资源利用率并不会出现类似的，从后端到前端随时间增大的现象，这是因为部分前端服务会保持着高资源利用率的状态，因此，使用资源利用率这一指标指导QoS异常检测，说服力并不足.</p><p>​对此，paper提出了Seer模型，利用轻量级的分布式RPC级追踪系统的日志记录信息，跟踪记录未完成的requests，并利用这些信息训练神经网络，提前识别QoS异常；在硬件级别，Seer使用每个硬件节点进行详细监控，并向这些节点提供相关操作建议，以避免QoS异常的发生.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621003550351.png" alt="3" style="zoom:67%;" /><p>​作者团队经过在大规模社交网络应用中的实际部署，验证了Seer的先验QoS异常检测准确率非常高，并成功避免了其中的绝大部分异常.</p><h2 id="【端到端的微服务应用】">【端到端的微服务应用】</h2><p>​截止到论文发表时间（before2019.4）前，还没有公开可用的、架构相对复杂完整的端到端微服务应用程序，因此作者团队设计了四个端到端微服务应用：<strong>社交网络、媒体服务、电商网站、银行系统</strong>. 此外还基于Go的微服务架构开发了一个酒店预订系统，所有微服务全部部署在Docker容器中.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621000501191.png" alt="4" style="zoom:80%;" /><p>​上表是这几个服务的通信协议、微服务数量、语言技术栈. 以社交网络的微服务架构图为例</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621002311116.png" alt="5" style="zoom:80%;" /><p>​用户在Client端通过http发送请求，经过负载均衡器，到达指定的webserver，通过post请求向其他用户发送多种格式的消息，并广播给关注者，且可以与其他用用户post的信息进行交互，其中广告、推荐系统等引擎等利用了机器学习插件，后端米用memcached缓存用户交互信息，mongoDB永久保存用户状态.</p><p>​社交网络应用部署在了Cornell等地，将与其他几个端到端微服务应用一起用于测试Seer模型的有效性和可扩展性.</p><h2 id="【Seer如何设计】">【Seer如何设计】</h2><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621003301271.png" alt="6" style="zoom: 80%;" /><h3 id="总体概述">总体概述</h3><p>​Seer的整体架构如上图所示，由于每个微服务应用都部署在了Docker容器中，因此高层的RPC追踪系统可以在每个容器中的Tracing module，收集这些用户请求信息，并将它们收集在Cassandra数据库中，作为Seer的训练数据来检测QoS异常. 在运行时阶段将会通过预训练模型检测潜在的QoS异常. 低层的硬件节点用于发掘QoS异常来源，并向 Cluster Manager提供如何避免性能下降的建议并对微服务节点调整分配资源.</p><h3 id="分布式追踪系统">分布式追踪系统</h3><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621005158961.png" alt="7" style="zoom:67%;" /><p>​如上图，分布式追踪系统记录了每个容器的微服务尾部延迟，并且根据任务队列的长度记录未完成请求的任务数量，这些追踪信息全部保存在TraceDB中心化数据库中.</p><h3 id="深度学习模型用于性能调试">深度学习模型用于性能调试</h3><p>​出发点在于，我们并不总能事先得知造成QoS异常的模式；其次，DNN假设在这些微服务之间不存在依赖关系的先验知识，这个对于那些更新频繁的服务来说更适用；且深度学习技术在这些模式识别检测问题中已被证明十分有效，因此这个模型使得Seer以高精度检测QoS异常.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621005845927.png" alt="8" style="zoom:80%;" /><p>​Seer中使用的深度神经网络架构如图所示，由CNN和LSTM层组成。输入输出神经元对应微服务，按照后端-&gt;前端的拓扑顺序从上到下排序.</p><p><strong>输入值</strong>：每个微服务请求队列的深度（能够较为精准地反应性能瓶颈），</p><p><strong>输出值</strong>：每个微服务发生QoS异常的概率.</p><p>​作者团队提出，为了提高Seer对于系统性能的可预测性，需要有一定的松弛时间用于模型推理，这样才能使得集群管理器的操作生效. 在这样的大规模微服务集群中，既需要识别空间模式，如识别造成QoS异常的微服务集群并丢弃噪声模式；又需要识别时间模式，如用过去的QoS异常模式去预测未来可能发生的. 对此，需要利用CNN的空间模式敏感性，对海量数据降维，过滤掉不影响端到端性能的微服务异常模式；又需要LSTM的时间模式敏感性，结合SoftMax分类层，推断出对应微服务造成QoS异常的概率.</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621202230097.png" alt="9" style="zoom: 80%;" /><p>​如上图所示，采用CNN+LSTM结构，成功预测了超过90%的QoS异常模式，解决了单CNN架构无法及时预测、LSTM架构在过量请求的情况下误报的问题.</p><p>​要训练这样一个模型，要记录一周的跟踪日志，并且训练耗时长达几个小时甚至一天. 对于更新频繁的微服务而言，从零开始学习的时间成本太高. 有一种方式是迁移学习，将预训练权重模型先存储在磁盘，作为检查点，当微服务更新时，允许它从上次训练停止的地方继续训练，但这并不是一个长期的方案. 训练得到的权重受到了旧数据的污染，在微服务有关键重大更新时，还是需要重新训练. 采用的方案为：当新网络进行训练时，增量模型用于QoS异常检测.</p><h3 id="硬件检测">硬件检测</h3><p>​Seer通过访问性能计数器进行底层监控，确定QoS异常源.</p><ul><li>当Seer对性能计数器具有访问权限时，可以依靠它们检查不同的资源利用率，如CPU、内存占用等，一旦识别到饱和资源，便会通知集群管理器采取措施；</li><li>当没有权限访问性能计数器时，Seer会依靠多组“微基准”，对相关的资源进行调整测试，再观测系统性能是否会发生实质性的变化，若有则通知集群管理器采取措施.</li></ul><p>​    集群管理器可以调整Docker容器大小、CAT、LLC等技术进行资源重新分配.</p><p>​  Seer已经部署在了多个社交网络服务中，对于QoS异常预防检测有了极大的帮助，并为微服务应用的构建提供了很多新的设计思路. 然而，Seer的数据安全性并没有得到很好的保证，用户敏感信息未经加密存储在中心化数据库Cassandra中，仍有受到恶意攻击的隐患.</p><h2 id="【Seer的性能分析和验证】">【Seer的性能分析和验证】</h2><p>​作者团队除了用20台服务器搭建了一个专用的本地集群，还将之前5个端到端的微服务应用部署在Google Compute Engine和Windows Azure集群中，包含数百个服务器，用于验证Seer的可扩展性.  评估了以下三个指标：</p><ul><li><strong>训练数据敏感性</strong>：<ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621223310272.png" alt="10" style="zoom:67%;" /></li><li>如图显示了Seer的QoS异常检测精度和训练时间随数据集大小的变化，可以看到在100~200GB大小的数据集会使得Seer的检测精度趋于稳定，超过此大小对于Seer的性能提升不会有明显的帮助.</li></ul></li><li><strong>追踪频率的敏感性</strong>：<ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621223605782.png" alt="11" style="zoom:67%;" /></li><li>如图显示了Seer的QoS异常检测精度随着任务队列采样时间间隔（或频率）变化的曲线，作者团队据此在剩下的工作中选择100ms的采样间隔（文中也用 预测窗口 表示这个含义）.</li></ul></li><li><strong>误判</strong>：<ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621224234543.png" alt="12" style="zoom:67%;" /></li><li>如图显示了Seer的误判率（FP、FN）随着采用时间间隔变化的统计，由于Seer应用了深度学习模型，推理需要一定的时间，采取相应的纠正措施也需要一定的时间，因此需要10~100ms的预测窗口，此处作者选择100ms.</li></ul></li><li><strong>debug系统对比</strong><ul><li><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210621225356965.png" alt="13" style="zoom:67%;" /></li><li>如图，对比了采用资源利用率Utillization为指标、只适用应用层日志信息的App Only、只适用NIC队列信息的Net Only、采用双层信息的Seer模型 用于预测异常的结果和真实结果的标签，结果显示适用资源利用率预测QoS异常指标效果最差，使用App Only的在底层和真实值有差距，使用Net Only的在应用层和真实值有差距，这恰好说明了Seer的异常预测精准度非常高.</li></ul></li></ul><h2 id="【总结】">【总结】</h2><p>​云服务促进了微服务应用的发展，本文主要关注于微服务QoS异常检测方案. 现有的QoS异常检测方案的实时性较差、基于资源利用率的检测指标不准确，据此，作者团队利用深度学习技术提出了一个数据驱动的QoS异常检测模型Seer，通过深度学习模型预测QoS异常，并通过底层硬件驱动集群管理器，对资源进行重新调度，避免即将发生的QoS异常，通过部署在集群中的微服务应用进行了实验，验证了Seer的有效性和先进性.</p><h2 id="【后记】">【后记】</h2><p>​本文作者团队Christina Delimitrou关注于AIOps（智能运维）领域的研究，将AI模型应用在了非CV、NLP领域，并且发挥了它的落地价值，节约了巨大的运维成本，在许多云服务商中的应用价值非常高. 改进方案可以按照如下思路：</p><ul><li>对Cassandra中心化数据库可以在不影响系统性能太多的情况下，进行加密处理</li><li>集群扩展时，模型推理时间会显著增大，在应用扩展时，Seer的异常检测能力会大幅下降，若要在Twitter等大型社交网站上部署，还需要对深度学习模型做进一步优化，或对权重的增量学习更新机制进行更深入的设计.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> 智能运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【论文阅读·推荐系统】Modelling High-Order Social Relations for Item Recommendation</title>
      <link href="/2021/06/16/paper-20210616/"/>
      <url>/2021/06/16/paper-20210616/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下解读均为本人个人见解，如有曲解或造成不必要的麻烦，欢迎联系我 <a href="mailto:nexisato0810@gmail.com">nexisato0810@gmail.com</a> 进行修改。正文内容中的“作者”均为paper作者本人，我的观点会由“我”或在括号“()”内显式注明。</p></blockquote><p>【Paper作者】：Yang Liu, Liang Chen, Xiangnan He, Jiaying Peng, Zibin Zheng, Jie Tang，来自中山大学团队</p><p>【一句话总结】：利用GCN和注意力机制做了一个推荐系统框架，能够让我的n阶朋友影响到我的喜好.</p><h2 id="【Introduction】">【Introduction】</h2><p>​在目前的社交网络上，推荐系统是应用十分广泛的一种技术。由于类似的用户群体可能表现出相同的购买行为，因而关键在于如何使用<strong>集体智慧</strong>，这就衍生出了两种主要的推荐技术：基于内容的推荐、基于用户/物品的协同过滤推荐，这两种技术考虑到了用户购买行为之间、物品之间的相似性，但在实际的场景中，“朋友”的推荐会影响到我们的购买行为，由此引出了利用社会关系构建的推荐系统。</p><p>​现有的基于社会关系构建的推荐系统（如TrustSVD）只考虑到了一阶人际关系，没有将所谓“口口相传”的传播链很好地利用起来，举例如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210616154421984.png" alt="1" style="zoom:80%;" /><p>​假如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">U_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>看到了一本书觉得不错，把它推荐给了朋友<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">U_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">U_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可能没时间看，但是他觉得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">U_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的品味没问题，于是推荐给了朋友<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">U_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，类似地<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">U_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>又推荐给了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">U_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这样间接地形成了一条传播链<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub><mo>→</mo><msub><mi>U</mi><mn>2</mn></msub><mo>→</mo><msub><mi>U</mi><mn>3</mn></msub><mo>→</mo><msub><mi>U</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">U_1 \to U_2 \to U_3 \to U_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这样的传播链在社交网络中是实际存在的，甚至可以影响到商品的定价（比如炒鞋）。</p><p>​既然存在现有的一阶推荐系统模型，直接在这些模型的基础上扩展就好了，比如在TrustSVD模型中将一阶邻居替换为高阶邻居扩展用户嵌入函数。但是，这样直观的解决办法是不行的，原因有两点：</p><ul><li><p><strong>计算量大</strong>：对于一个用户来说，可以延伸的社交关系，会随着社交链阶级的增加而指数级增大，直接将所有高阶关系考虑进来的代价太大。</p></li><li><p><strong>不同的用户应当区别对待</strong>：高阶社会关系衍生出一部分噪声，同样的推荐对于部分用户可能并不能起作用。对于一阶关系丰富的用户，现有的基于正则化的推荐方法和TrustSVD等可能已经足够，但是对于一阶关系较少的用户（朋友少）而言，建模高阶的社会关系可能更有用。要做到这样的“区别对待”对于现有的方法而言相对困难。</p></li></ul><p>​        基于<strong>GCN</strong>，该paper提出了HOSR预测模型，通过逐步消息传播的架构实现高阶社会关系的建模，具体而言，一个GCN层通过聚合邻居的消息更新这个结点的用户嵌入函数，实现一阶信息传播，通过堆叠k个GCN层进行k步传播，这样就实现了k阶的推荐传播链。考虑到需要<strong>区别对待不同用户</strong>，作者提出了一种<strong>注意力机制</strong>自适应地聚合来自不同层的用户输入。</p><p>​该paper做的工作有以下几点：</p><ul><li>强调了HOSR模型在捕获潜在的<strong>长推荐传播链</strong>的重要性</li><li>提出基于GCN的、通过多步消息传播、将高阶社交关系显式编码到用户嵌入学习 的预测模型</li><li>在Yelp和Douban数据集上实验验证了HOSR模型的先进性，验证了利用高阶社会关系的有效性，尤其对于稀疏用户(朋友少)格外有效。</li></ul><h2 id="HOSR模型">HOSR模型</h2><p>​HOSR模型主要包含：<strong>用户表征学习的GCN层</strong>+<strong>聚合每个GCN层输出嵌入的注意力机制层</strong>。</p><p><strong>输入</strong>：用户集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi></mrow><annotation encoding="application/x-tex">\mathcal{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span></span></span>，物品集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span>，用户-物品交互矩阵(点击或购买行为)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7805em;vertical-align:-0.0972em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span>，用户-用户关系邻接矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></p><p>**输出：**对每个用户<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo>∈</mo><mi mathvariant="script">U</mi></mrow><annotation encoding="application/x-tex">u \in \mathcal{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span></span></span>的映射函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>u</mi></msub><mo>:</mo><mi mathvariant="script">V</mi><mo>→</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">f_{u} : \mathcal{V} \to R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> ，可以理解为用户对物品喜好的隶属度函数</p><h3 id="用户表征学习">用户表征学习</h3><p>​利用MF(矩阵分解)表征学习框架，随机初始化用户、物品嵌入矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo separator="true">,</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">U, V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>，相应矩阵的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>行代表第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>个用户(物品)，列数为嵌入维度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span> .</p><p>​首先对一阶邻居建模，两个认识的人的喜好具有相似性，对此一阶模型分为两个步骤：<strong>嵌入传播</strong>、<strong>嵌入集成</strong>。 给定用户对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mi mathvariant="normal">‘</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,i`)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mord">‘</span><span class="mclose">)</span></span></span></span>，嵌入传播可以定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>p</mi><mrow><mi>i</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi mathvariant="normal">∣</mi></mrow></msqrt></mfrac><msub><mi>u</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi>W</mi></mrow><annotation encoding="application/x-tex">p_{ii&#x27;}=\frac{1}{\sqrt{|\mathcal{A}_i||\mathcal{A}_{i&#x27;}|}} u_{i&#x27;}W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4514em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></span></p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup></mrow><annotation encoding="application/x-tex">W \in R^{d \times d&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>表示训练权重矩阵</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{A}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示用户i的一阶邻居矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msqrt><mrow><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi mathvariant="normal">∣</mi></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{\sqrt{|\mathcal{A}_i||\mathcal{A}_{i&#x27;}|}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6747em;vertical-align:-0.8296em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.4684em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0309em;"><span class="svg-align" style="top:-3.4286em;"><span class="pstrut" style="height:3.4286em;"></span><span class="mord mtight" style="padding-left:1.19em;"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathcal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">∣∣</span><span class="mord mtight"><span class="mord mathcal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.6068em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8496em;"><span style="top:-2.8496em;margin-right:0.1em;"><span class="pstrut" style="height:2.5556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.262em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span><span style="top:-3.0029em;"><span class="pstrut" style="height:3.4286em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.5429em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.5429em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4257em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8296em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>为消息传播衰减系数</p></li></ul><p>除了邻居的GCN输出嵌入，用户自身的嵌入也被作为当前结点的输入，嵌入传输过程如下图所示</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210616180322972.png" alt="2" style="zoom:80%;" /><p>​由此可定义用户<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的一阶用户嵌入如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>u</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><munder><mo>∑</mo><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msub><mi mathvariant="script">A</mi><mi>i</mi></msub><mo>∪</mo><mo stretchy="false">{</mo><mi>i</mi><mo stretchy="false">}</mo></mrow></munder><msub><mi>p</mi><mrow><mi>i</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u_i^{(1)}=tanh(\sum_{i&#x27; \in \mathcal{A}_i \cup \{i\}} p_{ii&#x27;})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∪</span><span class="mopen mtight">{</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​*注：此模型中tanh表现由于ReLU和sigmoid函数，由此可以精确地定义某个用户的一阶影响力传播公式。</p><p>​我们已经得到了一阶影响力传播公式，通过堆叠 k 个影响力传播层（即图卷积层），用户 i 可以集成来自它的 k 阶邻居，因而i的k阶用户嵌入递归定义为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>u</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo stretchy="false">(</mo><munder><mo>∑</mo><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msub><mi mathvariant="script">A</mi><mi>i</mi></msub><mo>∪</mo><mo stretchy="false">{</mo><mi>i</mi><mo stretchy="false">}</mo></mrow></munder><msubsup><mi>p</mi><mrow><mi>i</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u_i^{(k)}=tanh(\sum_{i&#x27; \in \mathcal{A}_i \cup \{i\}} p_{ii&#x27;}^{(k)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">anh</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∪</span><span class="mopen mtight">{</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">}</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4068em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2932em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>​k阶嵌入传播为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>p</mi><mrow><mi>i</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="script">A</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi mathvariant="normal">∣</mi></mrow></msqrt></mfrac><msubsup><mi>u</mi><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><msup><mi>W</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">p_{ii&#x27;}^{(k)}=\frac{1}{\sqrt{|\mathcal{A}_i||\mathcal{A}_{i&#x27;}|}} u_{i&#x27;}^{(k-1)}W^{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.338em;vertical-align:-0.2932em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4068em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2932em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4514em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathcal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4068em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2932em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210616183212866.png" alt="3" style="zoom:80%;" /><p>​如图所示，每经历一步传播，用户<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">U_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以集成下一阶邻居的用户嵌入，最终过3次影响力传播后，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">U_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的用户嵌入包含了整个社交网络的信息。 经历了k个图卷积层的传播后，用户嵌入定义如下：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210616183834771.png" alt="4" style="zoom: 67%;" /><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">W^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>：经历 k 步影响力传播后的嵌入权重矩阵</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>U</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">U^{(k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>：用户嵌入矩阵，最初<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>U</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">U^{(0)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>：衰减系数矩阵，每个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">L_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示一个衰减系数</li></ul><h3 id="注意力机制层聚合">注意力机制层聚合</h3><p>​利用多层GCN，对于每个结点，我们得到了k阶的用户嵌入信息，但是问题在于：</p><ul><li>少数用户的邻居是很多的，这部分用户结点不能聚合太多邻居信息，否则自身的局部性会丢失；</li><li>大多数用户拥有很少的邻居，它们需要堆叠多层GCN，聚合更多信息以适合提高预测准确性</li></ul><p>这就产生了矛盾，所以大多数基于GCN的预测模型仅仅堆叠1~2层性能就达到了最佳。对此，这篇paper加入了注意力机制网络，对每个结点，评估不同阶邻居的权重再进行嵌入。权重计算公式定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>l</mi></mrow></msub><mo>=</mo><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>i</mi></msub><msub><mi>P</mi><mi>u</mi></msub><mo>+</mo><msubsup><mi>u</mi><mi>i</mi><mi>l</mi></msubsup><msub><mi>P</mi><mi>o</mi></msub><mo stretchy="false">)</mo><msup><mi>h</mi><mi>T</mi></msup><mspace linebreak="newline"></mspace><msub><mi>s</mi><mrow><mi>i</mi><mi>l</mi></mrow></msub><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>l</mi></mrow></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msubsup><mi>u</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><msub><mi>s</mi><mrow><mi>u</mi><mi>l</mi></mrow></msub><msubsup><mi>u</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">a_{il}=ReLU(u_iP_u + u_i^{l}P_o)h^{T} \\s_{il} = softmax(a_{il}) \\u_i^{(a)} = \sum_{l=1}^{k}s_{ul}u_i^{(l)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10903em;">LU</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1382em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>​将初始用户嵌入和经过l层输出的用户嵌入，利用可学习权重矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>，分别映射到隐层，用ReLU激活后经过向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">h</span></span></span></span>变换为注意力核心，并使用softmax计算l层GCN各自的权重系数，最终输出的用户嵌入就是各层用户嵌入与相应层权重系数的加权和。</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618165832519.png" alt="5" style="zoom: 80%;" /><p>​用户所交互的物品也可以看作用户特征，所以最终用户<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>对物品<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>的表征输出公式定义：</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618170633102.png" alt="6" style="zoom:67%;" /><h3 id="模型优化分析">模型优化分析</h3><p>​模型采用在排名任务中应用广泛的BPR损失函数，前提条件为：对于能被观测到的交互，其预测得分要高于未被观测到的交互行为，loss定义如下</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618171547127.png" alt="7" style="zoom:67%;" /><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">D</mi></mrow><annotation encoding="application/x-tex">\mathcal{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.02778em;">D</span></span></span></span>是一个由三元组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><msup><mi>j</mi><mo>+</mo></msup><mo separator="true">,</mo><msup><mi>j</mi><mo>−</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j^+, j^-)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>组成的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>j</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">j^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9658em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>代表被观测到的交互行为，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>j</mi><mo>−</mo></msup></mrow><annotation encoding="application/x-tex">j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9658em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span>代表未被观测到的交互行为，由此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>i</mi><msup><mi>j</mi><mo>+</mo></msup></mrow></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mi>i</mi><msup><mi>j</mi><mo>−</mo></msup></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{y}_{ij^+}-\hat{y}_{ij^-}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3419em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3419em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 表示二者之间边界的预测值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 代表 sigmoid函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Θ</span></span></span></span> 代表模型参数集，模型采用RMSprop算法优化。</p><p>​由于GCN容易导致过拟合，模型采用两种丢弃方法：embedding dropout随机丢弃第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>层某个节点的用户嵌入，减少用户对特定特征的依赖性；graph dropout在每个epoch随机切断用户的一部分社交关系，增强鲁棒性.</p><h2 id="实验">实验</h2><p>​作者利用Douban数据集和Yelp数据集进行实验，旨在研究以下问题：</p><ul><li><p>HOSR相比于目前最先进的社交推荐系统表现如何；在稀疏数据中能否获得更好的性能</p></li><li><p>模型如何从注意力机制和高阶社会关系模型中获益；</p></li><li><p>两种丢弃策略对HOSR模型有哪些性能影响</p><p>两个数据集都是呈现长尾式分布的，多数用户只有少数邻居</p>  <img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618175029507.png" alt="8" style="zoom:80%;" /></li></ul><p>采用training : validation : test = 8 : 1: 1的比例进行批量训练，采用两个指标衡量：</p><ul><li>Recall@K：前K个推荐项目中的正项物品 /所有正项物品（正项表示被交互的）</li><li>NDCG@K：前K个推荐项目中正项物品的排名</li></ul><p>二者值越大，代表性能越好。</p><h3 id="性能对比分析">性能对比分析</h3><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618182050615.png" alt="9" style="zoom:80%;" /><p>​总体来看的话，HOSR模型考虑到了社会关系、考虑到了与物品的交互性、对高阶社会关系的建模相比于IF-BFR等模型更清晰精确，因此在Top-K推荐任务中表现出来的总体指标最为优越。</p><p>​在稀疏数据中，作者按照用户与物品的交互次数分了4组，在不同K大小下进行对比实验，结果在Yelp数据集中表现出了较好的性能指标，在Douban数据集交互次数较少的分组中反而表现更好。</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618183806882.png" alt="10" style="zoom:80%;" /><p>​之前提到过Yelp数据集的稠密性高于Douban数据集，因此对于高点击次数的分组，数据分布相对更稀疏，说明了HOSR的高阶建模有利于相对稀疏的用户。在Douban数据集中，作者认为交互频繁的用户组没有表现出性能更好的原因在于，这部分用户组只进行用户-物品交互关系建模就足够得到用户喜好，交互次数少的用户才需要高阶社会关系建模说明。</p><h3 id="注意力机制层分析">注意力机制层分析</h3><p>​这部分实验将HOSR模型拆散出两个模型，进行了对比实验：一个是移除了注意力机制层的基本模型；另一个是不加权，直接使用每层输出的平均值，作为用户嵌入的模型。</p><p>​结果表明，大多数情况下，引入注意力层的模型性能达到了最佳效果，这说明了不同层分别赋予不同权重的必要性和注意力机制的灵活性，且最后一层的权重明显高于其他层，这说明了高阶邻居对于捕捉到用户喜好的重要性。</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618193542951.png" alt="11" style="zoom:80%;" /><h3 id="超参数分析">超参数分析</h3><p>​    这部分实验研究了嵌入维度和dropout的影响，结果显示模型性能会随着嵌入维度的提升而提升</p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210618193927304.png" alt="12" style="zoom:80%;" /><p>​dropout主要为了防止模型过拟合，且在实验中graph dropout在训练中随机切断了了用户的一部分连接关系，一定程度上提升了模型的鲁棒性。</p><h2 id="总结">总结</h2><p>​本文提出了一个能够利用高阶社交关系的推荐系统框架，将每层GCN看作不同阶的关系图，通过嵌入传播更新用户嵌入，并使用注意力机制将不同层的嵌入传播输出灵活调整，采用两种dropout策略提升模型鲁棒性，并在Douban和Yelp数据集上验证了模型的有效性。</p><h2 id="后记">后记</h2><p>​这篇paper应该是让我想到了“六度空间”理论，延长了推荐系统中的传播链，将朋友的朋友对我喜好的重要性进行了放大，并且考虑到了不同阶社会关系不同程度的重要性，在这个社交关系网络越来越庞大的今天，对于现阶段电商平台进行商品推荐有一定的指导作用。paper中用到的图卷积神经网络是近年来数据挖掘和推荐系统领域应用越来越火热的技术，但由于我对NLP和图卷积的了解并不多，因而理解可能有一些不到位或者偏差，这是需要进一步加强学习的角度。</p><p>​文章的改进点可以从以下角度考虑</p><ul><li>基于前人的工作可以联合考虑用户—用户关系、用户—物品交互关系对用户喜好的影响，以我的角度而言，用户对于不同物品的喜好程度，在训练过程中是如何以不同权重，受到不同阶邻居的影响，表现并不直观；</li><li>在社交网络中，往往一阶朋友对我自身决策的影响是最大的，用户如果存在着关系亲密的朋友，这部分用户单向受到这些朋友的影响可能会很大，因此这些关系边之间的权重是可以被指定的；</li><li>模型在稀疏数据上表现出了相对的优越性，但注意力机制的聚合对于稀疏关系的用户并没有表现出明显的影响，除了注意力机制外，是否有更好的聚合方法。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
            <tag> 论文 </tag>
            
            <tag> GNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP Lab (03)-Attack Lab</title>
      <link href="/2021/04/06/csapp-attacklab/"/>
      <url>/2021/04/06/csapp-attacklab/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文记录了CSAPP配套实验——Attack Lab的详情WriteUp</p></blockquote><ul><li><p>运行环境：</p><ul><li>Ubuntu 22.04</li></ul></li></ul><hr><h3 id="任务">任务</h3><p>类似于Bomb Lab，需要明白<strong>控制</strong>和<strong>过程</strong>在机器级代码中的表现形式和运行过程。</p><p>实验分为两个部分：</p><ul><li>Code Injection Attack (代码注入攻击)——phase1-3，对应文件<code>ctarget</code></li><li>Return-Oriented-Programming（面向返回编程）——phase4-5，对应文件<code>rtarget</code></li></ul><hr><h3 id="知识储备">知识储备</h3><ul><li>请先阅读CSAPP 3.10部分的内容</li><li>在<a href="http://csapp.cs.cmu.edu/3e/attacklab.pdf">官网下载</a>阅读<code>attack.pdf</code></li><li>注：<code>cookie.txt</code>是每个CMU学生的一个ID，自学者默认ID为<code>0x59b997fa</code></li></ul><h4 id="A：hex2raw的使用">A：hex2raw的使用</h4><p>​hex2raw接收字节序列格式的输入，如&quot;30 31 32 33 34 35&quot;代表输入数字&quot;012345&quot;，支持<code>/**/</code>形式的注释，假设我们现在已经写好一个字节序列格式的文本文件<code>exploit.txt</code>，我们可以用如下几种方式向<code>ctarget</code>或<code>rtarget</code>输入该序列。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">unix<span class="token operator">></span> <span class="token function">cat</span> exploit.txt <span class="token operator">|</span> ./hex2raw <span class="token operator">|</span> ./ctarget/* 使用pipes */<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">unix<span class="token operator">></span> ./hex2raw <span class="token operator">&lt;</span> exploit.txt <span class="token operator">></span> exploit_raw.txtunix<span class="token operator">></span> ./ctarget <span class="token operator">&lt;</span> exploit_raw.txt/* I/O重定向 */---------或---------unix<span class="token operator">></span> ./hex2raw <span class="token operator">&lt;</span> exploit.txt <span class="token operator">></span> exploit_raw.txtunix<span class="token operator">></span> ./ctarget <span class="token parameter variable">-i</span> exploit_raw.txt <span class="token parameter variable">-q</span>/* -i表示文件输入，-q表示脱机使用 */<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">unix<span class="token operator">></span> ./hex2raw <span class="token operator">&lt;</span> exploit.txt <span class="token operator">></span> out/* 转换为二进制文件out */<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="B：生成字节码Byte-Codes">B：生成字节码Byte Codes</h4><p>​假设我们事先已生成汇编代码<code>example.s</code>，可以以如下方式得到机器码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">unix<span class="token operator">></span> gcc <span class="token parameter variable">-c</span> example.sunix<span class="token operator">></span> objdump <span class="token parameter variable">-d</span> example.o <span class="token operator">></span> example.d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​在文件<code>example.d</code>即可看见对应的机器码。</p><hr><h3 id="WriteUp">WriteUp</h3><h4 id="Part1：Code-Injection-Attack">Part1：Code Injection Attack</h4><h5 id="Phase1">Phase1</h5><h5 id="Phase2">Phase2</h5><h5 id="Phase3">Phase3</h5><h4 id="Part2：Return-Oriented-Programming">Part2：Return-Oriented Programming</h4><h5 id="Phase4">Phase4</h5><h5 id="Phase5">Phase5</h5><hr><h3 id="参考">参考</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/36807783">https://zhuanlan.zhihu.com/p/36807783</a></p><p><a href="https://github.com/luy-0/CS-APP-LABs/blob/master/Lab-Answer_HB/Lab3-AttackLab/L3-Attack-Note.md">https://github.com/luy-0/CS-APP-LABs/blob/master/Lab-Answer_HB/Lab3-AttackLab/L3-Attack-Note.md</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
          <category> CSAPP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP Lab (02)-Bomb Lab</title>
      <link href="/2021/03/26/csapp-bomblab/"/>
      <url>/2021/03/26/csapp-bomblab/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文记录了CSAPP配套实验——Bomb Lab的详情WriteUp</p></blockquote><ul><li><p>运行环境：</p><ul><li>Ubuntu 20.04</li></ul></li></ul><hr><h3 id="任务">任务</h3><p>拆除&quot;bomb&quot;：通过反汇编，拆除bomb，以达到拆弹的目的。</p><hr><h3 id="知识储备">知识储备</h3><ul><li><strong>GDB调试器的使用</strong></li></ul><p>对于C/C++程序的调试，需要在编译前加上<code>-g</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$g</span>++ <span class="token parameter variable">-g</span> test.cpp <span class="token parameter variable">-o</span> <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来开启<code>gdb</code>调试器调试程序：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$gdb</span> <span class="token builtin class-name">test</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启用<code>gdb</code>进入交互模式后，可以用如下命令调试程序</p><ul><li><strong>运行</strong></li></ul><table><thead><tr><th style="text-align:left">Instruction</th><th>Function</th></tr></thead><tbody><tr><td style="text-align:left">r(un)</td><td>运行程序，当遇到断点后，程序会在断点处停止运行，等待用户输入下一步的命令</td></tr><tr><td style="text-align:left">c(ontinue)</td><td>继续执行，到下一个断点处（或运行结束）</td></tr><tr><td style="text-align:left">n(ext)</td><td>单步跟踪程序，当遇到函数调用时，也不进入此函数体</td></tr><tr><td style="text-align:left">s(tep)</td><td>单步调试如果有函数调用，则进入函数</td></tr><tr><td style="text-align:left">until( lineNumber)</td><td>运行程序直到退出循环体，加行号可以直接运行到某行</td></tr><tr><td style="text-align:left">finish</td><td>运行至当前函数完成返回，并打印函数返回时的堆栈地址和返回值及参数值等信息。</td></tr><tr><td style="text-align:left">call function(params)</td><td>调用程序中可用函数，并传递参数，如对于 int sum(int a, int b)，可使用call sum(1, 2)</td></tr><tr><td style="text-align:left">q(uit)</td><td>退出gdb调试器</td></tr><tr><td style="text-align:left">b(reak )</td><td>设置断点</td></tr><tr><td style="text-align:left">info r</td><td>查看寄存器</td></tr><tr><td style="text-align:left">p</td><td>输出变量</td></tr><tr><td style="text-align:left">x</td><td>查看内容</td></tr><tr><td style="text-align:left">set args</td><td>设置函数运行参数</td></tr></tbody></table><ul><li><strong>设置断点</strong></li></ul><hr><h3 id="WriteUp">WriteUp</h3><p>​题目一共给了6个bombs，打开<code>bomb.c</code>查看部分源码，其实关键在于这几段</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326172525304.png" alt="image-20210326172525304"></p><p>程序读取<code>input</code>字符串，如果输入<code>正确的</code>字符串，那么就拆解成功一个炸弹，<s>否则你就会像下图一样被blown up</s></p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326173121180.png" alt="image-20210326173121180"></p><p>先执行下面的指令得到程序的反汇编代码，然后我们进行愉快的拆解</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$objdump</span> <span class="token parameter variable">-d</span> bomb <span class="token operator">></span> bomb.asm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><h4 id="phase1">phase1</h4><p>在bomb.asm中找到<code>phase_1()</code>的汇编代码段如下：</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326181958171.png" alt="image-20210326181958171"></p><p>这里关于寄存器的几点需要补充：</p><ul><li>%rdi:  保存了函数入口的<strong>第一个</strong>参数</li><li>%rsi:  保存了函数入口的<strong>第二个</strong>参数</li><li>%rdx: 保存了函数入口的<strong>第三个</strong>参数</li><li>%rcx: 保存了函数入口的<strong>第四个</strong>参数</li><li>%rax：函数的<strong>返回值</strong></li></ul><p>由此，要避免0x400ef2处触发explode_bomb，需要在上一行进行跳转，跳转条件**%eax值为0**（test是先进行与运算再设置PSW的，判断相等的条件为<strong>ZF==0</strong>），因此我们去strings_not_equal处的汇编代码查看</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326182825730.png" alt="image-20210326182825730"></p><p>输入参数为%rdi和%rsi，返回值为%rax，当两个输入存储的值不相等时，返回%eax值1，可以确定，<strong>%si存储了待比较的字符串</strong>，也就是bomb1的key，因此我们在该函数处设置断点，并以字符串的形式打印%si中的值</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$gdb</span> bomb<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>break strings_not_equal<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>r<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> p <span class="token punctuation">(</span>char*<span class="token punctuation">)</span><span class="token variable">$rsi</span><span class="token variable">$1</span> <span class="token operator">=</span> 0x402400 <span class="token string">"Border relations with Canada have never been better."</span><span class="token punctuation">(</span>gdb<span class="token punctuation">)</span> p <span class="token punctuation">(</span>char*<span class="token punctuation">)</span><span class="token variable">$rdi</span><span class="token variable">$2</span> <span class="token operator">=</span> 0x603780 <span class="token operator">&lt;</span>input_strings<span class="token operator">></span> <span class="token string">"2333"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，bomb1的key为：<strong>Border relations with Canada have never been better.</strong></p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326183755389.png" alt="image-20210326183755389"></p><p>bomb1拆除成功。</p></li><li><h4 id="phase2">phase2</h4><p><code>phase_2()</code>的汇编代码如下</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210326184232130.png" alt="image-20210326184232130"></p><p>这里不难看到<code>phase_2()</code>其实先利用<code>read_six_numbers</code>读入6个数，再逐个比较。数字比较部分的代码分析如下：</p><p>注意：</p><ul><li>%rsp生长方向为地址减小的方向，因此，对于存储在%rsp中的<code>arr</code>首地址，<code>lea 0x4(%rsp), %rbx</code>实际表示为<code>%rbx = arr[i + 1]</code></li></ul><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">0000000000400efc &lt;phase_2&gt;:  400efc:55                   push   %rbp  400efd:53                   push   %rbx  400efe:48 83 ec 28          sub    $0x28,%rsp         &#x2F;&#x2F;开辟栈空间  400f02:48 89 e6             mov    %rsp,%rsi&#x2F;&#x2F;%rsp实际上保存了数组的首地址，  400f05:e8 52 05 00 00       callq  40145c &lt;read_six_numbers&gt;  400f0a:83 3c 24 01          cmpl   $0x1,(%rsp)&#x2F;&#x2F;1. arr[0] &#x3D; 1  400f0e:74 20                je     400f30 &lt;phase_2+0x34&gt;  400f10:e8 25 05 00 00       callq  40143a &lt;explode_bomb&gt;  400f15:eb 19                jmp    400f30 &lt;phase_2+0x34&gt;  400f17:8b 43 fc             mov    -0x4(%rbx),%eax&#x2F;&#x2F;4. %eax &#x3D; arr[?-1]  400f1a:01 c0                add    %eax,%eax&#x2F;&#x2F;5. %eax *&#x3D; 2  400f1c:39 03                cmp    %eax,(%rbx)&#x2F;&#x2F;6. if %eax &#x3D;&#x3D; arr[?]   400f1e:74 05                je     400f25 &lt;phase_2+0x29&gt;&#x2F;&#x2F;  400f20:e8 15 05 00 00       callq  40143a &lt;explode_bomb&gt;  400f25:48 83 c3 04          add    $0x4,%rbx&#x2F;&#x2F;7. arr[?+1]  400f29:48 39 eb             cmp    %rbp,%rbx&#x2F;&#x2F;8. arr[?] !&#x3D; arr[6],loop to 4  400f2c:75 e9                jne    400f17 &lt;phase_2+0x1b&gt;  400f2e:eb 0c                jmp    400f3c &lt;phase_2+0x40&gt;  400f30:48 8d 5c 24 04       lea    0x4(%rsp),%rbx&#x2F;&#x2F;2. (%rbx) &#x3D; arr[1]  400f35:48 8d 6c 24 18       lea    0x18(%rsp),%rbp&#x2F;&#x2F;3. (%rbp) &#x3D; arr[6]，0x18是十进制的24  400f3a:eb db                jmp    400f17 &lt;phase_2+0x1b&gt;  400f3c:48 83 c4 28          add    $0x28,%rsp  400f40:5b                   pop    %rbx  400f41:5d                   pop    %rbp  400f42:c3                   retq  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据对汇编代码的分析，可以得知代码的逻辑如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token function">explode_bomb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>tmp <span class="token operator">!=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">explode_bomb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，<code>phase_2()</code>的key为首项为1，公比为2的等比数列的前6项：<strong>1 2 4 8 16 32</strong></p></li><li><h4 id="phase3">phase3</h4><p>先让我们看一下源码</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">0000000000400f43 &lt;phase_3&gt;:  400f43:48 83 ec 18          sub    $0x18,%rsp  400f47:48 8d 4c 24 0c       lea    0xc(%rsp),%rcx  400f4c:48 8d 54 24 08       lea    0x8(%rsp),%rdx  400f51:be cf 25 40 00       mov    $0x4025cf,%esi  400f56:b8 00 00 00 00       mov    $0x0,%eax  400f5b:e8 90 fc ff ff       callq  400bf0 &lt;__isoc99_sscanf@plt&gt;&#x2F;&#x2F;sscanf返回读取到的item个数  400f60:83 f8 01             cmp    $0x1,%eax  400f63:7f 05                jg     400f6a &lt;phase_3+0x27&gt;  400f65:e8 d0 04 00 00       callq  40143a &lt;explode_bomb&gt;  400f6a:83 7c 24 08 07       cmpl   $0x7,0x8(%rsp)  400f6f:77 3c                ja     400fad &lt;phase_3+0x6a&gt;&#x2F;&#x2F;num1&gt;7,bomb()  400f71:8b 44 24 08          mov    0x8(%rsp),%eax&#x2F;&#x2F;eax &#x3D; num1  400f75:ff 24 c5 70 24 40 00 jmpq   *0x402470(,%rax,8)&#x2F;&#x2F;(0x402470[8*num1])处的值  400f7c:b8 cf 00 00 00       mov    $0xcf,%eax  400f81:eb 3b                jmp    400fbe &lt;phase_3+0x7b&gt;  400f83:b8 c3 02 00 00       mov    $0x2c3,%eax  400f88:eb 34                jmp    400fbe &lt;phase_3+0x7b&gt;  400f8a:b8 00 01 00 00       mov    $0x100,%eax  400f8f:eb 2d                jmp    400fbe &lt;phase_3+0x7b&gt;  400f91:b8 85 01 00 00       mov    $0x185,%eax  400f96:eb 26                jmp    400fbe &lt;phase_3+0x7b&gt;  400f98:b8 ce 00 00 00       mov    $0xce,%eax  400f9d:eb 1f                jmp    400fbe &lt;phase_3+0x7b&gt;  400f9f:b8 aa 02 00 00       mov    $0x2aa,%eax  400fa4:eb 18                jmp    400fbe &lt;phase_3+0x7b&gt;  400fa6:b8 47 01 00 00       mov    $0x147,%eax  400fab:eb 11                jmp    400fbe &lt;phase_3+0x7b&gt;  400fad:e8 88 04 00 00       callq  40143a &lt;explode_bomb&gt;  400fb2:b8 00 00 00 00       mov    $0x0,%eax  400fb7:eb 05                jmp    400fbe &lt;phase_3+0x7b&gt;  400fb9:b8 37 01 00 00       mov    $0x137,%eax  400fbe:3b 44 24 0c          cmp    0xc(%rsp),%eax  400fc2:74 05                je     400fc9 &lt;phase_3+0x86&gt;  400fc4:e8 71 04 00 00       callq  40143a &lt;explode_bomb&gt;  400fc9:48 83 c4 18          add    $0x18,%rsp  400fcd:c3                   retq   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源码中可以看到调用了<code>sscanf</code>库函数，该函数表示返回读入参数的个数，我们设置断点查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>break *0x400f60---phase_3<span class="token punctuation">(</span><span class="token punctuation">)</span>:INPUT:2 <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span>---<span class="token punctuation">(</span>gdb<span class="token punctuation">)</span>info r eaxeax            0x2                 <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此phase_3()只读取两个参数，查看0x8(%rsp)和0xc(%rsp)</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">Breakpoint 1, 0x0000000000400f60 in phase_3 ()(gdb) x $sp0x7fffffffdf00:0x00402210(gdb) x $rsp0x7fffffffdf00:0x00402210(gdb) x $rsp+0x80x7fffffffdf08:0x00000002(gdb) x $rsp+0xc0x7fffffffdf0c:0x00000003<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分别放在<code>0x8(%rsp)</code>和<code>0xc(%sp)</code>（输入的参数入栈，最后一个在栈底<code>0xc</code>，高地址；第一个在栈顶，低地址<code>0x8</code>），我们假设两处输入的参数分别为<code>num1</code>和<code>num2</code>，且0&lt;=<code>num1</code>&lt;=7（<strong>ja只判定无符号数</strong>），num1被存储在%eax中，根据</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">400f75:ff 24 c5 70 24 40 00 jmpq   *0x402470(,%rax,8)&#x2F;&#x2F;(0x402470[8*num1])处的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可知，根据输入不同的num1，需要跳转到不同的地址处，我们从0x402470开始连续打印8个地址（x64机器每个地址8个字节）</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">(gdb) x&#x2F;8xg 0x4024700x402470:       0x0000000000400f7c      0x0000000000400fb90x402480:       0x0000000000400f83      0x0000000000400f8a0x402490:       0x0000000000400f91      0x0000000000400f980x4024a0:       0x0000000000400f9f      0x0000000000400fa6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以根据num1=[0…7]，分别前往源码中不同的地址处对%eax赋值操作，跳转处标记在源码中</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">400f7c:b8 cf 00 00 00       mov    $0xcf,%eax&#x2F;&#x2F;num1&#x3D;0,eax&#x3D;0xcf&#x3D;207400f81:eb 3b                jmp    400fbe &lt;phase_3+0x7b&gt;400f83:b8 c3 02 00 00       mov    $0x2c3,%eax&#x2F;&#x2F;num1&#x3D;2,eax&#x3D;0x2c3&#x3D;707400f88:eb 34                jmp    400fbe &lt;phase_3+0x7b&gt;400f8a:b8 00 01 00 00       mov    $0x100,%eax&#x2F;&#x2F;num1&#x3D;3,eax&#x3D;0x100&#x3D;256400f8f:eb 2d                jmp    400fbe &lt;phase_3+0x7b&gt;400f91:b8 85 01 00 00       mov    $0x185,%eax&#x2F;&#x2F;num1&#x3D;4,eax&#x3D;0x185&#x3D;389400f96:eb 26                jmp    400fbe &lt;phase_3+0x7b&gt;400f98:b8 ce 00 00 00       mov    $0xce,%eax&#x2F;&#x2F;num1&#x3D;5,eax&#x3D;0xce&#x3D;206400f9d:eb 1f                jmp    400fbe &lt;phase_3+0x7b&gt;400f9f:b8 aa 02 00 00       mov    $0x2aa,%eax&#x2F;&#x2F;num1&#x3D;6,eax&#x3D;0x2aa&#x3D;682400fa4:eb 18                jmp    400fbe &lt;phase_3+0x7b&gt;400fa6:b8 47 01 00 00       mov    $0x147,%eax&#x2F;&#x2F;num1&#x3D;7,eax&#x3D;0x147&#x3D;327400fab:eb 11                jmp    400fbe &lt;phase_3+0x7b&gt;400fad:e8 88 04 00 00       callq  40143a &lt;explode_bomb&gt;400fb2:b8 00 00 00 00       mov    $0x0,%eax400fb7:eb 05                jmp    400fbe &lt;phase_3+0x7b&gt;400fb9:b8 37 01 00 00       mov    $0x137,%eax&#x2F;&#x2F;num1&#x3D;1,eax&#x3D;0x137&#x3D;311400fbe:3b 44 24 0c          cmp    0xc(%rsp),%eax&#x2F;&#x2F;num2 &#x3D;&#x3D; eax? (defused()) : bomb400fc2:74 05                je     400fc9 &lt;phase_3+0x86&gt;400fc4:e8 71 04 00 00       callq  40143a &lt;explode_bomb&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，phase_3()的key：num1 num2，对应以下8组中任意一组即可：</p><table><thead><tr><th>num1</th><th>num2</th></tr></thead><tbody><tr><td>0</td><td>207</td></tr><tr><td>1</td><td>311</td></tr><tr><td>2</td><td>707</td></tr><tr><td>3</td><td>256</td></tr><tr><td>4</td><td>389</td></tr><tr><td>5</td><td>206</td></tr><tr><td>6</td><td>682</td></tr><tr><td>7</td><td>327</td></tr></tbody></table></li><li><h4 id="phase4">phase4</h4><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">000000000040100c &lt;phase_4&gt;:  40100c:48 83 ec 18          sub    $0x18,%rsp  401010:48 8d 4c 24 0c       lea    0xc(%rsp),%rcx%rcx&#x3D;num2  401015:48 8d 54 24 08       lea    0x8(%rsp),%rdx  40101a:be cf 25 40 00       mov    $0x4025cf,%esi  40101f:b8 00 00 00 00       mov    $0x0,%eax  401024:e8 c7 fb ff ff       callq  400bf0 &lt;__isoc99_sscanf@plt&gt;  401029:83 f8 02             cmp    $0x2,%eax  40102c:75 07                jne    401035 &lt;phase_4+0x29&gt;  40102e:83 7c 24 08 0e       cmpl   $0xe,0x8(%rsp)  401033:76 05                jbe    40103a &lt;phase_4+0x2e&gt;&#x2F;&#x2F;num1 &lt;&#x3D; 0xe(14)  401035:e8 00 04 00 00       callq  40143a &lt;explode_bomb&gt;  40103a:ba 0e 00 00 00       mov    $0xe,%edx&#x2F;&#x2F;edx &#x3D; 14  40103f:be 00 00 00 00       mov    $0x0,%esi&#x2F;&#x2F;esi &#x3D; 0  401044:8b 7c 24 08          mov    0x8(%rsp),%edi&#x2F;&#x2F;edi &#x3D; num1  401048:e8 81 ff ff ff       callq  400fce &lt;func4&gt;  40104d:85 c0                test   %eax,%eax  40104f:75 07                jne    401058 &lt;phase_4+0x4c&gt;  401051:83 7c 24 0c 00       cmpl   $0x0,0xc(%rsp)  401056:74 05                je     40105d &lt;phase_4+0x51&gt;  401058:e8 dd 03 00 00       callq  40143a &lt;explode_bomb&gt;  40105d:48 83 c4 18          add    $0x18,%rsp  401061:c3                   retq  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依然是读入两个参数num1(0x8(%rsp))和num2(0xc(%rsp))，且由跳转函数可以得到0&lt;=<code>num1</code>&lt;=14，经过了三个寄存器的赋值以后，函数跳转到<code>fun4</code>，不过在这之前我们可以看到，在后续的汇编代码中，需要满足<code>%eax = 0</code>和<code>num2=0</code>两个条件。以下是func4的汇编代码：</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">0000000000400fce &lt;func4&gt;:&#x2F;&#x2F;已知的参数:%edx&#x3D;14,%esi&#x3D;0,%edi&#x3D;num1  400fce:48 83 ec 08          sub    $0x8,%rsp  400fd2:89 d0                mov    %edx,%eax&#x2F;&#x2F;%eax&#x3D;14  400fd4:29 f0                sub    %esi,%eax&#x2F;&#x2F;%eax -&#x3D; (%esi)  400fd6:89 c1                mov    %eax,%ecx&#x2F;&#x2F;%ecx&#x3D;%eax  400fd8:c1 e9 1f             shr    $0x1f,%ecx&#x2F;&#x2F;取%ecx的符号位   400fdb:01 c8                add    %ecx,%eax&#x2F;&#x2F;%eax +&#x3D; %ecx  400fdd:d1 f8                sar    %eax  400fdf:8d 0c 30             lea    (%rax,%rsi,1),%ecx  400fe2:39 f9                cmp    %edi,%ecx&#x2F;&#x2F;num1 &gt;&#x3D; %ecx  400fe4:7e 0c                jle    400ff2 &lt;func4+0x24&gt;  400fe6:8d 51 ff             lea    -0x1(%rcx),%edx%edx&#x3D;%rcx-1  400fe9:e8 e0 ff ff ff       callq  400fce &lt;func4&gt;  400fee:01 c0                add    %eax,%eax%eax*&#x3D;2  400ff0:eb 15                jmp    401007 &lt;func4+0x39&gt;&#x2F;&#x2F;done  400ff2:b8 00 00 00 00       mov    $0x0,%eax&#x2F;&#x2F;%eax&#x3D;0  400ff7:39 f9                cmp    %edi,%ecx&#x2F;&#x2F;num1&lt;&#x3D;%ecx，done  400ff9:7d 0c                jge    401007 &lt;func4+0x39&gt;  400ffb:8d 71 01             lea    0x1(%rcx),%esi&#x2F;&#x2F;%esi&#x3D;%rcx+1  400ffe:e8 cb ff ff ff       callq  400fce &lt;func4&gt;  401003:8d 44 00 01          lea    0x1(%rax,%rax,1),%eax  401007:48 83 c4 08          add    $0x8,%rsp  40100b:c3                   retq <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：类似于  cmp    %edi,%ecxjle    400ff2 &lt;func4+0x24&gt;；跳转语句的主语是dst，如左边这句表示，compare %edi : %ecx，若 %ecx &lt;=(lower or equal) %edi，则jump到0x400ff2处</p></blockquote><p>分析两次跳转条件，可以得到<code>%ecx=num1</code>，即可返回<code>%eax=0</code>，汇编代码里面用了比较多的递归，为了方便计算我们画出算法流程图后写个测试函数看看num1应该是多少：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">fun4</span><span class="token punctuation">(</span><span class="token keyword">int</span> dx<span class="token punctuation">,</span> <span class="token keyword">int</span> si<span class="token punctuation">,</span> <span class="token keyword">int</span> di<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">int</span> ax <span class="token operator">=</span> dx <span class="token operator">-</span> si<span class="token punctuation">;</span>   <span class="token keyword">int</span> cx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span><span class="token punctuation">)</span>ax <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">;</span>   ax <span class="token operator">=</span> <span class="token punctuation">(</span>ax <span class="token operator">+</span> cx<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span>   cx <span class="token operator">=</span> ax <span class="token operator">+</span> si<span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>di <span class="token operator">>=</span> cx<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      ax <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>di <span class="token operator">&lt;=</span> cx<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> ax<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         si <span class="token operator">=</span> cx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>         ax <span class="token operator">=</span> <span class="token function">fun4</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span> si<span class="token punctuation">,</span> di<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token number">2</span><span class="token operator">*</span>ax <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      dx <span class="token operator">=</span> cx <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>      ax <span class="token operator">=</span> <span class="token function">fun4</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span> si<span class="token punctuation">,</span> di<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">*</span> ax<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> num1 <span class="token operator">&lt;=</span> <span class="token number">14</span><span class="token punctuation">;</span> <span class="token operator">++</span>num1<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">fun4</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> num1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> num1<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">--</span>运行结果<span class="token operator">--</span><span class="token operator">--</span><span class="token number">0</span><span class="token number">1</span><span class="token number">3</span><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以**phase_4()**的key为如下4组中的任意一组即可：</p><p><strong>0 0</strong></p><p><strong>1 0</strong></p><p><strong>3 0</strong></p><p><strong>7 0</strong></p></li><li><h4 id="phase5">phase5</h4><p>反汇编代码如下：</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">0000000000401062 &lt;phase_5&gt;:  401062:53                   push   %rbx  401063:48 83 ec 20          sub    $0x20,%rsp  401067:48 89 fb             mov    %rdi,%rbx  40106a:64 48 8b 04 25 28 00 mov    %fs:0x28,%rax  401071:00 00   401073:48 89 44 24 18       mov    %rax,0x18(%rsp)  401078:31 c0                xor    %eax,%eax  40107a:e8 9c 02 00 00       callq  40131b &lt;string_length&gt;  40107f:83 f8 06             cmp    $0x6,%eax  401082:74 4e                je     4010d2 &lt;phase_5+0x70&gt;  401084:e8 b1 03 00 00       callq  40143a &lt;explode_bomb&gt;  401089:eb 47                jmp    4010d2 &lt;phase_5+0x70&gt;  40108b:0f b6 0c 03          movzbl (%rbx,%rax,1),%ecx  40108f:88 0c 24             mov    %cl,(%rsp)  401092:48 8b 14 24          mov    (%rsp),%rdx  401096:83 e2 0f             and    $0xf,%edx  401099:0f b6 92 b0 24 40 00 movzbl 0x4024b0(%rdx),%edx  4010a0:88 54 04 10          mov    %dl,0x10(%rsp,%rax,1)  4010a4:48 83 c0 01          add    $0x1,%rax  4010a8:48 83 f8 06          cmp    $0x6,%rax  4010ac:75 dd                jne    40108b &lt;phase_5+0x29&gt;  4010ae:c6 44 24 16 00       movb   $0x0,0x16(%rsp)  4010b3:be 5e 24 40 00       mov    $0x40245e,%esi  4010b8:48 8d 7c 24 10       lea    0x10(%rsp),%rdi  4010bd:e8 76 02 00 00       callq  401338 &lt;strings_not_equal&gt;  4010c2:85 c0                test   %eax,%eax  4010c4:74 13                je     4010d9 &lt;phase_5+0x77&gt;  4010c6:e8 6f 03 00 00       callq  40143a &lt;explode_bomb&gt;  4010cb:0f 1f 44 00 00       nopl   0x0(%rax,%rax,1)  4010d0:eb 07                jmp    4010d9 &lt;phase_5+0x77&gt;  4010d2:b8 00 00 00 00       mov    $0x0,%eax  4010d7:eb b2                jmp    40108b &lt;phase_5+0x29&gt;  4010d9:48 8b 44 24 18       mov    0x18(%rsp),%rax  4010de:64 48 33 04 25 28 00 xor    %fs:0x28,%rax  4010e5:00 00   4010e7:74 05                je     4010ee &lt;phase_5+0x8c&gt;  4010e9:e8 42 fa ff ff       callq  400b30 &lt;__stack_chk_fail@plt&gt;  4010ee:48 83 c4 20          add    $0x20,%rsp  4010f2:5b                   pop    %rbx  4010f3:c3                   retq <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从0x40107f处可以看到，phase5需要我们输入长度为<code>6</code>的字符串，我们先输入长度为6的字符串，并在0x40108b处设置断点，可以看到</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">(gdb) p (char*)$rbx$2 &#x3D; 0x6038c0 &lt;input_strings+320&gt; &quot;abcdef&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>%rbx存储了我们输入字符串的首地址，可以看到0x4010ac处之前是在sp中存储这6位字符，然后直到0x4010bd处比较字符串。这样我们其实可以直接查询%rsi存储的地址处的字符串</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">(gdb) p (char*)$esi$5 &#x3D; 0x40245e &quot;flyers&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这就结束了？**不！**这不只是简单比较一下字符串就行，此前对输入的字符串进行了转换映射。我们将如下的汇编代码用高级语言改写：</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">40108b:0f b6 0c 03          movzbl (%rbx,%rax,1),%ecx40108f:88 0c 24             mov    %cl,(%rsp)401092:48 8b 14 24          mov    (%rsp),%rdx401096:83 e2 0f             and    $0xf,%edx401099:0f b6 92 b0 24 40 00 movzbl 0x4024b0(%rdx),%edx4010a0:88 54 04 10          mov    %dl,0x10(%rsp,%rax,1)4010a4:48 83 c0 01          add    $0x1,%rax4010a8:48 83 f8 06          cmp    $0x6,%rax4010ac:75 dd                jne    40108b &lt;phase_5+0x29&gt;------%rbx：我们输入的字符，设定为 inputs[i]，经过与0x4024b0的字符运算后存储在0x10(%rsp)处0x4024b0：事先存储的字符，设定为arr[i] int sp[6]; for (int i &#x3D; 0; i &lt; 6; ++i)     sp[i] &#x3D; arr[inputs[i] &amp; 0xf];------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对于任意一个数num，有<code>num&amp;0xf&lt;=0xf</code>，因此我们可以查看0x4024b0处开始的16个字符</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210329113622421.png" alt="image-20210329113622421"></p><p>可以得到</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token char">'m'</span><span class="token punctuation">,</span> <span class="token char">'a'</span><span class="token punctuation">,</span> <span class="token char">'d'</span><span class="token punctuation">,</span> <span class="token char">'u'</span><span class="token punctuation">,</span> <span class="token char">'i'</span><span class="token punctuation">,</span> <span class="token char">'e'</span><span class="token punctuation">,</span> <span class="token char">'r'</span><span class="token punctuation">,</span> <span class="token char">'s'</span><span class="token punctuation">,</span> <span class="token char">'n'</span><span class="token punctuation">,</span> <span class="token char">'f'</span><span class="token punctuation">,</span> <span class="token char">'o'</span><span class="token punctuation">,</span><span class="token char">' t'</span><span class="token punctuation">,</span> <span class="token char">'v'</span><span class="token punctuation">,</span> <span class="token char">'b'</span><span class="token punctuation">,</span> <span class="token char">'y'</span><span class="token punctuation">,</span> <span class="token char">'l'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最终0x10(%rsp)处的字符（也即sp[]）被映射到%rdi处，%rsi处的字符为</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210329113943236.png" alt="image-20210329113943236"></p><p>所以只需要找到合适的<code>inputs</code>，并作映射<code>sp[i]=arr[inputs[i]&amp;0xf]</code>，使得<code>string(sp)==&quot;flyers&quot; </code>，写个测试函数找一找：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">    string arr &#x3D; &quot;maduiersnfotvbyl&quot;;    string si &#x3D; &quot;flyers&quot;;    for (int i &#x3D; 0; i &lt; 6; ++i) &#123;        cout &lt;&lt; si[i] &lt;&lt; &quot;: &quot;;        for (int k &#x3D; 0; k &lt; 128; k++)            if (arr[int(k &amp; 0xf)] &#x3D;&#x3D; si[i])                cout &lt;&lt; (char)k;        cout &lt;&lt; endl;    &#125;----f: )9IYiyl: &#x2F;?O_oy: .&gt;N^n~e: %5EUeur: &amp;6FVfvs: &#39;7GWgw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上<strong>6行字符的任意排列组合</strong>均可拆除phase5()</p><p>其实这里有个彩蛋，<code>Ctrl+C</code>可以直接拆弹，这是我没想到的2333</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210329130013620.png" alt="image-20210329130013620"></p></li><li><h4 id="phase6">phase6</h4><p>激动人心的时刻，终于来到最后一个phase了，让我们继续看一下源码</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">00000000004010f4 &lt;phase_6&gt;:  4010f4:41 56                push   %r14  4010f6:41 55                push   %r13  4010f8:41 54                push   %r12  4010fa:55                   push   %rbp  4010fb:53                   push   %rbx  4010fc:48 83 ec 50          sub    $0x50,%rsp  401100:49 89 e5             mov    %rsp,%r13  401103:48 89 e6             mov    %rsp,%rsi  401106:e8 51 03 00 00       callq  40145c &lt;read_six_numbers&gt;  40110b:49 89 e6             mov    %rsp,%r14  40110e:41 bc 00 00 00 00    mov    $0x0,%r12d  401114:4c 89 ed             mov    %r13,%rbp  401117:41 8b 45 00          mov    0x0(%r13),%eax  40111b:83 e8 01             sub    $0x1,%eax  40111e:83 f8 05             cmp    $0x5,%eax  401121:76 05                jbe    401128 &lt;phase_6+0x34&gt;  401123:e8 12 03 00 00       callq  40143a &lt;explode_bomb&gt;  401128:41 83 c4 01          add    $0x1,%r12d  40112c:41 83 fc 06          cmp    $0x6,%r12d  401130:74 21                je     401153 &lt;phase_6+0x5f&gt;  401132:44 89 e3             mov    %r12d,%ebx  401135:48 63 c3             movslq %ebx,%rax  401138:8b 04 84             mov    (%rsp,%rax,4),%eax  40113b:39 45 00             cmp    %eax,0x0(%rbp)  40113e:75 05                jne    401145 &lt;phase_6+0x51&gt;  401140:e8 f5 02 00 00       callq  40143a &lt;explode_bomb&gt;  401145:83 c3 01             add    $0x1,%ebx  401148:83 fb 05             cmp    $0x5,%ebx  40114b:7e e8                jle    401135 &lt;phase_6+0x41&gt;  40114d:49 83 c5 04          add    $0x4,%r13  401151:eb c1                jmp    401114 &lt;phase_6+0x20&gt;  401153:48 8d 74 24 18       lea    0x18(%rsp),%rsi  401158:4c 89 f0             mov    %r14,%rax  40115b:b9 07 00 00 00       mov    $0x7,%ecx  401160:89 ca                mov    %ecx,%edx  401162:2b 10                sub    (%rax),%edx  401164:89 10                mov    %edx,(%rax)  401166:48 83 c0 04          add    $0x4,%rax  40116a:48 39 f0             cmp    %rsi,%rax  40116d:75 f1                jne    401160 &lt;phase_6+0x6c&gt;  40116f:be 00 00 00 00       mov    $0x0,%esi  401174:eb 21                jmp    401197 &lt;phase_6+0xa3&gt;  401176:48 8b 52 08          mov    0x8(%rdx),%rdx  40117a:83 c0 01             add    $0x1,%eax  40117d:39 c8                cmp    %ecx,%eax  40117f:75 f5                jne    401176 &lt;phase_6+0x82&gt;  401181:eb 05                jmp    401188 &lt;phase_6+0x94&gt;  401183:ba d0 32 60 00       mov    $0x6032d0,%edx  401188:48 89 54 74 20       mov    %rdx,0x20(%rsp,%rsi,2)  40118d:48 83 c6 04          add    $0x4,%rsi  401191:48 83 fe 18          cmp    $0x18,%rsi  401195:74 14                je     4011ab &lt;phase_6+0xb7&gt;  401197:8b 0c 34             mov    (%rsp,%rsi,1),%ecx  40119a:83 f9 01             cmp    $0x1,%ecx  40119d:7e e4                jle    401183 &lt;phase_6+0x8f&gt;  40119f:b8 01 00 00 00       mov    $0x1,%eax  4011a4:ba d0 32 60 00       mov    $0x6032d0,%edx  4011a9:eb cb                jmp    401176 &lt;phase_6+0x82&gt;  4011ab:48 8b 5c 24 20       mov    0x20(%rsp),%rbx  4011b0:48 8d 44 24 28       lea    0x28(%rsp),%rax  4011b5:48 8d 74 24 50       lea    0x50(%rsp),%rsi  4011ba:48 89 d9             mov    %rbx,%rcx  4011bd:48 8b 10             mov    (%rax),%rdx  4011c0:48 89 51 08          mov    %rdx,0x8(%rcx)  4011c4:48 83 c0 08          add    $0x8,%rax  4011c8:48 39 f0             cmp    %rsi,%rax  4011cb:74 05                je     4011d2 &lt;phase_6+0xde&gt;  4011cd:48 89 d1             mov    %rdx,%rcx  4011d0:eb eb                jmp    4011bd &lt;phase_6+0xc9&gt;  4011d2:48 c7 42 08 00 00 00 movq   $0x0,0x8(%rdx)  4011d9:00   4011da:bd 05 00 00 00       mov    $0x5,%ebp  4011df:48 8b 43 08          mov    0x8(%rbx),%rax  4011e3:8b 00                mov    (%rax),%eax  4011e5:39 03                cmp    %eax,(%rbx)  4011e7:7d 05                jge    4011ee &lt;phase_6+0xfa&gt;  4011e9:e8 4c 02 00 00       callq  40143a &lt;explode_bomb&gt;  4011ee:48 8b 5b 08          mov    0x8(%rbx),%rbx  4011f2:83 ed 01             sub    $0x1,%ebp  4011f5:75 e8                jne    4011df &lt;phase_6+0xeb&gt;  4011f7:48 83 c4 50          add    $0x50,%rsp  4011fb:5b                   pop    %rbx  4011fc:5d                   pop    %rbp  4011fd:41 5c                pop    %r12  4011ff:41 5d                pop    %r13  401201:41 5e                pop    %r14  401203:c3                   retq   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>比以往的长了很多，不过从输入处我们还是可以看到，此phase依然是读入6个数，我们逐段分析一下</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">40110b:49 89 e6             mov    %rsp,%r1440110e:41 bc 00 00 00 00    mov    $0x0,%r12d401114:4c 89 ed             mov    %r13,%rbp401117:41 8b 45 00          mov    0x0(%r13),%eax40111b:83 e8 01             sub    $0x1,%eax40111e:83 f8 05             cmp    $0x5,%eax401121:76 05                jbe    401128 &lt;phase_6+0x34&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>​        可以得到以下信息</p><ul><li><p>输入的6个数字保存在%rsp、%rbp、%r13、%r14中，且存储的均为数组的首地址，我们假设该数组为<strong>arr[]</strong></p></li><li><p>arr[0]-1&lt;=5</p><p>继续往下看到0x401153</p><pre class="line-numbers language-asm" data-language="asm"><code class="language-asm">  401114:4c 89 ed             mov    %r13,%rbp    401117:41 8b 45 00          mov    0x0(%r13),%eax  40111b:83 e8 01             sub    $0x1,%eax  40111e:83 f8 05             cmp    $0x5,%eax  401121:76 05                jbe    401128 &lt;phase_6+0x34&gt;  401123:e8 12 03 00 00       callq  40143a &lt;explode_bomb&gt;    401128:41 83 c4 01          add    $0x1,%r12d  40112c:41 83 fc 06          cmp    $0x6,%r12d  401130:74 21                je     401153 &lt;phase_6+0x5f&gt;  401132:44 89 e3             mov    %r12d,%ebx    401135:48 63 c3             movslq %ebx,%rax  401138:8b 04 84             mov    (%rsp,%rax,4),%eax  40113b:39 45 00             cmp    %eax,0x0(%rbp)  40113e:75 05                jne    401145 &lt;phase_6+0x51&gt;  401140:e8 f5 02 00 00       callq  40143a &lt;explode_bomb&gt;    401145:83 c3 01             add    $0x1,%ebx  401148:83 fb 05             cmp    $0x5,%ebx  40114b:7e e8                jle    401135 &lt;phase_6+0x41&gt;40114d:49 83 c5 04          add    $0x4,%r13  401151:eb c1                jmp    401114 &lt;phase_6+0x20&gt;    401153:48 8d 74 24 18       lea    0x18(%rsp),%rsi  ------  大意如下：  for (int i &#x3D; 0; i &lt; 6; ++i) &#123;  if (arr[i] &gt; 6)  bomb();  for (int j &#x3D; i + 1; j &lt; 6; ++j)  if (arr[j] &#x3D;&#x3D; arr[i])  bomb();  &#125;  ------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(这一段挺麻烦的orz…整个phase6我看了整整一天)，总之上一段程序可以得到如下结论</p><ul><li><strong>输入的6个数字互不相等且不超过6</strong></li></ul><p>继续往下分析：</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">401153:48 8d 74 24 18       lea    0x18(%rsp),%rsi&#x2F;&#x2F;si&#x3D;arr.end()401158:4c 89 f0             mov    %r14,%rax40115b:b9 07 00 00 00       mov    $0x7,%ecx401160:89 ca                mov    %ecx,%edx401162:2b 10                sub    (%rax),%edx401164:89 10                mov    %edx,(%rax)&#x2F;&#x2F;arr[i] &#x3D; 7 - arr[i]401166:48 83 c0 04          add    $0x4,%rax40116a:48 39 f0             cmp    %rsi,%rax40116d:75 f1                jne    401160 &lt;phase_6+0x6c&gt;------for (int i &#x3D; 0; i &lt; 6; ++i)arr[i] &#x3D; 7 - arr[i];------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>继续往下看</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">40116f:be 00 00 00 00       mov    $0x0,%esi401174:eb 21                jmp    401197 &lt;phase_6+0xa3&gt;401176:48 8b 52 08          mov    0x8(%rdx),%rdx40117a:83 c0 01             add    $0x1,%eax40117d:39 c8                cmp    %ecx,%eax40117f:75 f5                jne    401176 &lt;phase_6+0x82&gt;401181:eb 05                jmp    401188 &lt;phase_6+0x94&gt;401183:ba d0 32 60 00       mov    $0x6032d0,%edx401188:48 89 54 74 20       mov    %rdx,0x20(%rsp,%rsi,2)40118d:48 83 c6 04          add    $0x4,%rsi401191:48 83 fe 18          cmp    $0x18,%rsi401195:74 14                je     4011ab &lt;phase_6+0xb7&gt;401197:8b 0c 34             mov    (%rsp,%rsi,1),%ecx40119a:83 f9 01             cmp    $0x1,%ecx40119d:7e e4                jle    401183 &lt;phase_6+0x8f&gt;40119f:b8 01 00 00 00       mov    $0x1,%eax4011a4:ba d0 32 60 00       mov    $0x6032d0,%edx4011a9:eb cb                jmp    401176 &lt;phase_6+0x82&gt;4011ab:48 8b 5c 24 20       mov    0x20(%rsp),%rbx------ 新建数组，narr，首地址为0x20(%rsp)for (int i &#x3D; 0; i &lt; 6; ++i) &#123;int count &#x3D; arr[i];int address &#x3D; 0x6032d0;for (int j &#x3D; 1; j &lt; count; ++j)address &#x3D; *(address) + 0x8;*(%rsp + 2*%rsi + 0x20) &#x3D; address;&#125;------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从而新数组<code>narr</code>的首地址为%rsp+0x20，结束地址(narr.end())为%rsp+0x50（一个数据为一个地址，占据8个字节），输出一下0x6032d0处存储的地址值</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210331111938939.png" alt="image-20210331111938939"></p></li></ul><p>继续往下分析汇编代码(终于快结束了orz…)</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">4011ab:48 8b 5c 24 20       mov    0x20(%rsp),%rbx4011b0:48 8d 44 24 28       lea    0x28(%rsp),%rax4011b5:48 8d 74 24 50       lea    0x50(%rsp),%rsi4011ba:48 89 d9             mov    %rbx,%rcx4011bd:48 8b 10             mov    (%rax),%rdx4011c0:48 89 51 08          mov    %rdx,0x8(%rcx)4011c4:48 83 c0 08          add    $0x8,%rax4011c8:48 39 f0             cmp    %rsi,%rax4011cb:74 05                je     4011d2 &lt;phase_6+0xde&gt;4011cd:48 89 d1             mov    %rdx,%rcx4011d0:eb eb                jmp    4011bd &lt;phase_6+0xc9&gt;4011d2:48 c7 42 08 00 00 00 movq   $0x0,0x8(%rdx)------for (int i &#x3D; 1; i &lt; 6; ++i) &#123;*(narr[i - 1] + 0x8) &#x3D; narr[i];&#125;------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后的代码：</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">4011d2:48 c7 42 08 00 00 00 movq   $0x0,0x8(%rdx)4011d9:00 4011da:bd 05 00 00 00       mov    $0x5,%ebp4011df:48 8b 43 08          mov    0x8(%rbx),%rax4011e3:8b 00                mov    (%rax),%eax4011e5:39 03                cmp    %eax,(%rbx)4011e7:7d 05                jge    4011ee &lt;phase_6+0xfa&gt;4011e9:e8 4c 02 00 00       callq  40143a &lt;explode_bomb&gt;4011ee:48 8b 5b 08          mov    0x8(%rbx),%rbx4011f2:83 ed 01             sub    $0x1,%ebp4011f5:75 e8                jne    4011df &lt;phase_6+0xeb&gt;------for (int i &#x3D; 1; i &lt; 6; ++i) &#123;if (*narr[i - 1] &lt; *narr[i])bomb();&#125;------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>继续回顾一下0x6032d0处的取值</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210331114704652.png" alt="image-20210331114704652"></p><p>总结前面的汇编代码我们可以得出：</p><ul><li>narr[1…6]存储{0x6032d0, 0x6032e0, 0x6032f0, 0x0x603300, 0x603310, 0x603320}这几个地址</li><li>这几个地址处存储的整数值，满足逆序排序的关系，即*(narr[i - 1]) &gt;= *(narr[i])</li><li>narr[i]由7-arr[i]映射而来</li></ul><p>满足*(narr[i - 1] &gt;= *(narr[i]))的数组顺序为</p><pre class="line-numbers language-none"><code class="language-none">3456120x6032f00x6033000x6033100x6033200x6032d00x6032e0924691477443332168<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>由于第一行的对应下标为7-arr[i]得来的（为什么不是0开头呢？因为变换前后都要满足0&lt;=arr[i]&lt;=6，所以准确来说arr[i]&gt;=1），因此arr[i]，也就是phase6的<strong>key</strong>为</p><p><strong>4 3 2 1 6 5</strong></p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora_image_2021_03_26/image-20210331122034081.png" alt="image-20210331122034081"></p><p>至此，bomblab就全部完成了。当然还有一个彩蛋关，如果各位时间充裕的话可以尝试一下，这里就挖个坑（可能不会填）。这个lab确实花费了我蛮长的准备时间，以及中间做的时候翻了好多别人的博客（有能力的话建议独立解决），从gdb调试器的用法到简单汇编代码的拆分和阅读，确实是一个不错的练习机会。</p><h3 id="参考">参考</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/57977157">https://zhuanlan.zhihu.com/p/57977157</a></p><p><a href="https://zhuanlan.zhihu.com/p/104130161">https://zhuanlan.zhihu.com/p/104130161</a></p><p><a href="https://github.com/luy-0/CS-APP-LABs/blob/master/Lab-Answer_HB/Lab2-BombLab/L2-Bomb-Note.md">https://github.com/luy-0/CS-APP-LABs/blob/master/Lab-Answer_HB/Lab2-BombLab/L2-Bomb-Note.md</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
          <category> CSAPP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2021暑实投递记录(持久更新)</title>
      <link href="/2021/03/11/interview-20210311/"/>
      <url>/2021/03/11/interview-20210311/</url>
      
        <content type="html"><![CDATA[<blockquote><p>可以明显感觉到，最近每的心态和压力都异常大。既要起早贪黑没日没夜弥补自己基础知识，又看着一个接一个同学收到offer，导致自己每天都处在自我怀疑的纠结状态中。至少到目前为止，这是我20年来最艰难的时期，比以往任何小打小闹的挫折都要正式。这个大三，我跨过了无数槛，走出了一个又一个的舒适区，我不知道最终结果如何，但这就是我最切身难忘的时期，不得不面对的现实。无所谓结果如何，吸取到教训并可以快速及时改正，这段时间就没白折腾。</p></blockquote><p>​</p><p>​暑实岗位随便挑了一个（？）直接投的，技术栈不匹配那是血的教训啊orz…<br>​        我自认为是一个讲究高效率的人，恰好腾讯的<strong>效率奇高无比</strong>，所以一面结束后发了通知当晚九点直接二面，然后想都没想直接决定当天解决。<br>​        其实复盘再看的话这不是一个科学的做法，让你加班面试一个five你会抱着好心情去面？严格来说并不难，但是一天对线两次确实挺消耗体力的，况且到二面结尾的时候面试官直接点破了“我赶时间”…也算一个教训了。这次准备的并不充分，因此希望大家准备好这些问题再去投简历：</p><ol><li><p>明确好投递岗位的具体工作内容及其相关的技术栈（比如DB不熟的话不要去运维这种反而对DB要求高的岗位</p></li><li><p>核心能力：<strong>数据结构+算法</strong>，时间空间复杂度也要会分析</p></li><li><p>不要<strong>只会</strong>准备算法，语言特性+计网+OS（包括linux使用与原理）+数据库<strong>原理</strong>，底层原理知道越细越好，这些基础不过关完全没机会。</p></li><li><p>对于实习生来说，项目不是必须的，但是是<strong>绝对的加分项</strong>，项目与岗位工作内容的匹配关系越高越有优势</p></li><li><p><s>有事没事别乱说你熟悉C++，不投是最好的…</s></p></li></ol><hr><h3 id="腾讯CSIG-运营开发-·-一面（2021-03-11-——-31min">[腾讯CSIG]运营开发 · 一面（2021-03-11 —— 31min)</h3><ol><li>（凑数的）项目介绍（技术栈不匹配，也就看个乐）</li><li>（数据结构）解释一下二叉树、AVL树、B+树</li><li>（数据结构）解释一下哈希表、如何解决哈希冲突</li><li>（数据结构）堆和栈的区别</li><li>（计算机网络）HTTP的长连接和短连接</li><li>（计算机网络）TCP三次握手和四次挥手</li><li>（计算机网络）GET和POST的区别</li><li>（计算机网络）网络拥塞如何避免</li><li>（计算机网络）输入一段URL发生了什么</li><li>（OS）进程间的通信机制，各自的优缺点</li><li>（OS）操作系统中的调度算法有哪些</li><li>（数据库）数据库的事务特性ACID（lz只知道个InnoDB）</li><li>（系统设计）如何设计一个秒杀系统？（这里只讲述一下思路就好）</li><li>（分布式系统？）解释一下负载均衡、削峰填谷（不会，没记错的话我直接过的）</li><li>（凑数的）职业规划</li><li>（凑数的）学生工作经历</li></ol><hr><h3 id="腾讯CSIG-运营开发-·-二面（2021-03-11-——-20min快速凉）">[腾讯CSIG]运营开发 ·  二面（2021-03-11 —— 20min快速凉）</h3><ol><li>（C++语言特性）常用的STL及其底层实现（不会，直接跳过）</li><li>（C++语言特性）C++继承是怎么一回事</li><li>（C++语言特性）解释一下C++多态</li><li>（算法）列举常用的排序算法</li><li>（算法-QuickSort）如何实现快排</li><li>（算法-TopK）给定10w个数，找到最大的10个数，如何实现，给出时间复杂度</li><li>（算法）哈希冲突如何解决</li><li>（OS）Linux常用的命令有哪些</li><li>（OS）Linux的文件系统如何实现</li><li>（OS）解释一下多进程和多线程</li><li>（计算机网络）TCP/UDP的区别</li><li>（计算机网络）TCP的滑动窗口机制</li><li>（数据库）对数据库了解到哪些程度（lz只知道个InnoDB，直接跳过）</li><li>（数据库）知道触发器的概念吗（不会）</li><li>（网络编程）解释一下select和epoll（嘴欠了…）</li></ol><hr><h3 id="腾讯PCG-运营开发-·-一面-2021-03-18——20min快速凉">[腾讯PCG]运营开发 · 一面(2021-03-18——20min快速凉 )</h3><p>其实每次事后复盘发现真的都不难orz…相比之下，CSIG的一面二面都是偏向于八股文的，只是一星期前的自己还不够成熟。这一周补了不少底层的基础，但是面试官问的表层orz…又是一次教训，既然准备过别人准备过的，所有坑都得自己踩。<strong>今天状态太差了</strong></p><ol><li>自我介绍</li><li>（计算机网络）URL的解析过程</li><li>（计算机网络）追问：你刚才说到DNS缓存，DNS有哪些不同级别的缓存，分别是什么？（嘴欠，说解析的时候上面提到过）</li><li>（计算机网络）HTTP状态码有哪些？解释一下302、304、502、503等</li><li>（计算机网络）HTTP如何保存用户状态</li><li>（计算机网络）TCP四次挥手</li><li>（计算机网络）TCP如何保证传输的可靠性</li><li>（计算机网络）TCP的滑动窗口机制</li><li>（Linux）进程存在哪些状态</li><li>（Linux）常用的Linux指令：查看CPU使用状态、查看进程、查看网络使用状态、查看内存使用状态（我都是随用随查= =）</li><li>（语言特性）Python的垃圾回收机制听说过吗？（没听过，知道java有，不知道Python还有这玩意orz…，顺利GG）</li></ol><p><strong>—复盘</strong></p><ul><li><p>我在简历上写了：“熟悉C++、Python、Linux环境下的开发工作”，然后按照这些点疯狂追问，没把握的别写（不过我不改了，坑该填就得填）</p></li><li><p>背八股文有必要，但是不要奔着热点问题背起来没完，大家都知道这些热点问题，<strong>回答过程中出现的任何一处问题都会被细挖</strong></p></li><li><p>控制好自己的语言逻辑，今天表现比前几天差很多，不自信，说话漏洞百出，语序不条理</p></li><li><p><strong>联系一下实际应用</strong>（确实，感谢@EdVince）</p></li></ul><hr><h3 id="阿里云-C-开发-·-一面-2021-03-24——25min">[阿里云] C++开发 · 一面(2021-03-24——25min)</h3><p><strong>临场发挥就拉了</strong>。好！又补了一波基础（说直白点还是挂了orz…）。面试官他们这边的组主要写Java多一点（下边这些我再次都没看过orz…面着面着没感觉了，考虑的还是不太充分，近期需要把以前那些基础知识重新系统性地理一遍。</p><ol><li><p>自我介绍</p></li><li><p>（算法）100亿个随机数据，内存很小，如何找到中位数？</p></li><li><p>（算法）介绍一下DFS和BFS，分别使用哪些数据结构？</p></li><li><p>（语言特性）define和enum的联系和区别？</p></li><li><p>（语言特性）struct和class分别在什么情况下应用？</p></li><li><p>（语言特性）sizeof和strlen有什么区别和联系？</p></li><li><p>（思考）两个人轮流掷硬币，掷出正面的一方获胜，先掷一方的获胜概率有多大？</p></li><li><p>（语言特性）static函数和普通函数有什么联系和区别？</p></li><li><p>（凑数的）介绍一下最近看过的技术书</p><p>· 挖坑：介绍一下WebRTC是个啥（后面慢慢补）</p></li><li><p>（语言特性）对比一下Go和C++，Go的优势在哪？分别从多个维度评价一下</p></li></ol><hr><h3 id="腾讯CSIG-后台开发-·-一面（2021-04-03——48min">[腾讯CSIG] 后台开发 · 一面（2021-04-03——48min)</h3><p>这个面试官比较和蔼，感觉他一直在试图捞我，答不上来的也一直引导，能过还是很意外的吧orz…</p><ol><li>自我介绍</li><li>简单挖了一下项目</li><li>（计算机网络）TCP和UDP的区别</li><li>（计算机网络）如何实现一个可靠的UDP</li><li>（计算机网络）如果设计一个WebServer，如何去实现（太宏观了，一开始没思路，下面引导了一下）</li><li>（计算机网络）地址栏输入URL的解析过程</li><li>（计算机网络）TCP的四次挥手</li><li>（计算机网络）TCP的拥塞控制机制</li><li>（计算机网络）HTTP报文的结构与Header内容</li><li>（OS）进程和线程的区别？多进程和多线程的适用场景</li><li>（OS）协程了解过吗（线程跟进程和协程跟线程类比一下）</li><li>（数据库）数据库的事务特性</li><li>（数据库）隔离性通过什么实现的</li><li>（数据库）MVCC机制的原理</li><li>（数据库）数据库的隔离级别，分别解决和未解决了哪些问题，默认使用哪种级别？</li><li>（算法）QuickSort的实现原理和时空复杂度</li><li>（智力题）有一种玻璃球，从100层高的楼的某一层开始，扔下去会碎。现在有<strong>两个</strong>玻璃球，最多扔多少次，可以确定这个“最小碎球层”（引导着优化了一下）</li><li>（智力题）海量数据，查找其中某一条数据的查询方案</li></ol><hr><h3 id="腾讯CSIG-后台开发-·-二面-2021-04-08——30min">[腾讯CSIG]后台开发 · 二面 (2021-04-08——30min)</h3><p>比较轻松流畅的一次，绝大部分时间在撕项目，体验算是最好的了。因为对自己的项目比较熟悉，所以让你进入状态之后，整个面试流程就没那么压抑了。</p><ol><li>自我介绍</li><li>深挖项目（这块就花了将近20min，不过因人而异，不展开了）</li><li>（计算机网络）HTTP和HTTPs的区别</li><li>（Linux）Linux常用的指令</li><li>（Web）Nginx了解过吗，简单介绍下</li><li>（OS | Web）消息队列介绍一下（想了下他说的应该是RabbitMQ和Kafka之类的，我当IPC里的消息队列回答了）</li><li>（智力题）海量随机数据，内存很小，如何找到他们的中位数？（感谢阿里那位面试官让我找了这个教训）</li><li>（闲扯）老家是哪的</li><li>（闲扯）实习地点在深圳，可以接受吗</li></ol><hr><h3 id="腾讯CSIG-后台开发-·-三面（2021-04-13——20min）">[腾讯CSIG]后台开发 · 三面（2021-04-13——20min）</h3><p>这次基本GG，讲道理我之前基础补的差不多了（起码常规题不出意外完全可以过），这次大概是总监面？(还是压力面啊…)。在我看来题目非常难非常怪，而且面试官语气也比较冲的样子，开局被震撼到，不过也一直有意无意地去引导往数据结构的思路去调整，不过他太吓人了我全程还是怂的不行orz。估计要故意筛人了，知道问题在哪了，成不成就这样咯~</p><ol><li>自我介绍（时间短了点，面试官：就这？）</li><li>（OS）进程和线程的区别</li><li>（OS）线程有哪些资源</li><li>（OS）进程间通信方式</li><li>（OS）消息队列的优先级</li><li>（OS）如果要往<strong>共享内存</strong>写入二叉树，如何写入，会遇到什么问题？</li><li>（计算机网络）<strong>后台</strong>如何处理长短连接？分别适用于哪些场景？（感觉这个偏业务）</li><li>（计算机网络）场景：在一个服务器上设置一个120s的短连接生存周期，现在是一个高并发场景，假如有120w个连接涌入，对于每一个连接请求，我们要检查它的请求状态，就要对这120w个连接重复遍历，这样的时间开销是很大的，如何有一个统一的优化方案？（热点连接缓存？我感觉他一直有意引导往哈希表的方向考虑，但是一直不确定orz…）</li><li>（OS）什么是CPU的用户态和内核态？</li><li>（OS）内核态在什么场景下会极大地增大时间开销？</li><li>（语言特性）内存池有了解过吗</li><li>（智力题）A文件10亿个数据，B文件10w个数据，内存很小，找出它们的交集，并给出最优时空复杂度（分治不是最优的噢）</li><li>（闲扯）老家是哪的？（我这是被拉黑了嘛…）</li></ol>]]></content>
      
      
      <categories>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面经 </tag>
            
            <tag> 实习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoXDUNCovReport——图文教程</title>
      <link href="/2021/03/07/tech-xduautoreport/"/>
      <url>/2021/03/07/tech-xduautoreport/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文使用Repo：<a href="https://github.com/Robotxm/AutoXduNCovReport">https://github.com/Robotxm/AutoXduNCovReport</a></p><p>技术支持：<a href="https://www.moefactory.com">@Robotxm</a></p></blockquote><ol><li><p><strong>前期准备</strong></p><ul><li>GitHub账号</li><li>良好的英文阅读能力(或者google翻译用的熟)</li><li>一定的程序阅读能力（不会也没关系，知道到<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Scope">作用域</a>的表示范围即可）</li></ul></li><li><p><strong>使用说明</strong></p><p>前往引用栏中的<a href="https://github.com/Robotxm/AutoXduNCovReport">Repo地址</a>，<strong>Fork</strong>当前仓库（图示右数第一个）</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210307162246591.png" alt="image-20210307162246591"></p><p>进入到<strong>自己</strong>Fork后的仓库中</p><p>点击<strong>Settings -&gt; Secrets -&gt; New repository secret</strong>，新建<code>USERNAME</code>和<code>PASSWORD</code>变量（值分别设定为自己的<code>学号</code>和<code>一站式密码</code>）</p><p>对于<strong>晨午晚检/疫情通</strong>，我们需要额外创建两个secrets:</p><ul><li><p><strong>FUNCTION</strong>：<code>tcheck</code> （对于<strong>疫情通</strong>value设置为<code>ncov</code>)</p></li><li><p><strong>CAMPUS</strong>：<code>-c S</code>（北校区请设定为<code>-c N</code>，<strong>疫情通</strong>请设定为空值）</p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210307165250901.png" alt="image-20210307165250901"></p></li><li><p>*注：需要额外新建一个secret并取名为<code>SCKEY</code>, 如果你需要使用<a href="http://sc.ftqq.com/1.version">Serverchan</a>，value请自行设定（要不然后面报错）</p></li><li><p>点击导航栏的<strong>Actions</strong></p><ol><li>如果原作者的<strong>donet.yaml</strong>文件正常存在，点击进入<strong>Rerun-jobs</strong></li></ol><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210307171245222.png" alt="image-20210307171245222"></p><p>点击<em>Auto NCov Report</em></p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210307171305288.png" alt="image-20210307171305288"></p><p>点击图示右上角的<em>Re-run jobs</em>，等待build完成，<s>然后就可以当一个脚本怪愉快地玩耍了</s></p><p><img src="https://msigl62m-1258130641.cos.ap-shanghai.myqcloud.com/typora-user-images/image-20210307171554475.png" alt="image-20210307171554475"></p><ol start="2"><li>如果没有 <strong>.yaml</strong> 文件，需要我们自动生成：</li></ol><p>在<strong>Suggestions</strong>中会出现**.NET<strong>的自动提示，点击</strong>Set up with this workflow’**，即可看到一个.yaml文件</p><p><code>name</code>字段可以自行设定，在<code>on</code>字段的作用域中，我们需要移除<code>push</code>和<code>pull</code>子作用域，并添加如下信息:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span><span class="token key atrule">schedule</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">cron</span><span class="token punctuation">:</span> <span class="token string">'0 0,4,12 * * *'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>workflow_dispatch</code> 可以让我们手动启动workflow. 在<strong>Actions</strong>中, 点击 左侧的<strong>Auto NCov Report</strong> 然后点击右侧的<strong>Run workflow</strong> . <code>schedule</code> 设定在特定时间运行workflow.</p><p>*注：GitHub使用UTC+0时区，因此如果使用GMT（UTC+8）时区，需要从我们的所需时间在减去8小时。因此，<code>0 0,4,12 * * *</code>表示任务将在每天的8:00 UTC + 8（0:00 UTC + 0），12：00 UTC + 8（4:00 UTC + 0）和20:00 UTC + 8 (12:00 UTC+0)时刻执行。</p><p>接下来，在<code>steps</code>中，将<code>Build</code>和<code>Test</code> 的区间使用如下内容替换（如下内容表示在特定时刻立刻提交并接收通知）</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run and send notification  <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    cd AutoXduNCovReport    dotnet run -- $&#123;&#123; secrets.FUNCTION &#125;&#125; -u $&#123;&#123; secrets.USERNAME &#125;&#125; -p $&#123;&#123; secrets.PASSWORD &#125;&#125; $&#123;&#123; secrets.CAMPUS&#125;&#125; -k $&#123;&#123; secrets.SCKEY &#125;&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>保存并commit此workflow，然后我们可以尝试手动运行并检查执行结果</p></li></ul></li></ol><hr><p><strong>注意事项</strong>：</p><p>该工具会在提交每日信息时使用您<strong>之前提交过的信息</strong>，因此，如果您想更改地理位置，请在该tool执行前（即您所设定的3个时间点）手动在<strong>晨午检/疫情通</strong>页面提交信息</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP Lab (01)-Data Lab</title>
      <link href="/2021/03/05/csapp-datalab/"/>
      <url>/2021/03/05/csapp-datalab/</url>
      
        <content type="html"><![CDATA[<blockquote><p>update: 2022-07-19：研究生入学前重新修炼一遍内功，以及在WSL2上使用Ubuntu22.04进行重新实验</p></blockquote><hr><blockquote><p>本文记录了CSAPP配套实验——Data Lab的详情WriteUp</p></blockquote><ul><li>运行环境：<ul><li>Ubuntu 22.04</li></ul></li></ul><hr><h2 id="Directions">Directions</h2><ul><li><p><strong>Files</strong>:</p><p>Makefile- Makes btest, fshow, and ishow<br>README- This file<br>bits.c- The file you will be modifying and handing in<br>bits.h- Header file<br>btest.c- The main btest program<br>btest.h- Used to build btest<br>decl.c- Used to build btest<br>tests.c       - Used to build btest<br>tests-header.c- Used to build btest<br>dlc*- Rule checking compiler binary (data lab compiler)<br><a href="http://driver.pl">driver.pl</a>*- Driver program that uses btest and dlc to autograde bits.c<br><a href="http://Driverhdrs.pm">Driverhdrs.pm</a>   - Header file for optional “Beat the Prof” contest<br>fshow.c- Utility for examining floating-point representations<br>ishow.c- Utility for examining integer representations</p></li><li><p><strong>Modifying bits.c and checking it for compliance with dlc</strong></p><p><strong>IMPORTANT</strong>: Carefully read the instructions in the bits.c file before you start. These give the coding rules that you will need to follow if you want full credit.</p><p>Use the dlc compiler (./dlc) to automatically check your version of bits.c for compliance with the coding guidelines:</p><pre class="line-numbers language-none"><code class="language-none">unix&gt; .&#x2F;dlc bits.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>dlc returns silently if there are no problems with your code. Otherwise it prints messages that flag any problems.  Running dlc with the -e switch:</p><pre class="line-numbers language-none"><code class="language-none">unix&gt; .&#x2F;dlc -e bits.c  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>causes dlc to print counts of the number of operators used by each function.</p><p>Once you have a legal solution, you can test it for correctness using the ./btest program.</p></li><li><p><strong>Testing with btest</strong></p><p>The Makefile in this directory compiles your version of bits.c with additional code to create a program (or test harness) named btest.</p><p>To compile and run the btest program, type:</p><pre class="line-numbers language-none"><code class="language-none">unix&gt; make btestunix&gt; .&#x2F;btest [optional cmd line args]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>You will need to recompile btest each time you change your bits.c program. When moving from one platform to another, you will want to get rid of the old version of btest and generate a new one.  Use the commands:</p></blockquote><pre class="line-numbers language-none"><code class="language-none">unix&gt; make cleanunix&gt; make btest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Btest tests your code for correctness by running millions of test cases on each function.  It tests wide swaths around well known corner cases such as Tmin and zero for integer puzzles, and zero, inf, and the boundary between denormalized and normalized numbers for floating point puzzles. When btest detects an error in one of your functions, it prints out the test that failed, the incorrect result, and the expected result, and then terminates the testing for that function.</p><p><em>Here are the command line options for btest</em>:</p><p>unix&gt; ./btest -h<br>Usage: ./btest [-hg] [-r <code>&lt;n&gt;</code>] [-f <code>&lt;name&gt;</code> [-1|-2|-3 <code>&lt;val&gt;</code>]*] [-T <code>&lt;time limit&gt;</code>]<br>-1 <code>&lt;val&gt;</code>  Specify first function argument<br>-2 <code>&lt;val&gt;</code>  Specify second function argument<br>-3 <code>&lt;val&gt;</code>  Specify third function argument<br>-f <code>&lt;name&gt;</code> Test only the named function<br>-g        Format output for autograding with no error messages<br>-h        Print this message<br>-r <code>&lt;n&gt;</code>    Give uniform weight of n for all problems<br>-T <code>&lt;lim&gt;</code>  Set timeout limit to lim</p><p><em>Examples</em>:</p><p>Test all functions for correctness and print out error messages:<br>unix&gt; ./btest</p><p>Test all functions in a compact form with no error messages:<br>unix&gt; ./btest -g</p><p>Test function foo for correctness:<br>unix&gt; ./btest -f foo</p><p>Test function foo for correctness with specific arguments:<br>unix&gt; ./btest -f foo -1 27 -2 0xf</p><p>Btest does not check your code for compliance with the coding guidelines.  Use dlc to do that.</p></li><li><p><strong>Helper Programs</strong></p><p>We have included the ishow and fshow programs to help you decipher integer and floating point representations respectively. Each takes a single decimal or hex number as an argument. To build them type:</p><pre class="line-numbers language-none"><code class="language-none">unix&gt; make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>Example usages</em>:</p><pre class="line-numbers language-none"><code class="language-none">unix&gt; .&#x2F;ishow 0x27Hex &#x3D; 0x00000027,Signed &#x3D; 39,Unsigned &#x3D; 39unix&gt; .&#x2F;ishow 27Hex &#x3D; 0x0000001b,Signed &#x3D; 27,Unsigned &#x3D; 27unix&gt; .&#x2F;fshow 0x15213243Floating point value 3.255334057e-26Bit Representation 0x15213243, sign &#x3D; 0, exponent &#x3D; 0x2a, fraction &#x3D; 0x213243Normalized.  +1.2593463659 X 2^(-85)linux&gt; .&#x2F;fshow 15213243Floating point value 2.131829405e-38Bit Representation 0x00e822bb, sign &#x3D; 0, exponent &#x3D; 0x01, fraction &#x3D; 0x6822bbNormalized.  +1.8135598898 X 2^(-126)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Writeup">Writeup</h2><h3 id="1-bitXor">1. bitXor</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * bitXor - x^y using only ~ and &amp;  *   Example: bitXor(4, 5) = 1 *   Legal ops: ~ &amp; *   Max ops: 14 *   Rating: 1 */</span><span class="token keyword">int</span> <span class="token function">bitXor</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> com1 <span class="token operator">=</span> x <span class="token operator">&amp;</span> y<span class="token punctuation">;</span>  <span class="token keyword">int</span> com2 <span class="token operator">=</span> <span class="token operator">~</span>x <span class="token operator">&amp;</span> <span class="token operator">~</span>y<span class="token punctuation">;</span>   <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token operator">~</span>com1 <span class="token operator">&amp;</span> <span class="token operator">~</span>com2<span class="token punctuation">;</span>  <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>布尔代数公式化简一下即可。</p><h3 id="2-tmin">2. tmin</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * tmin - return minimum two's complement integer  *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; >> *   Max ops: 4 *   Rating: 1 */</span><span class="token keyword">int</span> <span class="token function">tmin</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  res <span class="token operator">&lt;&lt;=</span> <span class="token number">31</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> res<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>补码表示法最小值，根据补码的定义，左移到最高位即可。</p><h3 id="3-isTmax">3. isTmax</h3>  <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * isTmax - returns 1 if x is the maximum, two's complement number,  *     and 0 otherwise   *   Legal ops: ! ~ &amp; ^ | +  *   Max ops: 10  *   Rating: 1  */</span> <span class="token keyword">int</span> <span class="token function">isTmax</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">int</span> tmin <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//10000000</span>   x <span class="token operator">=</span> x <span class="token operator">+</span> tmin<span class="token punctuation">;</span> <span class="token comment">//11111111</span>   x <span class="token operator">=</span> <span class="token operator">~</span>x<span class="token punctuation">;</span><span class="token comment">//00000000</span>   tmin <span class="token operator">=</span> <span class="token operator">!</span>tmin<span class="token punctuation">;</span><span class="token comment">//0, if x==0xffffffff, tmin = 1</span>   x <span class="token operator">=</span> x <span class="token operator">+</span> tmin<span class="token punctuation">;</span><span class="token comment">//0 , if x == 0xffffffff, x = 1</span>   <span class="token keyword">return</span> <span class="token operator">!</span>x<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>tmax=0x7FFFFFFF</p><p>tmin=0x10000000=tmax+1</p><p>对于0xFFFFFFFF，tmin=0x00000000，注意到此时对tmin取**逻辑非！<strong>得到结果为1；若x为tmax则对tmin进行</strong>！**运算后得到的结果应当为0</p><h3 id="4-allOddBits">4. allOddBits</h3><pre class="line-numbers language-C" data-language="C"><code class="language-C">&#x2F;*  * allOddBits - return 1 if all odd-numbered bits in word set to 1 *   where bits are numbered from 0 (least significant) to 31 (most significant) *   Examples allOddBits(0xFFFFFFFD) &#x3D; 0, allOddBits(0xAAAAAAAA) &#x3D; 1 *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; *   Max ops: 12 *   Rating: 2 *&#x2F;int allOddBits(int x) &#123;int base &#x3D; 0xAA;base +&#x3D; base &lt;&lt; 8;    base +&#x3D; base &lt;&lt; 16;   int tmp &#x3D; x &amp; base; &#x2F;&#x2F;tmp &#x3D;&#x3D; base if satisfied    int res &#x3D; !(tmp ^ base);    return res;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-negate">5. negate</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * negate - return -x  *   Example: negate(1) = -1. *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; >> *   Max ops: 5 *   Rating: 2 */</span>  <span class="token keyword">int</span> <span class="token function">negate</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">/*Definition of two's complement*/</span>      <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token operator">~</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> res<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-isAsciiDigit">6. isAsciiDigit</h3>  <pre class="line-numbers language-C" data-language="C"><code class="language-C">&#x2F;*   * isAsciiDigit - return 1 if 0x30 &lt;&#x3D; x &lt;&#x3D; 0x39 (ASCII codes for characters &#39;0&#39; to &#39;9&#39;)  *   Example: isAsciiDigit(0x35) &#x3D; 1.  *            isAsciiDigit(0x3a) &#x3D; 0.  *            isAsciiDigit(0x05) &#x3D; 0.  *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;  *   Max ops: 15  *   Rating: 3  *&#x2F; int isAsciiDigit(int x) &#123;   &#x2F;*   x - 0x30 &gt;&#x3D; 0 &amp;&amp; 0x39 - x &gt;&#x3D; 0   move right 31 bits to check if opr_res &gt;&#x3D; 0   *&#x2F;   int a &#x3D; ~0x30 + 1;   int l &#x3D; x + a;   x &#x3D; ~x + 1;   int r &#x3D; 0x39 + x; int res &#x3D; !(l &gt;&gt; 31) &amp; !(r &gt;&gt; 31);   return res; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-conditional">7. conditional</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * conditional - same as x ? y : z  *   Example: conditional(2,4,5) = 4 *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; >> *   Max ops: 16 *   Rating: 3 */</span><span class="token keyword">int</span> <span class="token function">conditional</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/*  C语言默认类型执行逻辑左移和算术右移*/</span>  x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">!</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">;</span><span class="token comment">//produce 0x0 or 0xffffffff</span>  <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token punctuation">(</span>y <span class="token operator">&amp;</span> <span class="token operator">~</span>x<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>z <span class="token operator">&amp;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-isLessOrEqual">8. isLessOrEqual</h3><pre class="line-numbers language-C" data-language="C"><code class="language-C">&#x2F;*  * isLessOrEqual - if x &lt;&#x3D; y  then return 1, else return 0  *   Example: isLessOrEqual(4,5) &#x3D; 1. *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt; *   Max ops: 24 *   Rating: 3 *&#x2F;int isLessOrEqual(int x, int y) &#123;  &#x2F;*  1. judge the sign of two nums  2. x_sign &lt; 0 and y_sign &gt; 0  OR x_sign the same as y_sign and y-x &gt;&#x3D; 0 (which means (y-x)&gt;&gt;31 &#x3D;&#x3D; 0)  *&#x2F;  int x_sign &#x3D; x &gt;&gt; 31;  int y_sign &#x3D; y &gt;&gt; 31;  int res &#x3D; (x_sign &amp; !y_sign) | (!(x_sign ^ y_sign) &amp; !((y + ~x + 1) &gt;&gt; 31));  return res;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-logicalNeg">9. logicalNeg</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * logicalNeg - implement the ! operator, using all of  *              the legal operators except ! *   Examples: logicalNeg(3) = 0, logicalNeg(0) = 1 *   Legal ops: ~ &amp; ^ | + &lt;&lt; >> *   Max ops: 12 *   Rating: 4  */</span><span class="token keyword">int</span> <span class="token function">logicalNeg</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/*  neg: sign bit is not 0  pos: plus tmax to overflow except 0   get res of 1 for not 0, and 0 for 0  */</span>  <span class="token keyword">int</span> tmax <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> sign <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x01</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> res <span class="token operator">=</span> sign <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">+</span> tmax<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  res <span class="token operator">=</span> res <span class="token operator">^</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-howManyBits">10. howManyBits</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* howManyBits - return the minimum number of bits required to represent x in *             two's complement *  Examples: howManyBits(12) = 5 *            howManyBits(298) = 10 *            howManyBits(-5) = 4 *            howManyBits(0)  = 1 *            howManyBits(-1) = 1 *            howManyBits(0x80000000) = 32 *  Legal ops: ! ~ &amp; ^ | + &lt;&lt; >> *  Max ops: 90 *  Rating: 4 */</span><span class="token keyword">int</span> <span class="token function">howManyBits</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/*  for positive num: the last bit of 1 plus the sign bit  for negative num: the last bit of 0  */</span>  <span class="token keyword">int</span> sign <span class="token operator">=</span> x <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">;</span>  x <span class="token operator">=</span> <span class="token punctuation">(</span>sign <span class="token operator">&amp;</span> <span class="token operator">~</span>x<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token operator">~</span>sign <span class="token operator">&amp;</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//complement the bit</span>  <span class="token keyword">int</span> b16<span class="token punctuation">,</span> b8<span class="token punctuation">,</span> b4<span class="token punctuation">,</span> b2<span class="token punctuation">,</span> b1<span class="token punctuation">,</span> b0<span class="token punctuation">;</span>  b16 <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//to check if the highest 16 bits include '1' bit, if including, then x move 16 bit to the R direction</span>  x <span class="token operator">=</span> x <span class="token operator">>></span> b16<span class="token punctuation">;</span>  b8 <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>  x <span class="token operator">=</span> x <span class="token operator">>></span> b8<span class="token punctuation">;</span>  b4 <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>  x <span class="token operator">=</span> x <span class="token operator">>></span> b4<span class="token punctuation">;</span>  b2 <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>  x <span class="token operator">=</span> x <span class="token operator">>></span> b2<span class="token punctuation">;</span>  b1 <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  x <span class="token operator">=</span> x <span class="token operator">>></span> b1<span class="token punctuation">;</span>  b0 <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token keyword">int</span> res <span class="token operator">=</span> b16 <span class="token operator">+</span> b8 <span class="token operator">+</span> b4 <span class="token operator">+</span> b2 <span class="token operator">+</span> b1 <span class="token operator">+</span> b0 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>太菜了orz…这题看的题解。基本思路类似于二分。</p><h3 id="11-floatScale2">11. floatScale2</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*   * floatScale2 - Return bit-level equivalent of expression 2*f for *   floating point argument f. *   Both the argument and result are passed as unsigned int's, but *   they are to be interpreted as the bit-level representation of *   single-precision floating point values. *   When argument is NaN, return argument *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while *   Max ops: 30 *   Rating: 4 */</span><span class="token keyword">unsigned</span> <span class="token function">floatScale2</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> uf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> exp <span class="token operator">=</span> <span class="token punctuation">(</span>uf <span class="token operator">&amp;</span> <span class="token number">0x7f800000</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">23</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> sign <span class="token operator">=</span> uf <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">==</span> <span class="token number">255</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> uf<span class="token punctuation">;</span> <span class="token comment">// NaN</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>uf <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">|</span> sign<span class="token punctuation">;</span><span class="token comment">//not regular</span>  exp <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">==</span> <span class="token number">255</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> sign <span class="token operator">|</span> <span class="token number">0x7f800000</span><span class="token punctuation">;</span><span class="token comment">//add to not regular</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>uf <span class="token operator">&amp;</span> <span class="token number">0x807fffff</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>exp <span class="token operator">&lt;&lt;</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-floatFloat2Int">12. floatFloat2Int</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * floatFloat2Int - Return bit-level equivalent of expression (int) f *   for floating point argument f. *   Argument is passed as unsigned int, but *   it is to be interpreted as the bit-level representation of a *   single-precision floating point value. *   Anything out of range (including NaN and infinity) should return *   0x80000000u. *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while *   Max ops: 30 *   Rating: 4 */</span><span class="token keyword">int</span> <span class="token function">floatFloat2Int</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> uf<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">unsigned</span> exp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>uf <span class="token operator">&amp;</span> <span class="token number">0x7f800000</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">127</span><span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> sign <span class="token operator">=</span> uf <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> frac <span class="token operator">=</span> uf <span class="token operator">&amp;</span> <span class="token number">0x007fffff</span> <span class="token operator">|</span> <span class="token number">0x00800000</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>uf <span class="token operator">&amp;</span> <span class="token number">0x7fffffff</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">></span> <span class="token number">31</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> <span class="token number">0x80000000u</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">></span> <span class="token number">23</span><span class="token punctuation">)</span>    frac <span class="token operator">&lt;&lt;=</span> <span class="token punctuation">(</span>exp <span class="token operator">-</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    frac <span class="token operator">>>=</span> <span class="token punctuation">(</span><span class="token number">23</span> <span class="token operator">-</span> exp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token punctuation">(</span>frac <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token operator">^</span> sign<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> frac<span class="token punctuation">;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>frac <span class="token operator">>></span> <span class="token number">31</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0x80000000</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token operator">~</span>frac <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><s>此题看的题解，我太菜了orz</s></p><p>我们将浮点数的符号、阶码、尾数分别拆开</p><ul><li>若阶码E部分大于31小于0，可以直接返回异常值</li><li>对frac直接移位，再判断是否溢出。</li></ul><h3 id="13-floatPower2">13. floatPower2</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/*  * floatPower2 - Return bit-level equivalent of the expression 2.0^x *   (2.0 raised to the power x) for any 32-bit integer x. * *   The unsigned value that is returned should have the identical bit *   representation as the single-precision floating-point number 2.0^x. *   If the result is too small to be represented as a denorm, return *   0. If too large, return +INF. *  *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. Also if, while  *   Max ops: 30  *   Rating: 4 */</span><span class="token keyword">unsigned</span> <span class="token function">floatPower2</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> INF <span class="token operator">=</span> <span class="token number">0xff</span> <span class="token operator">&lt;&lt;</span> <span class="token number">23</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> exp <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">127</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>exp <span class="token operator">>=</span> <span class="token number">255</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> INF<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>exp <span class="token operator">&lt;&lt;</span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x7f800000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浮点数的定义如下</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>V</mi><mo>=</mo><msup><mn>2</mn><mi>E</mi></msup><mo>×</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">V = 2^E \times M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9747em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p><p>对于非规格化数值来讲，设定 <code>M=0</code>即可，因此我们只需要关注阶码E，加上Bias偏置值即可。</p>]]></content>
      
      
      <categories>
          
          <category> 基础知识 </category>
          
          <category> CSAPP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>站在交叉路口前</title>
      <link href="/2021/03/04/diary-20210304/"/>
      <url>/2021/03/04/diary-20210304/</url>
      
        <content type="html"><![CDATA[<hr><p>​很巧的一天，正在归档整理blog的时候xm突然问我要不要聚餐。当时我还一愣找谁聚，但是当时他只是催我赶紧的，所以也没多想直接光速蹭饭(虽然最终也没有蹭到多少就是了。直到赶到之后才发现原来是工作室的老朋友们好久不见，趁着大鸡爪子毕业前，趁着xm还没回字节，一起聚个餐。</p><hr><h3 id="有一天，时间真的能倒退">有一天，时间真的能倒退</h3><p>​认识他们刚不久，发现我们现在都已经大三了。大学生活已经过去了两年半，其中有半年疫情在家gap，也不能说完全荒废，起码让我们这一代人的本科生涯几乎断档半年。回想起学长们例会布置任务，线下疯狂对线，彷佛这一切都发生在昨天。想想其实真的蛮遗憾，自从认识他们以来从来没有一次，像今天这样可以聚在一起促膝长谈。</p><p>​其实从他们口中也不难了解到，我们大多数人的本科生涯，尤其是在西电，几乎完全没有认真考虑过职业规划的问题。如xm这样能够独立开发出服务于全校同学的优质原生APP的人都是少数（而且用爱发电不拿它水比赛之类的orz…）。好多人，到头来只是会做个毫无实际用途的题罢了(如果你有学术理想的话可以无视这段话，<s>当然骂我我也不介意</s>)。</p><p>​有时候想，自己当了两年的做题家也并非一无所有。认识了一群有趣宝贵而又富有开阔视野的人，甚至到现在还在保持着密切联系，也可以大概率拿得到保研资格，这无非可以给我现在这样一个没有特别扎实的计算机基础的菜鸡提供了一个实习不成而去读研的机会（虽然在他们眼里确实有点凡尔赛的意思2333），不过我的思路越来越清晰，越来越知道自己需要去做什么。</p><p>​在我这样一个风气极其畸形的学院里，我这种做法，可能在大多数卷王眼里有点匪夷所思吧（苦笑），但是人各有志。读研的劝退读研，工作的劝退工作，公务员劝退考公。个人认为，<strong>围城现象的本质还是没有提前打开信息通路，没有对预计的收益和风险做出相应的心理准备与备选方案</strong>。我不是不敢冒险，而是我在冒险之前，会再三考虑自己是否能够承担因为错误的决策所造成的一系列后果，并且能否为这个后果做出相应的预案。中泰证券对我的投资行为评估是：稳健型。生活中的我也确实如此吧。</p><hr><h3 id="那些回不去的拼搏时光">那些回不去的拼搏时光</h3><p>​早一些接触牵扯到利益冲突的社会阴暗面，其实也不算坏事。人们对于所谓的牛人盲目崇拜，可当实际接触牛人之后才发现，牛人也是人啊，牛人也有缺点，他们也不过如此。他们强在对于认定事物的长期坚持与专注投入，但是并不会面面俱到。所以，很想告诉那位还年轻的大一学弟，踏踏实实学习，打好基础，放手做一些让内心安定的事情，没有错的，至少也可以兜底。</p><p>​（写不完的明天更…</p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 生活感想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello, Blog转移</title>
      <link href="/2021/02/22/0-newblogbyhexo/"/>
      <url>/2021/02/22/0-newblogbyhexo/</url>
      
        <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>不知道折腾了多少次这个nt玩意了，原来在阿里云申请的域名和ECS已经快过期了，而且一大坨乱七八糟的代理设置没有搞好，正好趁机迁移一下(p.s.包括前端练习生计划的那个vuepress)<br>总之，敢放出来就不怕看咯orz</p><p>构建方式采用 Github Pages + Hexo<br>参考: <a href="https://www.bilibili.com/video/BV1Yb411a7ty">CodeSheep. 手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo. site: bilibili</a></p><hr><h3 id="原Blog-已过期">原Blog(已过期)</h3><p><a href="http://120.26.185.209/">http://120.26.185.209/</a><br>申请域名：<a href="https://www.nexcylinder.com">https://www.nexcylinder.com</a></p><hr><p>以下为官方自动生成的Quick Start教程</p><h3 id="Create-a-new-post">Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo n<span class="token punctuation">[</span>ew<span class="token punctuation">]</span> <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo s<span class="token punctuation">[</span>erver<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo g<span class="token punctuation">[</span>enerate<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo d<span class="token punctuation">[</span>eploy<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><hr><h3 id="2021-05-21更新">2021-05-21更新</h3><p>​在原有的基础上做了一点小小的升级：</p><ul><li>更换主题为<code>hexo-theme-butterfly</code>(花里胡哨的)</li><li>文章支持<code>top_img</code></li><li>评论系统更换为<code>Valine</code></li><li>添加了看板娘<code>shizuku</code></li><li>利用Github Actions实现CI/CD workflow，可以在不同主机上自动部署，教程<a href="https://sanonz.github.io/2020/deploy-a-hexo-blog-from-github-actions/#%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1">点击此处</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奖学金与综测的二三事</title>
      <link href="/2020/04/19/diary-20200419/"/>
      <url>/2020/04/19/diary-20200419/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文归档自http://120.26.185.209/index.php/2020/04/19/%e5%a5%96%e5%ad%a6%e9%87%91%e4%b8%8e%e7%bb%bc%e6%b5%8b%e7%9a%84%e4%ba%8c%e4%b8%89%e4%ba%8b/</p></blockquote><p>​前段时间去NTU访学拿到的补助终于发下来了23333，一共8k，对我现在来说还是蛮多的。我并不想把它当成生活费或者学费去垫，很想入一台Surface Pro轻度使用。对于我这样一个经常背电脑出去浪的人来说，6斤重的游戏本简直就是噩梦好么…而且很不辛的是为了背这坨重铁我已经搞坏了两个书包了orz…其中一个还是NTU发的劣质包。</p><p>​8k块以奖学金的形式发放，提到这个我就想起来同样8k的国奖。</p><p>​去年综合测评的时候我自己像傻了一样疯狂地扣分扣分，有一些该加的也没有加。XDU其实蛮穷的，相较于其他985强校的奖学金力度我们这个简直就是打发要饭的…说难听了，这不该，对不起我冲动了。事实证明我还蛮幸运的，27分自评分数没打再加上10几分的综合模块分忘记加的前提下还能混到一个三流专业的三等奖学金第一名，即便如此一等奖学金的人似乎也是很菜的hhhhh。毕竟我在我周围扣分比我还多的人似乎并没有那么多？自评没打满很正常，但是像我这样奇葩的大概找不到。</p><p>​就当是一次教训吧。因为国家奖学金之下的这些钱差距只有几百块，缺倒是确实不缺，但是也是蛮遗憾也蛮失望的吧。遗憾是因为本可以做到更好，失望的真的对那些精致的利己主义者失望。似乎我从小到大就一直蛮实诚的，有时候可能不是一件好事，但是可以说是我自己的问题吗？还是说这个大环境就是功利性的，甚至连那些什么玩意都不会的混子居然都能拿国家奖学金？也罢，我多少也算个混子。穷则独善其身，达则兼济天下。</p><p>​好像很多人在急功近利的路上丢掉了自己的初心了呢。我们的初心是什么呢？就是为了拿国奖？就是为了推免？推免资格毕竟有限，在转专业之后这个内卷化极其严重的智能院很难生存，但是倘若真的无法推免又能如何呢？多参与多学习始终不会错的呀！emmm公布了开学时间，各个学校的还很难说，先老老实实复习8，我还不急。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这是一次文艺复兴之旅</title>
      <link href="/2020/04/09/diary-20200408/"/>
      <url>/2020/04/09/diary-20200408/</url>
      
        <content type="html"><![CDATA[<blockquote><p>​本文归档自http://120.26.185.209/index.php/2020/04/09/%e8%bf%99%e6%98%af%e4%b8%80%e6%ac%a1%e6%96%87%e8%89%ba%e5%a4%8d%e5%85%b4%e4%b9%8b%e6%97%85/</p></blockquote><p>​Blog这种东西在我小学二年级的时候就已经玩了个遍，但是很不幸，曾经的巨头网易在去年宣告停止服务，之前的文章也没有办法归档，不知道失去了多少有价值回忆。</p><p>​这次鸽掉了好几节网课摸出来一个不那么像样的雏形，域名甚至都没来及的备案23333。我把能搜集到的曾经说的乱七八糟的话先放在这，可能有些惨不忍睹，但是这确实是备忘的一种绝佳的办法。我也不算骚气的文艺青年（虽然也没少骚），但是这几年我已经经历了不知道多少失去，甚至有一段时间头脑发热清空了所有的QQ空间说说。幼稚归幼稚，还是觉得冲动，可惜。</p><p>​曾经在爱拍上拍过不知道多少水视频，直到前不久才知道要关站，连给你备份的时间都没有，说停就停，不知道把多少年来用户的积蓄清空了，自己不思进取还让用户为它的过错买单。互联网是有记忆的。我学过的技术并不多，但是基本的搜索技巧还有吧，虽然把一个人的底翻出来并不好，但是在网络上生活的痕迹是可以在停站之前一直保存，直到被我这样闲的人挖出来。可能就是在这种信息透明的压力之下我才删掉说说？记不清了，我自己想的啥我都不清楚。</p><p>​先当一个prototype放在这里测试一下，等我美工技巧熟练之后会上传一些更有意义的笔记之类的东西。可能也没啥人看所以就当一个废话筒吧，这是难得的个人空间。互联网最迷人的地方在于它有着充分的自由精神同时还有着给人创造一个封闭空间的自由，here we are。</p><p>​为什么不依赖于第三方站点呢…？可能不想让第三方平台看见，也可能是为了试着独立。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
